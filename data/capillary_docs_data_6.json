[
  {
    "url": "https://docs.capillarytech.com/docs/overview_android-sdk",
    "page_slug": "overview_android-sdk",
    "title": "Overview",
    "content": "Overview\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nOverview\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nOverview\nThis guide provides an overview about Capillary's Android SDK.\nCapillary SDK enables you with essential analytics capabilities and helps you engage better with your users through\nevents tracking\n,\npush notifications\nand a\nnotification center\n.\nPrerequisites\nAndroid SDK version V21 or above\ntargetSdkVersion 33\ncompileSdkVersion 33\nGoogle Firebase account\nAndroid SDK Size\nSDK library\nSize\nhydra-core-1.0.1\n258 KB\nhydra-firebase-1.0.1\n26 KB\nhydra-pushbase-1.0.1\n83 KB\nTo integrate your mobile apps with Capillary Android SDK, perform the below steps:\nConfigure Firebase and gateway\n- Capillary mobile apps team\nSet up source account\n- CSM/ Project Manager of the project\nInstall the SDK\n-\nInitialise the SDK\nSet up events tracking\nConfigure push notification\nTable of Contents\nPrerequisites\nAndroid SDK Size"
  },
  {
    "url": "https://docs.capillarytech.com/docs/configure-firebase",
    "page_slug": "configure-firebase",
    "title": "Configure firebase",
    "content": "Configure firebase\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nConfigure firebase\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nConfigure firebase\nThis section helps you with information on configurations that you need to do on Firebase.\nIn the Google Firebase, perform the following:\nOpen\nGoogle Firebase\nand create the project. Refer to\nFirebase documentation\n.\nSet up cloud messaging. Refer to\nCloud messaging documentation\n.\nNavigate to project settings and define a custom role with below permissions:\nfcmdata.deliverydata.list\nfirebase.clients.get\nfirebase.clients.list\nfirebase.projects.get\nfirebasenotifications.messages.create\nfirebasenotifications.messages.delete\nfirebasenotifications.messages.get\nfirebasenotifications.messages.list\nfirebasenotifications.messages.update\niam.serviceAccounts.get\ncloudmessaging.messages.create\nThe role assigned to the service account determines the level of access and permissions it has within your Firebase project. Choosing the appropriate role ensures that the service account has the necessary privileges to perform required tasks. For information on how to create a custom role, refer to\nCustom role documentation\n.\nCreate a service account with the newly created custom role permission. For information on service account creation, refer to\nService account documentation\n. It is recommended to use a service account name that helps to identify the purpose and its role in the project.\nGenerate a new service account private key. This enables you to authenticate and authorize requests made by your SaaS platform.\nIt is recommended to use the key type as JSON.  This provides the key in a structured and easily readable key file in JSON format. For information on how to create the service account private key, refer to\nService account key documentation\n.\nGateway Configuration\nTo enable mAPP SDK Channel and the push notifications, the team setting up the Firebase account for the brand must raise a ticket with the gateways team with details requested by them.\nTable of Contents\nGateway Configuration"
  },
  {
    "url": "https://docs.capillarytech.com/docs/set-up-source-account",
    "page_slug": "set-up-source-account",
    "title": "Set up source account",
    "content": "Set up source account\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nSet up source account\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nSet up source account\nThis section provides you with information on how to set up a source account and set the connection between SDK and the org.\nUsing a single source account for iOS and Android\nIf all information apart from the Bundle ID, such as the FCM Project ID, Identifier type, etc., remains the same for both iOS and Android, you can use a single source account for both platforms. In the\nBundle Name\nfield, you can specify the Bundle IDs for both iOS and Android apps. These IDs should be separated by a semicolon.\nIf brands wish to switch to a single source account ID for existing integrations, they must request the app developer to make the necessary changes on their end. Subsequently, in one of the source accounts, brands should input both the values of the bundle ID and deprecate the remaining source account.\nThis change will not impact the subscription status response, and it will not require any action from the app developer.\nFor instance, in the payload below, both the iOS and Android channels share the same accountId, contrasting with previous usage where different source accountIds were employed.\nAndroid\niOS\n{  \n    \"channel\": \"ANDROID\",  \n    \"accountId\": \"~2024ba96\",  \n    \"priority\": \"BULK\",  \n    \"type\": \"OPTIN\",  \n    \"sourceName\": \"MAPP_SDK\"  \n}\n{  \n    \"channel\": \"iOS\",  \n    \"accountId\": \"~2024ba96\",  \n    \"priority\": \"BULK\",  \n    \"type\": \"OPTIN\",  \n    \"sourceName\": \"MAPP_SDK\"  \n}\nTo configure the source account, perform the following:\nNavigate to\nOrganisation settings > Omni Channel Settings > Channel Configurations\nand click\nMAPP_SDK\n.\nClick\nAdd new account\nand in the\nAdd new account\npage, enter the following details:\nAccount Name\n- Enter the channel account name.\nSource Account Id\n- Displays the service account id. This is auto-generated.\nEnable Mirror\n- Not required\nAccount Linking Identifier\n- The account linking identifier is used to register a user and form a connection with the member care profile. The account linking identifier drop-down provides a selection of available identifier options. This set of options remains consistent across all Orgs, regardless of whether a specific identifier is configured for a particular Org or not.\nAndroid/IOS\n- Select the correct checkbox according to the mobile apps in your account.\nValid till Name\n- Select the till from the drop-down. The drop-down displays the tills available in the respective org.\nBundle name\n-  Enter the app bundle name. Contact the app developer for the bundle name. You can add multiple bundle IDs separated by a semicolon. Multiple bundle names can be entered when you use the same source account for both iOS and Android. For example,\nandroid:com.capillary.product.android.one;ios:com.capillary.product.ios.x\n.\nApp signature\n- Enter the app signature. This is required only for Android apps. Contact the app developer for the app signature.\nFCM Project ID\n- Enter the Firebase project ID. This is available in the\nProject settings > General tab\n.\nFCM Email\n- Enter the FCM service account e-mail. This is available on the service account page in FCM.\nPrevious Deep Links\n- Displays previous deep links, if any.\nAdd Deep links\n- This is optional. The deep links added here will be available in Engage+ creatives for push notifications.\nTable of Contents\nUsing a single source account for iOS and Android"
  },
  {
    "url": "https://docs.capillarytech.com/docs/configure-gateway",
    "page_slug": "configure-gateway",
    "title": "Configure gateway",
    "content": "Configure gateway\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nConfigure gateway\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nConfigure gateway\nThe Capillary Gateway configuration involves collaboration between the Mobile Capillary App Team, Gateway team, and the Sustenance Team.\nThe App Team generates the client token and project ID details, which are then incorporated into the Data Pipeline Management Gateway (DPMG) by the Sustenance Team. Additionally, credit files (data related to credit transactions such as points and rewards based on defined criteria) in JSON format for various platforms (android-trans, android-bulk, iOS-trans, iOS-bulk) are processed.\nThe App Team provides client token and project ID details required for Capillary Gateway setup, to the Sustenance team.\nVerification of Existing Entries:\nThe Sustenance Team checks if corresponding entries exist for the root organization (orgId=0) in the DPMG.\nIf entries do not exist, proceed to step 3. Otherwise, use the existing IDs.\nAdding New Entries to DPMG:\nUtilize the provided client token and project ID details to create new entries in the DPMG.\nReview and confirm configuration details such as host names, service URLs, authentication credentials, and message settings, as per the information provided in the\ntable\n.\nFollow the insert statement provided in the hotswap link for inserting new entries.\nEnsure that the IDs in gateway_org_configs match with the gateway_id in the DPMG.\nServer Restart Request:\nAfter completing the setup and configuration process, request a server restart from the Engage side.\nThis ensures that any changes made to the Capillary Gateway configurations take effect.\nCapillary Gateway Configuration Details\nid\norg_id\nshort_name\nhost_name\nfull_name\nusername\npassword\nconnection_properties\nservice_ip\nservice_url\nstatus_check_url\nmessage_class\nmessage_priority\nchannel_count\nstatus\nis_private\nstatus_check_type\nproperties\nstart_time\nend_time\nauto_update_time\n2066\n0\nfcmios_bulk\nfcmios\nfcm\ntest\ntest\n{}\n127.0.0.1\nhttps://fcm.googleapis.com/fcm/send\nIOS\nBULK\n5\nACTIVE\n0\nPUSH\n{\"scopes\":[\"campaign\"]}\n1970-01-01 00:00:00\n2100-01-01 00:00:00\n2020-09-29 14:40:15\n2067\n0\nfcmios_trans\nfcmios\nfcm\ntest\ntest\n{}\n127.0.0.1\nhttps://fcm.googleapis.com/fcm/send\nIOS\nHIGH\n5\nACTIVE\n0\nPUSH\n{\"scopes\":[\"optout\",\"otp\",\"highvoltrans\",\"transaction\"]}\n1970-01-01 00:00:00\n2100-01-01 00:00:00\n2020-09-29 14:40:15\n2068\n0\nfcmandroid_bulk\nfcmandroid\nfcm\ntest\ntest\n{}\n127.0.0.1\nhttps://fcm.googleapis.com/fcm/send\nANDROID\nBULK\n5\nACTIVE\n0\nPUSH\n{\"scopes\":[\"campaign\"]}\n1970-01-01 00:00:00\n2100-01-01 00:00:00\n2022-07-11 11:56:34\n2069\n0\nfcmandroid_trans\nfcmandroid\nfcm\ntest\ntest\n{}\n127.0.0.1\nhttps://fcm.googleapis.com/fcm/send\nANDROID\nHIGH\n5\nACTIVE\n0\nPUSH\n{\"scopes\":[\"optout\",\"otp\",\"highvoltrans\",\"transaction\"]}\n1970-01-01 00:00:00\n2100-01-01 00:00:00\n2020-09-29 14:40:15\nTable of Contents\nCapillary Gateway Configuration Details"
  },
  {
    "url": "https://docs.capillarytech.com/docs/installing-sdk",
    "page_slug": "installing-sdk",
    "title": "Install SDK",
    "content": "Install SDK\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nInstall SDK\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nInstall SDK\nThis section provides information on how to install SDK.\nInstalling with version catalog\nTo install the SDK along with a version catalog, perform the following:\n1. Enable version catalog\nThe\nversion catalog\nhelps in the central declaration of dependencies and helps to improve version management.  By updating the version catalog, the necessary updates to the SDK's components are handled automatically.\nEnable the version catalog (version 1.4.0). It For Gradle version 7.4 or below the version catalog is a 'featurepreview' and you need to enable the version catalog in your project's\nsettings.gradle(.kts)\n. To enable, use the below code snippet:\nenableFeaturePreview(\"VERSION_CATALOGS\")\nFor the Gradle version above 7.4, the version catalog is enabled by default\n2. Add SDK to the project\nCapillary recommends using Maven for adding the Capillary SDK to your Android project. Capillary Android SDK is hosted on jcenter maven repository.\nTo add the SDK to your project,\nAdd\nmaven\nin the repositories section of your project's\nsettings.gradle(.kts)\nfile as shown below:\nGroovy\nrepositories {\n   …\n   maven {\n       url \"<https://maven.pkg.github.com/Capillary/hydra-sdk-android-maven>\"\n       credentials {\n           username props['username’]\n password props['token']\n       }\n   }\n}\nCreate a\ngithub.properties\nfile to access the Capillary SDK maven repository. Use below code snippet below:\nusername=\"USERNAME\" token=\"TOKEN\nReplace USERNAME and TOKEN with your actual credentials. For information on generating TOKEN from GitHub, refer to the\nGitHub documentation\n.\n3. Declare version catalog\nAdd the desired catalog to your project and assign it a name. This can be done by defining the catalog in the\ndependencyResolutionManagement\nblock of the\nsettings.gradle(.kts)\nfile. Once this is done, the\nsettings.gradle\nfile appears as follows:\nGroovy\nenableFeaturePreview(\"VERSION_CATALOGS\")  \ndependencyResolutionManagement {  \n   repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)  \n   repositories {  \n       google()  \n       mavenCentral()  \n       maven {  \n           name \"GitHubPackages\"  \n           url = uri(\"<https://maven.pkg.github.com/Capillary/hydra-sdk-android-maven\">)  \n           credentials {  \n               username = props['username’]  \n               password = props['token']  \n           }  \n       }  \n       versionCatalogs {  \n           create(\"hydra\"){  \n               from(\"com.capillary:hydra-catalog:x.x.x\")  \n           }  \n       }  \n   }  \n}\n4. Add dependencies of the SDK\nAdd the required dependency for your module in the\nbuild.gradle(.kts)\nfile. To do this, you need to use a combination of\ncatalog_name\ndefined in the\nsettings.gradle(.kts)\nand alias defined in the catalog.\nAdd AndroidX libraries in the\napp/build.gradle\nfile. The AndroidX libraries make sure that the project has access to the necessary AndroidX components.\nCode snippet to add dependencies and AndroidX libraries:\nbuild.gradle.kts\ndependencies {  \n   // AndroidX libraries  \n implementation(\"androidx.core:core:xxx\")  \n implementation(\"androidx.appcompat:appcompat:xxx\")  \n implementation(\"androidx.lifecycle:lifecycle-process:xxx\")  \n   // Hydra Sdk  \n implementation(hydra.core)  \n  implementation(hydra.pushbase)  \n  implementation(hydra.firebase)  \n}\nInstalling without version catalog\nYou can also install SK without a version catalog. To install SDK without a version catalog, perform the following.\nCapillary recommends using Maven for adding the Capillary SDK to your Android project. Capillary Android SDK is hosted on jcenter maven repository.\nTo add the SDK to your project,\nAdd\nmaven\nin the repositories section of your project's\nproject/build.gradle\nfile as shown below:\nGroovy\nrepositories {  \n   …  \n   maven {  \n       url \"<https://maven.pkg.github.com/Capillary/hydra-sdk-android-maven>\"  \n       credentials {  \n           username props['username']  \n           password props['token']  \n       }  \n   }  \n}\nCreate a\ngithub.properties\nfile to access the Capillary SDK maven repository.\nUse below code snippet:\nusername=\"USERNAME\" token=\"TOKEN\nReplace USERNAME and TOKEN with your actual credentials.\nAdd the required dependency for your module along with the AndroidX libraries in the\napp/build.gradle\nfile. The AndroidX libraries make sure that the project has access to the necessary AndroidX components.\nCode snippet:\napp/build.gradle\ndependencies {  \n   // AndroidX libraries  \n implementation(\"androidx.core:core:xxx\")  \n implementation(\"androidx.appcompat:appcompat:xxx\")  \n implementation(\"androidx.lifecycle:lifecycle-process:xxx\")  \n   // Hydra Sdk  \n implementation(\"com.capillary:hydra-core:xxx\")  \n   // Hydra Sdk  \n implementation(\"com.capillary:hydra-firebase:xxx\")  \n implementation(\"com.capillary:hydra-pushbase:xxx\")  \n}\nTable of Contents\nInstalling with version catalog\n1. Enable version catalog\n2. Add SDK to the project\n3. Declare version catalog\n4. Add dependencies of the SDK\nInstalling without version catalog"
  },
  {
    "url": "https://docs.capillarytech.com/docs/sdk-initialisation",
    "page_slug": "sdk-initialisation",
    "title": "Initialise SDK",
    "content": "Initialise SDK\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nInitialise SDK\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nInitialise SDK\nThis section provides information on initialisation of the SDK.\nTo initiate the Capillary SDK,\nCreate an instance of the SDK for each application. This API needs to be called in the\nonCreate()\nof the application class with the\nHydraConfig\n. You can use this instance in your code to interact with the SDK.\nKotlin\nJava\nfun instanceWithConfig(  \n   context: Context, config: HydraConfig  \n): HydraAPI\npublic HydraAPI instanceWithConfig(Context context, HydraConfig config) {\n    // Function body goes here\n}\nProvide configuration in the SDK using\nHydraConfig\n. The SDK accepts several parameters. The parameter accountId is mandatory. If accountID is not provided, the SDK throws an exception. All other parameters are optional.\nKotlin\nJava\nvar accountId: String,  \nvar baseURL: String?,  \nvar sslPublicKey: String?,  \nvar country: String?,  \nvar city: String?,  \nvar countryCode: String?,  \nvar captureViewPortDetails: Boolean,  \nvar isDisableAppLaunchedEvent: Boolean,  \nvar debugLevel: Int  \nvar fcmConfig:FcmConfig = defaultFcmConfig(),  \nval notificationConfig: NotificationConfig? = null\nString accountId;\nString baseURL;\nString sslPublicKey;\nString country;\nString city;\nString countryCode;\nboolean captureViewPortDetails;\nboolean isDisableAppLaunchedEvent;\nint debugLevel;\nFcmConfig fcmConfig = defaultFcmConfig();\nAdd the SDK initialization block in the\nonCreate\ncallback of your application class as shown below:\nKotlin\nJava\nval hydraConfig = HydraConfig.Builder(  \n   applicationContext,  \n   accountId = \"PARTNER_ACCOUNT_ID\"  \n)  \n   .debugLevel(LogType.VERBOSE)  \n   .captureViewPortDetails(true)  \n   .country(\"India\")  \n   .city(\"Pune\")  \n   .countryCode(\"91\")  \n   .baseURL(\"PARTNER_HYDRA_URL\")  \n   .sslPublicKey(\"PARTNER_SSL_PUBLIC_KEY_FOR_HYDRA_URL\")  \n   .build()\nHydraConfig hydraConfig = new HydraConfig.Builder(applicationContext)\n    .setAccountId(\"PARTNER_ACCOUNT_ID\")\n    .setDebugLevel(LogType.VERBOSE)\n    .setCaptureViewPortDetails(true)\n    .setCountry(\"India\")\n    .setCity(\"Pune\")\n    .setCountryCode(\"91\")\n    .setBaseURL(\"PARTNER_HYDRA_URL\")\n    .setSslPublicKey(\"PARTNER_SSL_PUBLIC_KEY_FOR_HYDRA_URL\")\n    .build();\nParameter\nType\nDescription\nMandatory/Optional\naccountId\nString\nAccount ID of the partner\nMandatory\n.debugLevel\nLogType\nLogging Config i.e. OFF(-1), INFO(0), DEBUG(1), VERBOSE(2)\nOptional\n.captureViewPortDetails\nBoolean\nCapture ViewPort information\nOptional\n.country\nString\nCountry name\nOptional\n.city\nString\nCity name\nOptional\n.countryCode\nString\nCountry code value\nOptional\n.baseURL\nString\nBase URL of region\nOptional\n.sslPublicKey\nString\nValid SSL Public Key of URL\nOptional\n.fcmConfig\nFcmConfig object\nFirebase Configuration\nOptional (If not using Firebase SDK)\n.notificationConfig\nNotificationConfig object\nNotification Configuration\nOptional (If not using Firebase SDK)\nCreate an instance of the\nHydraAPI\nwith\nHydraConfig\n. Use the below functional call:\nHydraAPI.instanceWithConfig(applicationContext, hydraConfig)\nParameter\nType\nDescription\nOptional/Mandatory\napplicationContext\nContext\nApplication context\nMandatory\nhydraConfig\nHydraConfig\nHydraConfig object\nMandatory"
  },
  {
    "url": "https://docs.capillarytech.com/docs/track-events",
    "page_slug": "track-events",
    "title": "Set up events tracking",
    "content": "Set up events tracking\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nSet up events tracking\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nSet up events tracking\nCapillary SDK allows you to track events to gain insights into your app's usage patterns and categorise users based on their actions. For example, events such as signing in, launching an app, viewing a product, etc are used to track individual actions performed by users in your app or website.\nThere are 2 types of events:\nStandard events\n- These events are configured in the SDK and cannot be removed.  With Capillary SDK, you can record user-specific information such as their username, first name, last name, email, mobile number, and other custom information, along with system information, in the events. This information can then be used to run campaigns based on user segregation at different levels.\nBehavioural events\n- The events resource also allows you to create behavioural events to track any other important user interactions for your business. For example, events such as forgot password, cart abandonment etc. These events can be further defined by event attributes such as price, quantity, and category. These events need to be configured in your org settings.\nFor behavioural events, you need to do configuration in the Hydraconfig and organisation settings.\nSending standard events to SDK\nThe SDK offers four event-tracking APIs for recording for reporting user action events. These APIs enable you to recognize visitors, monitor events, generate events dynamically, and track the activities of users, including any properties that describe their actions. This information can be used to gain insights into user behaviour and create campaigns based on user segmentation at different levels. For example, with the user event data, you can send welcome messages to customers through e-mail or offer different offers based on user age, gender etc.\nThe SDK has below standrad event tracking APIs:\nSign In\nSign Up\nUser Update\nSign Out\nEach user in the app should have a unique identifier (cuid) associated with their account. Provide this identifier whenever a user signs up or signs in. This enables cross-device and cross-platform tracking, leading to improved behavioural and demographic data quality.\nSign In\nThis API enables reporting of a SignIn event to the SDK.\nKotlin\nJava\nfun pushUserSignin(  \n   cuid: String,  \n   firstName: String? = null,  \n   lastName: String? = null,  \n   email: String? = null,  \n   phone: String? = null,  \n   customData: Map\\<String, Any>? = null  \n)\npublic void pushUserSignin(String cuid, String firstName, String lastName, String email, String phone, Map<String, Object> customData) {\n    // Function body\n}\nParameter\nType\nDescription\nOptional/Mandatory\ncuid\nString\nIdentifier for the user, either phone/email/externalId\nMandatory\nfirstName\nString\nFirst name of the user\nOptional\nlastName\nString\nLast name of the user\nOptional\nemail\nString\nEmail address of the user\nOptional\nphone\nString\nPhone number of the user\nOptional\ncustomData\nMap\nMap of custom attributes for the user\nOptional\nExample:\nUser push sign-in event to SDK with optional details.\nKotlin\nJava\nhydraAPI?.pushUserSignin(  \n   \"9000090000\",  \n   \"Henry\",  \n   \"Williams\",  \n   \"\n[email protected]\n\",  \n   \"9000090000\",  \n   mapOf(\"Age\" to \"25\",\"Gender\" to \"Male\"))\nif (hydraAPI != null) {\n    hydraAPI.pushUserSignin(\n        \"9000090000\",\n        \"Henry\",\n        \"Williams\",\n        \"\n[email protected]\n\",\n        \"9000090000\",\n        Map.of(\"Age\", \"25\", \"Gender\", \"Male\")\n    );\n}\nUser push sign-in event to SDK without optional details.\nKotlin\nJava\nhydraAPI?.pushUserSignin(  \n   \"9000090000\",  \n   \"\",  \n   \"\",  \n   \"\",  \n   \"\",  \n   emptyMap()  \n)\nif (hydraAPI != null) {\n    hydraAPI.pushUserSignin(\n        \"9000090000\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        Collections.emptyMap()\n    );\n}\nSign up\nThis API enables reporting of a SignUp (user registration) event to the SDK.\nKotlin\nJava\nfun pushUserSignup(  \n   cuid: String,  \n   firstName: String,  \n   lastName: String,  \n   email: String,  \n   phone: String,  \n   customData: Map\\<String, Any>?,\n   subscriptions: List<Any>?\n)\npublic void pushUserSignup(String cuid, String firstName, String lastName, String email, String phone, Map<String, Object> customData) {\n    // Function body\n}\nParameter\nType\nDescription\nOptional/Mandatory\ncuid\nString\nphone/email/externalId\nMandatory\nfirstName\nString\nUser first name\nMandatory\nlastName\nString\nUser last Name\nMandatory\nemail\nString\nUser email address\nMandatory\nphone\nString\nUser mobile number\nMandatory\ncustomData\nMap\nThe attribute map which needs to be set for the user.\nOptional\nsubscriptions\nList\nList of subscriptions which include channel, accountId, priority, type and sourcename.\nOptional\nExample:\nUser push sign-up event to  SDK with all optional details\nKotlin\nJava\nhydraAPI?.pushUserSignup(  \n   \"9000090000\",  \n   \"Henry\",  \n   \"Williams\",  \n   \"\n[email protected]\n\",  \n   \"9000090000\",  \n   mapOf(\"Age\" to \"25\",\"Gender\" to \"Male\")\nif (hydraAPI != null) {\n    hydraAPI.pushUserSignup(\n        \"9000090000\",\n        \"Henry\",\n        \"Williams\",\n        \"\n[email protected]\n\",\n        \"9000090000\",\n        Map.of(\"Age\", \"25\", \"Gender\", \"Male\")\n    );\n}\nUser push sign-up event to  SDK without optional details\nKotlin\nJava\nhydraAPI?.pushUserSignup(  \n   \"9000090000\",  \n   \"\",  \n   \"\",  \n   \"\",  \n   \"\",  \n   emptyMap()  \n)\nif (hydraAPI != null) {\n    hydraAPI.pushUserSignup(\n        \"9000090000\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        Collections.emptyMap()\n    );\n}\nUser update\nThis API enables reporting of a  user details update event to the SDK.\nKotlin\nJava\nfun pushUserUpdate(  \n   cuid: String,  \n   firstName: String? = null,  \n   lastName: String? = null,  \n   email: String? = null,  \n   phone: String? = null,  \n   customData: Map\\<String, Any>? = null  \n)\nif (hydraAPI != null) {\n    hydraAPI.pushUserSignup(\n        \"9000090000\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        Collections.emptyMap()\n    );\n}\nParameter\nType\nDescription\nOptional/Mandatory\ncuid\nString\nphone/email/externalId\nMandatory\nfirstName\nString\nUser first Name\nOptional\nlastName\nString\nUser Last Name\nOptional\nemail\nString\nUser Email address\nOptional\nphone\nString\nUser mobile number\nOptional\ncustomData\nMap\nThe attribute map which needs to be set for the user\nOptional\nExample:\nUser push update event to SDK with optional details\nKotlin\nJava\nhydraAPI?.pushUserUpdate(  \n   \"9000090000\",  \n   \"Henry\",  \n   \"Williams\",  \n   \"\n[email protected]\n\",  \n   \"9000090000\",  \n   mapOf(\"Age\" to \"25\",\"Gender\" to \"Male\")  \n)\nif (hydraAPI != null) {\n    hydraAPI.pushUserUpdate(\n        \"9000090000\",\n        \"Henry\",\n        \"Williams\",\n        \"\n[email protected]\n\",\n        \"9000090000\",\n        Map.of(\"Age\", \"25\", \"Gender\", \"Male\")\n    );\n}\nUser push update event to  SDK without optional details\nKotlin\nJava\nhydraAPI?.pushUserUpdate(  \n   \"9000090000\",  \n   \"\",  \n   \"\",  \n   \"\",  \n   \"\",  \n   emptyMap()  \n)\nif (hydraAPI != null) {\n    hydraAPI.pushUserUpdate(\n        \"9000090000\",\n        \"Henry\",\n        \"Williams\",\n        \"\n[email protected]\n\",\n        \"9000090000\",\n        Map.of(\"Age\", \"25\", \"Gender\", \"Male\")\n    );\n}\nSign out\nThis API enables reporting of a sign out event to the SDK.\nTo log sign-out events, only the cuid is required. You can use the cuid to erase all previously logged user information such as firstName, mobile, etc.\nAPI function:\nKotlin\nJava\nfun pushUserSignOut(  \n cuid: String  \n)\npublic void pushUserSignOut(String cuid) {\n    // Function body\n}\nParameter\nType\nDescription\nOptional/Mandatory\ncuid\nString\nphone/email/externalId\nMandatory\nExample:\nKotlin\nJava\nhydraAPI?.pushUserSignOut(  \n   \"9000090000\",  \n)\nif (hydraAPI != null) {\n    hydraAPI.pushUserSignOut(\"9000090000\");\n}\nPass user preferences\nThis API allows the application to track user preferences by passing settings in a User Preference object with the necessary information.\nAPI function:\nKotlin\nJava\nfun passUserPreferences(cuid: String,   userPreference: UserPreferences)\n\n**Example:**\nhydraAPI?.passUserPreferences(  \n   \"9000090000\", UserPreferences(promOpted, transOpted)  \n)\npublic void passUserPreferences(String cuid, UserPreferences userPreference) {\n    // Function body\n}\nSending behavioural events to SDK\nThese events can be used to track user actions throughout the application. These events are valid only if the SDK receives the\nSignIn\nor\nSignUp\nevents. Events are Invalid if they are called after a\nSignOut\nevent. In order to track these events, users have to pass event names (NotNull or NonEmpty) and attributes (optional).\nCreating behavioural events\nYou need to create the desired behavioural events in the org settings.\nNavigate to\nOrganisation settings > Master Data Management > Data Model > Behavioural events\nand create desired behaviour events. For more information, see\nSet behavioural events\n.\n📘\nThese events enable tracking user actions within the application and are only valid if the user has signed in or signed up with Capillary SDK.\nAdding behavioural events in Hydraconfig\nThe events that you created in the org settings need to be configured in the\nHydraConfig\nto send the events to the SDK.\nAPI function:\nKotlin\nJava\nfun pushEvent(  \n   eventName: String,  \n   attributes: Map\\<String, Any>? = null  \n)\npublic void pushEvent(String eventName, Map<String, Object> attributes) {\n    // Function body\n}\nParameter\nType\nDescription\nMandatory/Optional\nevent_name\nString\nEvent name\nMandatory\nattributes\nMap\nThe attribute map which needs to be set for the event\nOptional\nExample:\nReview events to the SDK\nKotlin\nJava\nHydraAPI.getDefaultInstance(context = this)!!.pushEvent(\n    \"productReviewedMapp\",\n    mapOf(\n        \"event_name\" to \"productReviewedMapp\",\n        \"customerId\" to AppSharedPreferences.getInstance()\n            .getStringSharedPreference(Constants.Pref.MOBILE_NUMBER, \"null\"),\n        \"customerReview\"  to review,\n        \"productName\" to productName\n    )\n)\nHydraAPI.getDefaultInstance(this).pushEvent(\n    \"productReviewedMapp\",\n    new HashMap<String, Object>() {{\n        put(\"event_name\", \"productReviewedMapp\");\n        put(\"customerId\", AppSharedPreferences.getInstance()\n            .getStringSharedPreference(Constants.Pref.MOBILE_NUMBER, \"null\"));\n        put(\"customerReview\", review);\n        put(\"productName\", productName);\n    }}\n);\nRemove from cart event to SDK\nKotlin\nJava\nHydraAPI.getDefaultInstance(this@CartPageActivity)?.pushEvent(\n    \"removedFromCart\",\n    mapOf(\n        \"price\" to clickedItem.amount,\n        \"skuCode\" to clickedItem.sku,\n        \"quantity\" to clickedItem.qty,\n        \"customerId\" to AppSharedPreferences.getInstance().getStringSharedPreference(Constants.Pref.MOBILE_NUMBER,\"null\"),\n        \"event_name\" to \"removedFromCart\"\n    )\n)\nHydraAPI.getDefaultInstance(this).pushEvent(\n    \"removedFromCart\",\n    new HashMap<String, Object>() {{\n        put(\"price\", clickedItem.getAmount());\n        put(\"skuCode\", clickedItem.getSku());\n        put(\"quantity\", clickedItem.getQty());\n        put(\"customerId\", AppSharedPreferences.getInstance().getStringSharedPreference(Constants.Pref.MOBILE_NUMBER, \"null\"));\n        put(\"event_name\", \"removedFromCart\");\n    }}\n);\nPage/Activity events to SDK\nKotlin\nJava\nhydraAPI?.pushEvent(\"Page/Activity successfully opened\")\nClick events with some attributes to SDK\nKotlin\nJava\nhydraAPI?.pushEvent(\"button Click\",  \nmapOf(\"Username\" to \"Henry\", \"Age\" to \"25\", \"Gender\" to \"Male\")  \n)\nif (hydraAPI != null) {\n    hydraAPI.pushEvent(\"Page/Activity successfully opened\");\n}\nCustomer cart details to SDK\nKotlin\nJava\nhydraAPI.pushEvent(\"add to cart\",  \nmapOf(\"Book\" to \"Rich Dad Poor Dad\", \"Phone\" to \"Realme 10\", \"Earphones\" to \"Sony Earbuds\")  \n)\nhydraAPI.pushEvent(\n    \"add to cart\",\n    Map.of(\"Book\", \"Rich Dad Poor Dad\", \"Phone\", \"Realme 10\", \"Earphones\", \"Sony Earbuds\")\n);\nTable of Contents\nSending standard events to SDK\nSending behavioural events to SDK\nCreating behavioural events\nAdding behavioural events in Hydraconfig"
  },
  {
    "url": "https://docs.capillarytech.com/docs/push-notification",
    "page_slug": "push-notification",
    "title": "Push notifications",
    "content": "Push notifications\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nPush notifications\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nPush notifications\nThis page provides you with information on push notifications and how to configure it.\nPush notifications are alerts that appear on a user's screen when an update occurs on the mobile app. The notification appears even if the user is not using the mobile app. They are useful for delivering timely and personalised content to users and can be an effective way to increase user engagement with your app.\nCapillary SDK sends push notifications to Android users using\nFirebase Cloud Messaging\n(FCM).\nPrerequisite\nFCM server API key\nThe FCM Server API key authenticates against Capillary SDK, allowing you to send notifications to your users from Capillary SDK.\nTo fetch your FCM server API key, perform the following:\nOn the\nFirebase developer console\ndashboard, click the settings icon, and click\nProject settings\n.\nUnder the\nCloud Messaging\ntab, you can find your Server key.\nConfiguring FCM for push notifications\nPush registration can be handled by the application or Capillary SDK. Specific configurations are required based on whether SDK or the application performs the below two steps.\nRequesting notification runtime permission (Android 13+)\nFrom Android 13 onwards, by default, push notifications are disabled for mobile applications. The applications have to explicitly ask permission from the end user to allow push notifications.\nCapillary SDK provides helper APIs to show the permission request to the end-user for enabling notifications. Use the below API to show the permission request dialog to the user.\nThis API automatically tracks the response and sets up the required notification channel.\nHydraPushApi.getInstance().requestPushPermission(context)\nConfiguring push registration - App handles the push notification\nBy default, Capillary SDK attempts to register for push tokens. If the mobile application manages the push notification, you must opt out of SDK's token registration. To opt-out, use the below settings:\nKotlin\nJava\nFcmConfig(false) at fcmConfig method\\`\n\n\\`val hydraConfig = HydraConfig.Builder(  \n   applicationContext,  \n   accountId = \"123\"  \n)  \n   .fcmConfig(FcmConfig(false))  \n   .build()  \nHydraAPI.instanceWithConfig(applicationContext, hydraConfig)\nFcmConfig fcmConfig = new FcmConfig(false);\n\nHydraConfig hydraConfig = new HydraConfig.Builder(applicationContext)\n        .setAccountId(\"123\")\n        .setFcmConfig(fcmConfig)\n        .build();\n\nHydraAPI.instanceWithConfig(applicationContext, hydraConfig);\nPass the push token to the SDK\nIf you already have a Firebase Messaging Service registered, you can pass New Token generated from\nonNewToken\nmethod and pass to Capillary SDK via\nHydraFirebaseAPI.getInstance().passPushToken\n. Use the below function:\nKotlin\nJava\noverride fun onNewToken(token: String) {  \n   HydraFirebaseAPI.getInstance().passPushToken(applicationContext, token)  \n}\n@Override\npublic void onNewToken(String token) {\n    HydraFirebaseAPI.getInstance().passPushToken(applicationContext, token);\n}\nIn addition, make sure that you pass the latest token every time to continue receiving push notifications when the previous token changes.\nThe token changes in the following scenarios:\nThe app is restored on a new device\nThe user uninstalls/reinstalls the app\nThe user clears app data.\nPass the push payload to the SDK\nIf you already have a Firebase Messaging Service registered, you can pass\nRemoteMessage\nobjects to SDK via\nHydraFirebaseApi.passPushPayload()\nfrom the\nonMessageReceived()\nin the Firebase receiver. Before passing the payload to the SDK, make sure that the payload is from the Hydra platform using the\nisFromHydraPlatform()\nhelper API provided by the SDK.\nExample: User passing the hydra push payload to the SDK\nKotlin\nJava\nif (HydraPushApi.getInstance().isFromHydraPlatform(remoteMessage.data)) {  \n   HydraFirebaseAPI.getInstance().passPushPayload(applicationContext, remoteMessage.data)  \n}\nif (HydraPushApi.getInstance().isFromHydraPlatform(remoteMessage.getData())) {\n    HydraFirebaseAPI.getInstance().passPushPayload(applicationContext, remoteMessage.getData());\n}\nConfiguring push registration - SDK handles the push notification\nTo make Capillary SDK handle push token registration,\nEnable SDK's token registration. Set the\nFcmConfig(true)\nat\nfcmConfig\nmethod.\nKotlin\nJava\nval hydraConfig = HydraConfig.Builder(  \n   applicationContext,  \n   accountId = \"123\"  \n)  \n   .fcmConfig(FcmConfig(true))  \n   .build()  \nHydraAPI.instanceWithConfig(applicationContext, hydraConfig)\nHydraConfig hydraConfig = new HydraConfig.Builder(applicationContext)\n        .setAccountId(\"123\")\n        .setFcmConfig(new FcmConfig(true))\n        .build();\n\nHydraAPI.instanceWithConfig(applicationContext, hydraConfig);\nAdd HydraFirebaseMessagingService to your manifest. Capillary SDK manages Firebase Messaging internally using the\nHydraFirebaseMessagingService\n.\nKotlin\nJava\n`<service\n   android:name=\"com.capillary.hydra.firebase.HydraFirebaseMessagingService\"\n   android:exported=\"false\">\n   <intent-filter>\n       <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\n   </intent-filter>\n</service>\nService hydraFirebaseMessagingService = new Service();\nhydraFirebaseMessagingService.setClassName(\"com.capillary.hydra.firebase.HydraFirebaseMessagingService\");\nhydraFirebaseMessagingService.setExported(false);\n\nIntentFilter intentFilter = new IntentFilter();\nintentFilter.addAction(\"com.google.firebase.MESSAGING_EVENT\");\n\nhydraFirebaseMessagingService.setIntentFilter(intentFilter);\nConfiguring push notification\nSet notification options (small icon, color, multiple notification handling). Use the following function:\nKotlin\nJava\nNotificationConfig(  \n   smallIcon = R.drawable.small_icon,  \n   notificationColor = R.color.teal_200,  \n   isMultipleNotificationInDrawerEnabled = true,  \n)  \nat  \nval hydraConfig = HydraConfig.Builder(  \n   applicationContext,  \n   accountId = \"123\"  \n)  \n   .notificationConfig(  \n   NotificationConfig(  \n       smallIcon = R.drawable.small_icon,  \n       notificationColor = R.color.teal_200,  \n       isMultipleNotificationInDrawerEnabled = true,  \n   )  \n.build()  \nHydraAPI.instanceWithConfig(applicationContext, hydraConfig)\nNotificationConfig notificationConfig = new NotificationConfig(\n    R.drawable.small_icon,\n    R.color.teal_200,\n    true\n);\n\nHydraConfig hydraConfig = new HydraConfig.Builder(applicationContext)\n        .setAccountId(\"123\")\n        .setNotificationConfig(notificationConfig)\n        .build();\n\nHydraAPI.instanceWithConfig(applicationContext, hydraConfig);\nParameter\nDescription\nsmallIcon\nResource-id for the notification small icon\nnotificationColor\nIcon colour for the notification\nisMultipleNotificationInDrawerEnabled\nBy default, SDK shows multiple notifications i.e.\nisMultipleNotificationInDrawerEnabled\nis true. If you want the app to show a single notification, set\nisMultipleNotificationInDrawerEnabled\nas false.\nImplementing Callback listeners\nTo make sure that you receive callbacks, even when the application is running in the background, listeners should be added in the\nonCreate()\nmethod of the application class. Capillary SDK provides the below listeners to hook into:\nPush notification callback\nTo receive a push callback, the application must register a\nHydraPushNotificationListener\n.\n📘\nNote\nIt is mandatory to add the push notification callback listener once the SDK is initialized.\nTo perform push callback, implement the\nHydraPushNotificationListener\nand register for callback using\nHydraPushAPI.getInstance().registerPushNotificationListener\n.\nExample: User implementing\nHydraPushNotificationListener\nto receive the push notification callback from the Hydra SDK.\nKotlin\nJava\nclass ApplicationPushMessageListener : HydraPushNotificationListener() {\n    private val TAG = HydraPushNotificationListener::class.java.name\n\n    override fun onNotificationReceived(context: Context, payload: Bundle) {\n        super.onNotificationReceived(context, payload)\n    }\n\n    override fun onNotificationClick(context: Context, payload: NotificationPayload, cta: CTA): Boolean {\n       return super.onNotificationClick(context, payload)\n    }\n\n    override fun onNotificationDismissed(context: Context, payload: Bundle) {\n        super.onNotificationDismissed(context, payload)\n    }\n\n    override fun handleCustomAction(context: Context, payload: Bundle) {\n        super.handleCustomAction(context, payload)\n    }\n}\nclass ApplicationPushMessageListener : HydraPushNotificationListener {\n   private val TAG = HydraPushNotificationListener::class.java.name\n\n   override fun onNotificationReceived(context: Context, payload: Bundle) {\n       super.onNotificationReceived(context, payload)\n   }\n  override fun onNotificationClick(context: Context, payload: Bundle) {\n       super.onNotificationClick(context, payload)\n   }\n   override fun onNotificationDismissed(context: Context, payload: Bundle) {\n       super.onNotificationDismissed(context, payload)\n   }\n    override fun handleCustomAction(context: Context, payload: Bundle) {\n       super.handleCustomAction(context, payload)\n   }\n}\nRegister the above callback in the\nonCreate\nof your application class after initialization of HydraAPI\nIn the above callback method, “onNotificationClick” returns Boolean to which application can return either true or false. If the function returns false, the action will be taken by the SDK and if returned true then custom action can be taken by the client app.\nKotlin\nJava\nHydraPushApi.getInstance()\n    .registerPushNotificationListener(ApplicationPushMessageListener())\nHydraPushApi.getInstance()\n   .registerPushNotificationListener(ApplicationPushMessageListener())\nToken callback\nWhen Hydra SDK handles push registration, it optionally provides a callback to the application whenever a new token is registered or the token is refreshed.\nTo get the token callback, implement the\nTokenAvailableListener\nand register it using\nHydraFirebaseAPI.getInstance().addTokenListener\n.\nExample:\nUser implementing\nTokenAvailableListener\nto receive the callback from the Capillary SDK\nKotlin\nJava\nclass ApplicationTokenListener : TokenAvailableListener {\n   private val TAG = ApplicationTokenListener::class.java.name\n\n   override fun onTokenAvailable(token: Token) {\n       Log.w(TAG, \"Application Token $token\")\n   }\n}\nimport android.util.Log;\nimport com.capillary.hydra.sdk.entity.Token;\nimport com.capillary.hydra.sdk.listeners.TokenAvailableListener;\n\npublic class ApplicationTokenListener implements TokenAvailableListener {\n    private static final String TAG = ApplicationTokenListener.class.getName();\n\n    @Override\n    public void onTokenAvailable(Token token) {\n        Log.w(TAG, \"Application Token \" + token);\n    }\n}\nRegister the above callback in the\nonCreate\nof your application class\nKotlin\nJava\nHydraFirebaseAPI.getInstance().addTokenListener(ApplicationTokenListener())\nHydraFirebaseAPI.getInstance().addTokenListener(new ApplicationTokenListener());\nNonHydra payload callback\nTo receive a callback when a push payload is received for a server other than the Capillary platform, you can implement the\nNonHydraPushListener\nand register for the callback using:\nKotlin\nJava\nHydraFirebaseAPI.getInstance().addNonHydraPushListener()\nHydraFirebaseAPI.getInstance().addNonHydraPushListener(new NonHydraPushListener() {\n    @Override\n    public void onNonHydraPushReceived(RemoteMessage remoteMessage) {\n        // Handle the non-Hydra push notification here\n    }\n});\nExample:\nUser implementing\nNonHydraPushListener\nto receive the callback from the Capillary SDK.\nKotlin\nJava\nclass ApplicationPayloadListener : NonHydraPushListener {  \n   override fun onPushReceived(remoteMessage: RemoteMessage) {  \n       val pushNotificationPayload = remoteMessage.data  \n       Log.w(TAG, \"Application Push Payload $pushNotificationPayload\")  \n   }  \n}\nimport android.util.Log;\nimport com.google.firebase.messaging.RemoteMessage;\nimport com.capillary.hydra.firebase.NonHydraPushListener;\n\npublic class ApplicationPayloadListener implements NonHydraPushListener {\n    private static final String TAG = ApplicationPayloadListener.class.getName();\n\n    @Override\n    public void onPushReceived(RemoteMessage remoteMessage) {\n        String pushNotificationPayload = remoteMessage.getData().toString();\n        Log.w(TAG, \"Application Push Payload \" + pushNotificationPayload);\n    }\n}\nExample:\nRegister the above callback in the\nonCreate\nof your application class\nKotlin\nJava\nHydraFirebaseAPI.getInstance().addNonHydraPushListener(ApplicationPayloadListener())\nHydraFirebaseAPI.getInstance().addNonHydraPushListener(new ApplicationPayloadListener());\nCall to action\nCalls To Action (CTA) are the deep links or URIs where users land when they click on the push message. You can add CTAs when you create your push campaign on the dashboard. They are divided into two categories:\nPrimary CTA\nNon-primary CTA.\nPrimary CTA\nA push message can have only one primary CTA which performs an action when the user taps on the content of the push notification. This action can either direct the user to a particular URI in the browser or a deep link. If you do not configure any URI or deep link for primary CTA, then the user will be redirected to your application's launcher activity upon tapping the push notification.\nNon-primary CTA\nYou can add a maximum of 3 non-primary CTAs in a push notification. Each of the CTA triggers a specific action when the user taps on the corresponding button.\nDeeplink\nA deep link is a type of hyperlink that takes you directly to a specific page within the app or website instead of the homepage. Capillary SDK supports URL-based deep linking. To create a push campaign, you can enter any valid URL on your dashboard  such as an\nhttp / https\nlnk or a valid custom URL like\ncap://handleDeeplink/1234\n. The SDK then sends this URL as part of an intent to the application. To receive the intent as shown below the application must add the intent filters to its manifest file.\nXML\n<activity android:name=\".SignUpActivity\" android:exported=\"true\">\n<!--            Example with path prefix, port and path suffix for deep linking-->\n\n   <!--            url example: cap://checkdeeplink:888/anythingsuffix-->\n\n   <!--            url example: cap://checkdeeplink:888/prefixanything-->\n\n<intent-filter>\n       <action android:name=\"android.intent.action.VIEW\" />\n       <category android:name=\"android.intent.category.DEFAULT\" />\n       <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data\n           android:host=\"checkdeeplink\"\n           android:pathPrefix=\"/prefix\"\n           android:pathSuffix=\"suffix\"\n           android:port=\"888\"\n           android:scheme=\"cap\" />\n   </intent-filter>\n</activity>\nRich push notification\nRich push notifications enable you to engage with users using fancy push notification templates built to work with Capillary SDK. This feature is available from Hydra SDK version 1.2.0 and RichNotification version 1.0.0.\nThere are two ways to install rich push notifications:\nInstallation using catalog\nInstallation using artifact\nInstalling using catalog\nThe recommended approach for integration is through a Version Catalog. For more information, refer to the documentation\nInstalling with version catalog\n. After you configure the catalog, perform the following:\nAdd the dependency in the\napp/build.gradle\nfile as shown below:\nKotlin\nText\ndependencies {\n    // ...\n    implementation(\"hydra.richnotification\")\n}\ndependencies {\n…\n implementation(\"hydra.richnotification\")\n}\nInstalling using Artifact\nTo install rich notifications using Artifact, perform the following:\nAdd the dependency in the\napp/build.gradle\nfile as shown below:\nKotlin\nJava\ndependencies {\n    // ...\n    implementation(\"com.capillary:hydra-richnotification:x.x.x\")\n}\ndependencies {\n…\n implementation(\"com.capillary:hydra-richnotification:x.x.x\")\n  }\nTable of Contents\nPrerequisite\nConfiguring FCM for push notifications\nRequesting notification runtime permission (Android 13+)\nConfiguring push registration - App handles the push notification\nConfiguring push registration - SDK handles the push notification\nConfiguring push notification\nImplementing Callback listeners\nPush notification callback\nToken callback\nNonHydra payload callback\nCall to action\nPrimary CTA\nNon-primary CTA\nDeeplink\nRich push notification\nInstalling using catalog\nInstalling using Artifact"
  },
  {
    "url": "https://docs.capillarytech.com/docs/in-app-messaging",
    "page_slug": "in-app-messaging",
    "title": "In-app messaging",
    "content": "In-app messaging\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nIn-app messaging\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nIn-app messaging\nThis page provides you with information on IN-app messaging feature.\nThis feature empowers you to proactively engage users within your app by displaying targeted messages at specific contextually relevant moments. These timely interventions can prove highly effective in providing valuable information, promoting cross-selling and up-selling opportunities, and ultimately driving desired user actions on targeted screens or based on pre-defined app interactions.\nThe feature is available from Capillary SDK 1.4.0.\nInstalling using catalog\nThe recommended approach for integration is through a Version Catalog. For more information, refer to the documentation\nInstalling with version catalog\n. After you configure the catalog, perform the following:\nAdd the dependency in the\napp/build.gradle\nfile as shown below:\nKotlin\nJava\ndependencies {\n    // ...\n    implementation(\"hydra.inapp\")\n}\ndependencies {\n…\n implementation(\"hydra.inapp\")\n  }\nInstalling using Artifact\nTo install in-app messaging, perform the following:\nAdd the dependency in the\napp/build.gradle\nfile as shown below:\nKotlin\nJava\ndependencies {\n    // ...\n    implementation(\"com.capillary:hydra-inapp:x.x.x\")\n}\ndependencies {\n…\n implementation(\"com.capillary:hydra-inapp:x.x.x\")\n}\nIntegration\nHydra SDK leverages a push notification mechanism to deliver in-app messages. For this functionality to work seamlessly, your app needs to have already integrated Hydra's push notification module.\nIn-app configuration\nThe Capillary SDK allows your app to specify a fallback image to display in case the image included in a notification payload fails to download. This ensures a consistent user experience even if unexpected network issues or server errors occur.\nKotlin\nInAppConfig(@DrawableRes val defaultImage: Int)\nParameter\nDescription\nType\nMandatory/Optional\ndefaultImage\nResource ID of fallback drawable.\nInt\nMandatory\nIn-app supported layouts\nHeader\nHeader\nFooter\nFooter\nPopup\nInterstitial\nIn-app message listeners\nTo receive callbacks for in-app messages, listeners should be added in the\nonCreate()\nof the Application class. Hydra offers the following listeners to hook into:\nInApp Message Callback\nApplication has to register a\nInAppMessageListener\nto receive in-app message Callbacks.\n📘\nIt is mandatory to add this listener once the hydra SDK is initialized to avail custom action for message click.\nTo get the inapp callback implement the OnMessageClickListener and register for the callback using HydraInAppUIHelper.getInstance().registerOnMessageClickListener\nExample:\nUser implementing\nOnMessageClickListener\nto receive the in-app message callback from the Hydra Sdk.\nKotlin\nclass ApplicationInAppMessageClickListener : OnMessageClickListener {  \n  override fun onMessageClick(context: Context, cta: CTA): Boolean {  \n       return super.onMessageClick(context, cta)  \n   }  \n}\nRegister the above callback in the onCreate of your application class after initialization of HydraApi\nIn the above callback method, “onMessageClick” returns Boolean to which application can return either true or false. If the function returns false, the action will be taken by the SDK and if returned true then custom action can be taken by the client app.\nKotlin\nHydraInAppUIHelper.getInstance()  \n   .registerOnMessageClickListener(ApplicationInAppMessageListener())\nTable of Contents\nInstalling using catalog\nInstalling using Artifact\nIntegration\nIn-app configuration\nIn-app supported layouts\nIn-app message listeners"
  },
  {
    "url": "https://docs.capillarytech.com/docs/configure-notification-center",
    "page_slug": "configure-notification-center",
    "title": "Notification center",
    "content": "Notification center\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nNotification center\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nNotification center\nThis page provides information about notification center and how to configure it.\nThe Notification Center is a feature in the SDK that provides a central place for users to view and manage all of their push notifications. The Notification Center is a UI element that is displayed within the app. It contains a list of all of the push notifications that the user has received. The user can tap on a notification to open the corresponding app.\nThe Notification Center helps with the following:\nCentralized Management:\nUsers access a centralized hub for all push notifications, ensuring organization and control over their app interactions.\nEnhanced Accessibility:\nNotifications are no longer buried in cluttered bars; users can manage them efficiently, leading to a seamless experience.\nIncreased Engagement:\nClear and accessible notifications promote active engagement, allowing users to respond promptly to social interactions, promotions, and achievements.\nImproved customer satisfaction:\nThe Notification Center will help to improve customer satisfaction by making the app more useful and engaging\nMetrics\n: Enables to track the number of users who open the Notification Center, the number of push notifications that are viewed in the Notification Center, and the number of push notifications that are deleted from the Notification Center\nUse Case: Retail Loyalty Program\nScenario:\nA retail company operates a loyalty program where customers earn points for each purchase. This program offers exclusive promotions and discounts to reward loyal customers. The app sends push notifications to users, notifying them of earned points and offering special discounts.\nIssue:\nMany users miss out on these discounts due to cluttered notification bars filled with messages from various apps. They frequently clear their notification bars without noticing the discounts, resulting in missed opportunities.\nSolution:\nIntroducing a Notification Center within the app resolves this issue. Users can conveniently access all loyalty program notifications in one location. Here, they can easily view their accumulated points and available discounts. This streamlined approach enhances user engagement and loyalty.\nInstalling notification center\nYou can install the notification center using (a) Version catalog or (b) Artifact.\nInstalling using version catalog\nConfigure version catalog. For more information, see\nConfigure version catalog\n.\nAdd the dependency in the\napp/build.gradle\nfile:\nGroovy\ndependencies {\n…\n implementation(\"hydra.inbox.core\")\n implementation(\"hydra.inbox.ui\")\n}\nInstalling directly using artifact\nAdd the following dependency in the\napp/build.gradle file\n:\nGroovy\ndependencies {  \n…  \n implementation(\"com.capillary:hydra-inbox-core:x.x.x\")  \n implementation(\"com.capillary:hydra-inbox-ui:x.x.x\")  \n}\nSetting up fallback images for the notification center\nDuring the initiation of the SDK, the application should define a\nFallback image\nusing the provided configuration. This image will display if the SDK encounters issues while downloading the image from a specific notification's payload.\nCreate an instance of the\nNotificationCenterConfig\nKotlin\nJava\nNotificationCenterConfig(@DrawableRes val defaultImage: Int)\npublic class NotificationCenterConfig {\n    private int defaultImage;\n\n    public NotificationCenterConfig(int defaultImage) {\n        this.defaultImage = defaultImage;\n    }\n\n    public int getDefaultImage() {\n        return defaultImage;\n    }\n}\nParameter\nType\nDescription\nMandatory/Optional\ndefaultImage\nint\nResource ID of the fallback drawable image\nMandatory\nDefine the below configuration while initializing the SDK:\nKotlin\nJava\nval hydraConfig = HydraConfig.Builder(\n   applicationContext,\n   accountId = \"123\"\n)\n   .notificationCenterConfig(NotificationCenterConfig(R.drawable.notification_center_fallback))\n.build()\n\nHydraAPI.instanceWithConfig(applicationContext, hydraConfig)\nHydraConfig hydraConfig = new HydraConfig.Builder(\n    applicationContext,\n    \"123\"\n)\n    .notificationCenterConfig(new NotificationCenterConfig(R.drawable.notification_center_fallback))\n    .build();\n\nHydraAPI.instanceWithConfig(applicationContext, hydraConfig);\nIntegrating the default notification center\nWhen your app integrates the HydraInboxCore and HydraInboxUI frameworks, you can opt to use the default notification Center UI by either launching the SDK-provided Activity or including the provided Fragment.\nUsing activity\nThe activity is preconfigured within the SDK's manifest file and can be initiated using the code snippet below.\nKotlin\nJava\nval inboxActivity = Intent(this, InboxActivity::class.java)  \nstartActivity(inboxActivity)\nIntent inboxActivity = new Intent(this, InboxActivity.class);\nstartActivity(inboxActivity);\nUsing fragment\nTo incorporate the InboxFragment provided by the SDK into your app's activity, follow these steps. For information on adding a Fragment to an Activity, refer to the\nGoogle documentation on Fragments\n.\nExample:\nKotlin\nJava\nprivate fun attachFragment() {  \n   try {  \n       supportFragmentManager.beginTransaction().replace(  \n           R.id.hydraInboxFragmentFrameLayout,  \n           InboxFragment(),  \n           \"inboxFragment\"  \n       ).commit()  \n   } catch (e: Exception) {  \n       Logger.v(\"loadInboxMessageFragment(): \")  \n   }  \n}\nprivate void attachFragment() {\n    try {\n        getSupportFragmentManager()\n            .beginTransaction()\n            .replace(\n                R.id.hydraInboxFragmentFrameLayout,\n                new InboxFragment(),\n                \"inboxFragment\"\n            )\n            .commit();\n    } catch (Exception e) {\n        Logger.v(\"loadInboxMessageFragment(): \");\n    }\n}\nAPI Usage - HydraInboxCore\nThe\nHydraInboxCore\nAPI provides various functions to interact with notifications and messages using the instance of\nInboxCore\n.\n1. getUnreadNotificationCount\nUse this API to retrieve the count of unread notifications using the instance of\nInboxCore\n.\nMethod:\nKotlin:\nKotlin\nJava\nfun getUnReadMessagesCount(\n    context: Context,\n    listener: UnReadCountListener\n)\npublic void getUnReadMessagesCount(\n    Context context,\n    UnReadCountListener listener\n)\nParameters:\nParameter\nType\nDescription\nMandatory/Optional\ncontext\nContext\nActivity’s Context\nMandatory\nlistener\nUnReadCountListener\nListener's Object\nMandatory\nImplementation:\nKotlin\nJava\nHydraInboxCoreApi.getInstance().getUnReadMessagesCount(\n    this,\n    object : UnReadCountListener {\n        override fun onCountAvailable(unReadMessagesCount: Int) {\n            // Handle the unread message count\n        }\n    }\n)\nHydraInboxCoreApi.getInstance().getUnReadMessagesCount(\n    this,\n    new UnReadCountListener() {\n        @Override\n        public void onCountAvailable(int unReadMessagesCount) {\n            // Handle the unread message count\n        }\n    }\n);\n2. fetchInboxMessages\nThis API fetches available notifications for the current user using the instance of\nInboxCore\n.\nMethod:\nKotlin\nJava\nfun fetchInboxMessages(\n    context: Context,\n    listener: OnMessagesAvailableListener\n)\npublic void fetchInboxMessages(\n    Context context,\n    OnMessagesAvailableListener listener\n)\nParameters:\nParameter\nType\nDescription\nMandatory/Optional\ncontext\nContext\nActivity’s Context\nMandatory\nlistener\nOnMessagesAvailableListener\nListener's Object\nMandatory\n3. deleteInboxMessages\nUse this API to delete an inbox message using the instance of\nInboxCore\n.\nMethod:\nKotlin\nJava\nfun deleteInboxMessage(\n    context: Context,\n    inboxMessage: InboxMessage\n)\npublic void deleteInboxMessage(\n    Context context,\n    InboxMessage inboxMessage\n)\nParameters:\nParameter\nType\nDescription\nMandatory/Optional\ncontext\nContext\nActivity’s Context\nMandatory\ninboxMessage\nInboxMessage\nObject of the message to delete\nMandatory\n4. trackInboxMessageClick\nThis API sends a Dlr event indicating that the user has clicked an inbox message using the instance of\nInboxCore\n.\nMethod:\nKotlin\nJava\nfun trackInboxMessageClick(\n    context: Context,\n    inboxMessage: InboxMessage\n)\npublic void trackInboxMessageClick(\n    Context context,\n    InboxMessage inboxMessage\n)\nParameters:\nParameter\nType\nDescription\nMandatory/Optional\ncontext\nContext\nActivity’s Context\nMandatory\ninboxMessage\nInboxMessage\nObject of the clicked message\nMandatory\n5. deleteAllInboxMessages\nThis API deletes all inbox messages for the current user using the instance of\nInboxCore\n.\nMethod:\nKotlin\nJava\nfun deleteAllInboxMessages(\n    context: Context\n)\npublic void deleteAllInboxMessages(\n    Context context\n)\nParameters:\nParameter\nType\nDescription\nMandatory/Optional\ncontext\nContext\nActivity’s Context\nMandatory\nConfiguring inbox message listeners\nInboxMessageListeners\nTo receive callbacks for inbox messages, listeners should be added in the\nonCreate()\nof the Application class. Hydra offers the following listeners to hook into:\nInbox Message Callback\nApplication has to register a\nInboxpMessageListener\nto receive in-app message Callbacks.\n📘\nIt is mandatory to add this listener once the hydra sdk is initialized to avail custom action for inbox message click.\nTo get the inbox message callback implement the OnMessageClickListener and register for the callback using HydraInboxUIHelper.getInstance().registerOnMessageClickListener\nExample:\nUser implementing\nOnMessageClickListener\nto receive the inbo message callback from the Hydra Sdk.\nKotlin\nJava\nclass ApplicationMessageClickListener : OnMessageClickListener {  \n  override fun onMessageClick(context: Context, inboxMessage: InboxMessage): Boolean {  \n       return super.onMessageClick(context, cta)  \n   }  \n}\npublic void deleteAllInboxMessages(\n    Context context\n)\nRegister the above callback in the onCreate of your application class after initialization of HydraApi\nIn the above callback method, “onMessageClick” returns Boolean to which application can return either true or false. If the function returns false, the action will be taken by the SDK and if returned true then custom action can be taken by the client app.\nKotlin\nJava\nHydraInboxUIHelper.getInstance()  \n   .registerOnMessageClickListener(ApplicationMessageListener())\npublic void deleteAllInboxMessages(\n    Context context\n)\nCustomizing default notification center\nThe SDK provides various UI customization options to ensure the notification center seamlessly integrates with the overall app design.\nInheriting app theme:\nThe notification center (InboxActivity) automatically inherits your app's default theme for a cohesive look.\nFor example, if your application is configured with the following theme:\nXML\n<style name=\"Theme.XYZ\" parent=\"Theme.MaterialComponents.DayNight.NoActionBar\">\n   <!-- Primary brand color. -->\n   <item name=\"colorPrimary\">@color/purple_500</item>\n   <item name=\"colorPrimaryVariant\">@color/purple_700</item>\n   <item name=\"colorOnPrimary\">@color/white</item>\n   <!-- Secondary brand color. -->\n   <item name=\"colorSecondary\">@color/teal_200</item>\n   <item name=\"colorSecondaryVariant\">@color/teal_700</item>\n   <item name=\"colorOnSecondary\">@color/white</item>\n   <!-- Status bar color. -->\n   <item name=\"android:statusBarColor\">?attr/colorPrimaryVariant</item>\n   <item name=\"android:windowBackground\">@android:color/white</item> …. </style>\nThen, your app will feature a white window background and a purple app bar, resulting in an appearance similar to the screenshots provided below:\nWith the UI customization options, you can override this style and customize various UI elements.\nCustomization options:\nYou can customize various UI elements by overriding specific styles in your app's resources:\nCustomizing toolbar style\nTo customize the title and navigation icon in the toolbar, override the InboxToolbarStyle with the following customization:\nXML\n<style name=\"HydraInboxToolbarStyle\" parent=\"Theme.AppCompat\">\n   <item name=\"android:textColorSecondary\">@color/hydra_inbox_toolbar_text_color</item>\n   <item name=\"android:textColorPrimary\">@color/hydra_inbox_toolbar_text_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textSize\">@dimen/hydra_inbox_toolbar_font_size</item>\n   <item name=\"android:textStyle\">bold</item>\n   <item name=\"android:background\">@color/hydra_inbox_toolbar_background_color</item>\n   <item name=\"android:navigationIcon\">@drawable/ic_menu_black_24dp</item>\n</style>\nTo customize the unread messages count in the toolbar, override the InboxToolbarTextStyle with the following customization:\nXML\n<style name=\"HydraInboxToolbarTextStyle\">\n   <item name=\"android:textColor\">@color/hydra_inbox_toolbar_text_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textSize\">@dimen/hydra_inbox_toolbar_font_size</item>\n   <item name=\"android:textStyle\">bold</item>\n</style>\nTo customize the \"CLEAR ALL\" button in the toolbar, override the InboxToolbarButtonStyle with the following customization:\nXML\n<style name=\"HydraInboxToolbarButtonStyle\">\n   <item name=\"android:textColor\">@color/hydra_inbox_toolbar_button_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textSize\">@dimen/hydra_inbox_toolbar_button_size</item>\n   <item name=\"android:textStyle\">normal</item>\n</style>\nCustomizing inbox message style\nAny message displayed in the notification center can be in either the unread state or the read state. To distinguish between the two, the SDK provides distinct styles for each entity as follows:\nBackground color:\nUnread state:\nXML\n<color name=\"hydra_unread_message_background_color\">#FFFFFF</color>\nRead state:\nXML\n<color name=\"hydra_read_message_background_color\">#FFFFFF</color>\nTitle style:\nUnread state:\nXML\n<style name=\"HydraUnReadInboxTitleTextStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_title_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_title_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">bold</item>\n   <item name=\"android:maxLines\">2</item>\n</style>\nRead state:\nXML\n<style name=\"HydraReadInboxTitleTextStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_title_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_title_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">normal</item>\n   <item name=\"android:maxLines\">2</item>\n</style>\nSummary style:\nUnread state:\nXML\n<style name=\"HydraUnReadInboxMessageTextStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_message_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_message_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">bold</item>\n   <item name=\"android:maxLines\">3</item>\n</style>\nRead state:\nXML\n<style name=\"HydraReadInboxMessageTextStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_message_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_message_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">normal</item>\n   <item name=\"android:maxLines\">3</item>\n</style>\nTimestamp style:\nUnread state:\nXML\n<style name=\"HydraUnReadInboxMessageTimeStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_time_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_time_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">bold</item>\n</style>\nRead state:\nXML\n<style name=\"HydraReadInboxMessageTimeStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_time_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_time_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">bold</item>\n</style>\nCustomizing empty box style\nTo customize the appearance of the empty text box view when no notifications are available, override the InboxEmptyBoxTextStyle with the following customization:\nXML\n<style name=\"HydraInboxEmptyBoxTextStyle\">\n   <item name=\"android:background\">@color/hydra_inbox_transparent_color</item>\n   <item name=\"android:textSize\">@dimen/hydra_inbox_empty_box_text_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_empty_box_message_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">normal</item>\n</style>\nTable of Contents\nInstalling notification center\nInstalling using version catalog\nInstalling directly using artifact\nSetting up fallback images for the notification center\nIntegrating the default notification center\nUsing activity\nUsing fragment\nAPI Usage - HydraInboxCore\n1. getUnreadNotificationCount\n2. fetchInboxMessages\n3. deleteInboxMessages\n4. trackInboxMessageClick\n5. deleteAllInboxMessages\nConfiguring inbox message listeners\nCustomizing default notification center\nInheriting app theme:\nCustomization options:\nTimestamp style:"
  },
  {
    "url": "https://docs.capillarytech.com/docs/xiaomi-push-notification",
    "page_slug": "xiaomi-push-notification",
    "title": "Xiaomi push notification (Push Amplification)",
    "content": "Xiaomi push notification (Push Amplification)\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nXiaomi push notification (Push Amplification)\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nXiaomi push notification (Push Amplification)\nThis page provides you with information on configuring push notifications on Chinese OEM devices.\nPush notifications often go undelivered to some app users due to device-level restrictions on certain Chinese OEM devices. The Capillary Android SDK addresses this issue by sending push notifications through both Xiaomi Cloud Push and Firebase Cloud Messaging (FCM) push services, increasing the likelihood of successful delivery. If a message is successfully delivered through one of these push services, the notification from the other cloud service is suppressed. No priority is defined, and there are no changes to the current FCM flow. This ensures that users receive the push notification only once.\nTo prevent unnecessary additions to the application, separate modules for each push service are available. You can integrate the appropriate module based on the types of devices used by your application's users.\nIntegrating Xiaomi Push SDK\nPerform the following:\nRegister as a Xiaomi developer on the\nXiaomi website\n.\nCreate app. To create, Log into the console, click\nCreate App\n, enter the required details and click\nCREATE\n.\nClick on the App name and retrieve the app's Package name/App ID / AppKey / App Secret.\nThe App ID and App Key serve as the client's identity during client SDK initialization. The App Secret is authenticated for sending messages on the server-side.\nLog into the Mi Push Operational Console and enable Push.\nAdd dependency of the Mi SDK.\nDownload the Mi SDK.\nAdd the downloaded Mi SDK to the \"libs\" folder of the application module in your project.\nInclude the following configuration in the\nbuild.gradle\nfile of the app module:\nGroovy\nandroid {\n    repositories {\n        flatDir {\n            dirs 'libs'\n        }\n    }\n}\n\ndependencies {\n    implementation fileTree(include: ['*.aar'], dir: 'libs')\n}\nFor the new project structure (applicable from the Android Gradle plugin version 7.0.0 and above), add the following in the\ndependencyResolutionManagement\nblock of your\nsettings.gradle\nfile:\nGroovy\ndependencyResolutionManagement {DependencyResolutionManagement it ->\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)\n    \n    repositories { RepositoryHandler it ->\n        google()\n        mavenCentral()\n    }\n}\nInstalling SDK\nPerform the following:\nAdd the dependency files.\nInstalling using version catalog:\nThis is the recommended method.\nConfigure the catalog. For more information, refer to the\nVersion Catalog Installation\n.\nAdd the dependency in the\napp/build.gradle\nfile.\nGroovy\ndependencies {\n    ...\n    implementation(\"hydra.mipushkit\")\n}\nInstalling using Artifact\nTo install using artifact, add the following dependency in the\napp/build.gradle\nfile:\nGroovy\ndependencies {\n…\n implementation(\"com.capillary:hydra-mi-push-kit:x.x.x\")\n}\nAdd the SDK files to the project.\nDownload the helper class and broadcast receiver files from\nhere\n.\nCreate a package named\ncom.hydra.sdk.miPushKit\nand paste the downloaded files into this package.\nAdd Broadcast Receiver in AndroidManifest.xml file.\nXML\n<receiver\n    android:name=\"com.hydra.sdk.miPushKit.MiBroadcastReciever\"\n    android:exported=\"false\">\n\n    <intent-filter>\n        <action android:name=\"com.xiaomi.mipush.RECEIVE_MESSAGE\" />\n    </intent-filter>\n\n    <intent-filter>\n        <action android:name=\"com.xiaomi.mipush.MESSAGE_ARRIVED\" />\n    </intent-filter>\n\n    <intent-filter>\n        <action android:name=\"com.xiaomi.mipush.ERROR\" />\n    </intent-filter>\n\n</receiver>\nInitialise Xiaomi push\nLocate the part of your code where the application comes to the foreground.\nInsert the following code within that section:\nJava\nMiPushHelper.initialiseMiPush(context, MI_APP_ID, MI_APP_KEY, Region);\nwhere,\nMI_APP_ID: The App-Id from the Mi Dashboard.\nMI_APP_KEY: The App-Key from the Mi Dashboard.\nRegion: The chosen region for Mi data residency.\nHandling Push within the Application (optional):\nIf you're handling token registration and notifications in your app's receiver, follow these steps:\nSet the Data Region:\nDetermine the region where Mi data resides using the\nMiPushClient.getAppRegion(context)\nAPI.\nPass the region to the below API:\nJava\nHydraMiPushApi.getInstance().setDataRegion(context, MiRegion.valueOf(region.toString()));\nUse the\npassPushToken()\nAPI and pass the push token to the SDK.\nJava\nHydraMiPushApi.getInstance().passPushToken(context, pushToken);\nUse the\nisFromHydraPlatform()\nhelper API provided by the SDK and make sure that the payload is from the Capillary Hydra platform. After you confirm, pass the notification payload to the SDK.\nJava\nHydraMiPushApi.getInstance().passPushPayload(context, pushPayload)\nExample:\nJava\nif (HydraPushApi.getInstance().isFromHydraPlatform(remoteMessage)) {\n   HydraFirebaseAPI.getInstance().passPushPayload(applicationContext, remoteMessage)\n}\nTable of Contents\nIntegrating Xiaomi Push SDK\nInstalling SDK\nInitialise Xiaomi push\nHandling Push within the Application (optional):"
  },
  {
    "url": "https://docs.capillarytech.com/docs/overview_ios_sdk",
    "page_slug": "overview_ios_sdk",
    "title": "Overview",
    "content": "Overview\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nOverview\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nOverview\nThis guide provides information on how to integrate your mobile apps with Capillary iOS SDK.\nCapillary SDK provides you with essential analytics capabilities and helps you engage better with your users through\nevents tracking\n,\npush notifications\nand a\nnotification center\n.\nThe SDK consists of the following frameworks:\nHydraCore\n- This framework is the base for all other frameworks. The framework provides various infrastructure modules such as network, data persistence and log management, and in addition, also provides API(s) for Analytics(Event) reporting.\nHydraPushNotification\n-This framework helps in the following:\nsimplifying the integration of push/remote notifications for all Capillary customers\nenabling the delivery of notifications\ncapturing and reporting data for analytics\nensuring the posting of DLR (Delivery Receipt) events at all stages.\nHydraPushNotificationServiceExtension\n- This can be integrated with the notification content extension of the host application and enables customising and modifying the original notifications before it is presented to the user.\nHydraInAppMessage\n- This enables to display in-app messages using popup notifications.\nHydraInboxCore\n- Manages all remote notifications received by the application and stores them locally to display in the Notification Center.\nHydraInboxUI\n- Populates the Notification Center with all remote notifications received by the application.\nPrerequisites\niOS SDK version 14.3 or above\nSupported platforms\nMobile(iOS)\nTablet(iPadOS)\nVersion\nHydraSDK 1.3.0 and above.\niOS SDK Size\nSDK library\nSize\nHydraCore\n12.9 MB\nHydraInAppMessage\n2 MB\nHydraPushNotification\n1.4 MB\nHydraPushNotificationServiceExtension\n1.1 MB\nTo integrate your mobile apps with Capillary iOS SDK, perform the below steps:\nInstall SDK\nInitialise SDK\nSet up events tracking\nConfigure push notifications\nTable of Contents\nPrerequisites\nSupported platforms\nVersion\niOS SDK Size"
  },
  {
    "url": "https://docs.capillarytech.com/docs/set-up-source-account-ios",
    "page_slug": "set-up-source-account-ios",
    "title": "Set up source account",
    "content": "Set up source account\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nSet up source account\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nSet up source account\nThis section provides you with information on how to set up a source account and set the connection between SDK and the org. You can also use a single source account for iOS and Android.\nUsing a single source account for iOS and Android\nIf all information apart from the Bundle ID, such as the FCM Project ID, Identifier type, etc., remains the same for both iOS and Android, you can use a single source account for both platforms. In the\nBundle Name\nfield, you can specify the Bundle IDs for both iOS and Android apps. These IDs should be separated by a semicolon.\nIf brands wish to switch to a single source account ID for existing integrations, they must request the app developer to make the necessary changes on their end. Subsequently, in one of the source accounts, brands should input both the values of the bundle ID and deprecate the remaining source account.\nThis change will not impact the subscription status response, and it will not require any action from the app developer.\nFor instance, in the payload below, both the iOS and Android channels share the same accountId, contrasting with previous usage where different source accountIds were employed.\nAndroid\niOS\n{  \n    \"channel\": \"ANDROID\",  \n    \"accountId\": \"~2024ba96\",  \n    \"priority\": \"BULK\",  \n    \"type\": \"OPTIN\",  \n    \"sourceName\": \"MAPP_SDK\"  \n}\n{  \n    \"channel\": \"iOS\",  \n    \"accountId\": \"~2024ba96\",  \n    \"priority\": \"BULK\",  \n    \"type\": \"OPTIN\",  \n    \"sourceName\": \"MAPP_SDK\"  \n}\nTo configure the source account, perform the following:\nNavigate to\nOrganisation settings > Omni Channel Settings > Channel Configurations\nand click\nMAPP_SDK\n.\nClick\nAdd new account\nand in the\nAdd new account\npage, enter the following details:\nAccount Name\n- Enter the channel account name.\nSource Account Id\n- Displays the service account id. This is auto-generated.\nEnable Mirror\n- Not required\nAccount Linking Identifier\n- The account linking identifier is used to register a user and form a connection with the member care profile. The account linking identifier drop-down provides a selection of available identifier options. This set of options remains consistent across all Orgs, regardless of whether a specific identifier is configured for a particular Org or not.\nAndroid/IOS\n- Select the correct checkbox according to the mobile apps in your account.\nValid till Name\n- Select the till from the drop-down. The drop-down displays the tills available in the respective org.\nBundle name\n- Enter the app bundle name. Contact the app developer for the bundle name. You can add multiple bundle IDs separated by a semicolon. Multiple bundle names can be entered when you use the same source account for both iOS and Android. For example,\nandroid:com.capillary.product.android.one;ios:com.capillary.product.ios.x\n.\nApp signature\n- Enter the app signature. This is required only for Android apps. Contact the app developer for the app signature.\nFCM Project ID\n- Enter the Firebase project ID. This is available in the\nProject settings > General tab\n.\nFCM Email\n- Enter the FCM service account e-mail. This is available on the service account page in FCM.\nPrevious Deep Links\n- Displays previous deep links, if any.\nAdd Deep links\n- This is optional. The deep links added here will be available in Engage+ creatives for push notifications.\nTable of Contents\nUsing a single source account for iOS and Android"
  },
  {
    "url": "https://docs.capillarytech.com/docs/configure-gateway-ios",
    "page_slug": "configure-gateway-ios",
    "title": "Configure gateway",
    "content": "Configure gateway\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nConfigure gateway\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nConfigure gateway\nThe Capillary Gateway configuration involves collaboration between the Mobile Capillary App Team, Gateway team, and the Sustenance Team.\nThe App Team generates the client token and project ID details, which are then incorporated into the Data Pipeline Management Gateway (DPMG) by the Sustenance Team. Additionally, credit files (data related to credit transactions such as points and rewards based on defined criteria) in JSON format for various platforms (android-trans, android-bulk, iOS-trans, iOS-bulk) are processed.\nThe App Team provides client token and project ID details required for Capillary Gateway setup, to the Sustenance team.\nVerification of Existing Entries:\nThe Sustenance Team checks if corresponding entries exist for the root organization (orgId=0) in the DPMG.\nIf entries do not exist, proceed to step 3. Otherwise, use the existing IDs.\nAdding New Entries to DPMG:\nUtilize the provided client token and project ID details to create new entries in the DPMG.\nReview and confirm configuration details such as host names, service URLs, authentication credentials, and message settings, as per the information provided in the\ntable\n.\nFollow the insert statement provided in the hotswap link for inserting new entries.\nEnsure that the IDs in gateway_org_configs match with the gateway_id in the DPMG.\nServer Restart Request:\nAfter completing the setup and configuration process, request a server restart from the Engage side.\nThis ensures that any changes made to the Capillary Gateway configurations take effect.\nCapillary Gateway Configuration Details\nid\norg_id\nshort_name\nhost_name\nfull_name\nusername\npassword\nconnection_properties\nservice_ip\nservice_url\nstatus_check_url\nmessage_class\nmessage_priority\nchannel_count\nstatus\nis_private\nstatus_check_type\nproperties\nstart_time\nend_time\nauto_update_time\n2066\n0\nfcmios_bulk\nfcmios\nfcm\ntest\ntest\n{}\n127.0.0.1\nhttps://fcm.googleapis.com/fcm/send\nIOS\nBULK\n5\nACTIVE\n0\nPUSH\n{\"scopes\":[\"campaign\"]}\n1970-01-01 00:00:00\n2100-01-01 00:00:00\n2020-09-29 14:40:15\n2067\n0\nfcmios_trans\nfcmios\nfcm\ntest\ntest\n{}\n127.0.0.1\nhttps://fcm.googleapis.com/fcm/send\nIOS\nHIGH\n5\nACTIVE\n0\nPUSH\n{\"scopes\":[\"optout\",\"otp\",\"highvoltrans\",\"transaction\"]}\n1970-01-01 00:00:00\n2100-01-01 00:00:00\n2020-09-29 14:40:15\n2068\n0\nfcmandroid_bulk\nfcmandroid\nfcm\ntest\ntest\n{}\n127.0.0.1\nhttps://fcm.googleapis.com/fcm/send\nANDROID\nBULK\n5\nACTIVE\n0\nPUSH\n{\"scopes\":[\"campaign\"]}\n1970-01-01 00:00:00\n2100-01-01 00:00:00\n2022-07-11 11:56:34\n2069\n0\nfcmandroid_trans\nfcmandroid\nfcm\ntest\ntest\n{}\n127.0.0.1\nhttps://fcm.googleapis.com/fcm/send\nANDROID\nHIGH\n5\nACTIVE\n0\nPUSH\n{\"scopes\":[\"optout\",\"otp\",\"highvoltrans\",\"transaction\"]}\n1970-01-01 00:00:00\n2100-01-01 00:00:00\n2020-09-29 14:40:15\nTable of Contents\nCapillary Gateway Configuration Details"
  },
  {
    "url": "https://docs.capillarytech.com/docs/install-sdk",
    "page_slug": "install-sdk",
    "title": "Install SDK",
    "content": "Install SDK\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nInstall SDK\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nInstall SDK\nThis guide provides information on how to integrate your mobile apps with Capillary's iOS SDK.\n🚧\nThe HydraSDK repository is private.\nTo access\nhydra-sdk-ios-packages\nrepository, you must either have valid GitHub credentials with access to the repository or you can use your GitHub username and provide a Personal Access Token.\nIf you have a valid GitHub credentials with access to the\nhydra-sdk-ios-packages\nrepository, you need to add them to the Xcode accounts section to integrate the SDK. Follow\nthese\nsteps to complete the process.\nPrerequisites\nAccess to HydraSDK Repository:\nValid GitHub credentials with access to the hydra-sdk-ios-packages repository.\nOR\nGitHub username and a personal access token with access to the repository.\nUsing Valid GitHub Credentials:\nIf you are using GitHub credentials, add your GitHub credentials to the Xcode Accounts section. FOr more information, refer to this\ndocumentation\n.\nUsing GitHub Username and Personal Access Token:\nIf you are using GitHub username and personal access token, modify the package URL in Swift Package Manager:\nhttps://Username:[\n[email protected]\n](mailto:\n[email protected]\n)/Capillary/hydra-sdk-ios-packages.git\nYou can install the SDK using Swift Package Manager (SPM) or Xcode.\nInstalling SDK using Swift Package Manager directly\nSPM is a tool that helps to manage the distribution of Swift code. For more information, refer to\nSwift.org\n.\nTo install the Capillary iOS SDK using SPM, define the package and dependencies in the SPM's configuration file. Use the below snippet:\nSwift\nimport PackageDescription\nlet package = Package(\n  name: “<Project-name>”,\n  dependencies: [\n    .package(url:\"https://github.com/Capillary/hydra-sdk-ios-packages\",upToNextMajor(from: \"1.1.0\"))\n  ]\n)\nThis makes sure that the SPM fetches the Capillary iOS SDK from the specified repository and includes it as a dependency in your project.\nInstalling SDK Using Xcode\nYou can also use Xcode and define the dependencies in SPM. To install the SDK using Xcode, perform the following:\n📘\nPrerequisites:\nXcode 14 or later\nValid iOS project to integrate Hydra packages\nInternet connectivity\nTo install the SDK using Xcode, perform the following:\nOpen the iOS project in Xcode.\nOn the\nFile\nmenu, select\nAdd Packages\n.\nIn the search field, enter the URL\n<https://github.com/Capillary/hydra-sdk-ios-packages>\nor\nhttps://Username:\n[email protected]\n/Capillary/hydra-sdk-ios-packages.git\n.You can also select the package from the list of recently added packages.\nFrom the\nDependency Rule\n, select the version or branch of the package you want to use. To select the latest version of the package automatically, leave the version field blank.\nXcode fetches the package’s manifest file and displays its dependencies. Review these dependencies and make sure that they do not conflict with your project’s dependencies.\nFrom the\nAdd to project\ncombo box, select the appropriate project.\nClick\nAdd Package\n.\nA package selection box appears. Select the desired frameworks and click\nAdd package\n.\nXcode will automatically update your project’s dependencies and generate an Xcode project file for the package.\nAdd the import statement at the top of the file where you want to use the package’s functionality and import the package to your project.\nTable of Contents\nPrerequisites\nInstalling SDK using Swift Package Manager directly\nInstalling SDK Using Xcode"
  },
  {
    "url": "https://docs.capillarytech.com/docs/initialise-ios-sdk",
    "page_slug": "initialise-ios-sdk",
    "title": "Initialise SDK",
    "content": "Initialise SDK\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nInitialise SDK\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nInitialise SDK\nThis section provides information on initialisation of the iOS SDK.\n📘\nA sample application\nHydra Sample App\nis available for testing framework integration and APIs.\nTo initialise the Capillary iOS SDK, perform the following:\nOpen the AppDelegate file in your Xcode project.\nLocate the method\napplication(_:didFinishLaunchingWithOptions:)\n. If not available, use the below code and create the method.\nSwift\noptional func application(\n    _ application: UIApplication,\n    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil\n) -> Bool\nAdd the below code to the method and create the HydraCore instance. You need to create an instance of the SDK for each application separately.\nSwift\nstatic public func generate(with configuration: ConfigurationGenerator,\n                                geoData: GeographicDataGenerator? = nil,\n                                supportsPushNotifications: Bool = false,\n                                deviceScreenInfo: DeviceScreenInfo? = nil) throws -> Hydra\nThe table below provides an overview of the parameters, their corresponding types, descriptions, and whether they are mandatory or optional.\nParameter\nType\nDescription\nMandatory/Optional\nHydraConfiguration\nConfigurationGenerator\nAn object of class conforming to ConfigurationGenerator protocol\nMandatory\nGeoData\nGeographicDataGenerator\nUser's geographic details\nOptional\nsupportsPushNotifications\nBool\nDevice's push notification settings\nMandatory\nDeviceScreenInfo\nDeviceScreenInfo\nDevice screen size\nOptional\nRetrieve the parameter values for the required configuration (HydraConfiguration, GeoData, and DeviceScreenInfo). Use the below code snippets:\nHydraConfiguration\n(Mandatory)\nSwift\npublic protocol ConfigurationGenerator {\n    var accountID: String {get set}\n    var customerId: String {get set}\n    var server: ServerConfig {get set}\nParameter\nType\nDescription\nMandatory/Optional\naccountID\nString\nAccount ID of partner\nMandatory\ncustomerId\nString\nPhone/email/external ID\nMandatory\nserver\nServerConfig\nServer configuration\nOptional\nGeoData\n(Optional)\nThis is optional and needs to be passed only if the below values have to be sent to the SDK.\nSwift\npublic protocol GeographicDataGenerator {\n    var country: String? {get set}\n    var city: String? {get set}\n    var countryCode: String? {get set}\n    var timeZone: String {get set}\n}\nDeviceScreenInfo\n(Optional)\nThis is optional and needs to be passed only if the below values have to be sent to the SDK.\nSwift\npublic protocol DeviceScreenInfoGenerator {\n    var screenWidth: Int {get set}\n    var screenHeight: Int {get set}\n}\nParameter\nType\nDescription\nMandatory/Optional\nscreenWidth\nInt\nDevice screen width\nMandatory\nscreenHeight\nInt\nDevice screen height\nMandatory\nInitialise the SDK. See the below example:\nSwift\ndo {\n            let config = HydraConfiguration(accountID: \"account-id\", customerId: \"customer-id\", server: .server1)\n            let geoData = GeoData(country: \"country\", countryCode: \"country-code\", city: \"city\", timeZone: \"timezone\")\n            let deviceInfo = DeviceScreenInfo(screenHeight: 00, screenWidth: 00)\n            let supportsPushNotifications = true\n            \n            Hydra.generate(with: config,\n                           geoData: geoData,\n                           supportsPushNotifications: supportsPushNotifications,\n                           deviceScreenInfo: deviceInfo)\n        } catch let error {\n            print(\"Failed to initialise Hydra SDK\")\n        }\nPlaceholder\nThe SDK also allows to set of additional parameters at a later stage, after the SDK has been initialized. You can set the following parameters:\nCustomer Id\nDevice Token\nInterfaceId/FCM Token\nNotification support ie Users notification settings status\nUpdating customer Id\nTo set a customer Id or to update a customer ID, use the below API. Whenever the customer Id changes in the app, the same must be updated in the SDK.\nSwift\npublic func update(customerID id:String)\nExample:\nSwift\nhydraCore.update(customerID: \"customer-id\")\nUpdating device token\nYou need to update the device's push token to ensure continued receipt of push notifications.  use the below API:\nSwift\npublic func update(deviceToken id: String)\nExample:\nSwift\nhydraCore.update(deviceToken: \"device-token\")\nIf you are using Firebase for receiving push notifications, use the below API:\nSwift\npublic func update((interfaceID id: String)\nUpdating interfaceId/FCM token\nFor the application to receive remote notifications properly, you must update the Firebase Cloud Messaging (FCM) token whenever necessary. Use the below API:\nSwift\npublic func update(interfaceID id: String)\nExample:\nSwift\nhydraCore.update(interfaceID: \"FCM-Token\")\nUpdating notification support\nYou can enable or disable the support for notifications in your application. Use the below API:\nSwift\npublic func update(notificationSupport status: Bool\nExample:\nSwift\nhydraCore.update(notificationSupport: true)\nUpdating promotional push notification support\nSDK have defined a API -\nSwift\nfunc setPromotionalPushOpted(status: Bool = false)\nExample:\nThis API can be utilised to set promotional push notification opt status as below:\nSwift\nUserDefaults.standard.setPromotionalPushOpted(status: Bool = false)\nUpdating transactional push notification support\nSDK have defined a API -\nSwift\nfunc setTransactionalPushOpted(status: Bool = false)\nExample:\nThis API can be utilised to set transactional push notification opt status as below:\nSwift\nUserDefaults.standard.setTransactionalPushOpted(status: Bool = false)\nUpdating console log level\nCapillary SDK has a logging mechanism that enables the application to view all the SDK logs. The SDK logs statements at various levels and allows the application to determine the extent of logs it wishes to observe. The application can print records as per its requirements, enabling efficient monitoring and debugging capabilities.\nLevel\nDescription\nerror\nError messages indicate a problem that has occurred, but the application may continue to run.\nwarning\nWarning messages indicate a potential issue that might lead to problems in the future or unexpected behaviour, but the application continues to run.\ninfo\nInfo messages provide general information about the application's operation.\ndebug\nDebug messages provide detailed information about the application's operation, which can be useful for debugging problems.\nnone\nSDK will not print any logs on the console\nAPI:\nSwift\nfunc updateConsoleLogLevel(level: LogLevel)\n📘\nBy default, the SDK sets the console log level at\ndebug\n.\nExample:\nSwift\nLogger.updateLogLevel(level: .critical)\nUpdating remote log level\nHydra SDK provides support for Remote Logging Mechanism allowing the application to sync the logs with the server.\nThe Remote Logger module will sync all the logs with levels greater than or equal to the remote log level set by the application. Below API is exposed by SDK for setting the level of remote logs.\nSwift\nfunc updateRemoteLogLevel(level: LogLevel)\nBelow are different log levels.\nLevel\nDescription\nerror\nSDK will sync only\nerror\nlevel logs\nwarning\nSDK will sync only\nwarning and error\nlevel logs\ninfo\nSDK will sync\ninfo, warning and error\nlevel logs\ndebug\nSDK will sync\nall the logs\nwith the server\nnone\nSDK will\nnot sync any logs\nwith server\nExample: This is how the remote log level can be set\nSwift\nLogger.updateLogLevel(level: .critical)\n📘\nBy default, the SDK sets the remote log level at\nnone\n.\nTable of Contents\nUpdating customer Id\nUpdating device token\nUpdating interfaceId/FCM token\nUpdating notification support\nUpdating promotional push notification support\nUpdating transactional push notification support\nUpdating console log level\nUpdating remote log level"
  },
  {
    "url": "https://docs.capillarytech.com/docs/set-up-events-tracking",
    "page_slug": "set-up-events-tracking",
    "title": "Set up events tracking",
    "content": "Set up events tracking\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nSet up events tracking\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nSet up events tracking\nCapillary SDK allows you to record events using the SDK for information about your app's usage patterns, and segment users based on their actions. For example, events such as signing in, launching an app, viewing a product, etc are used to track individual actions performed by users in your app or website.\nThere are 2 types of events:\nStandard events\n- These events are configured in the SDK and cannot be removed.  With Capillary SDK, you can record user-specific information such as their username, first name, last name, email, mobile number, and other custom information, along with system information, in the events. This information can then be used to run campaigns based on user segregation at different levels.\nBehavioural events\n- The events resource also allows you to create behavioural events to track any other important user interactions for your business. For example, events such as forgot password, cart abandonment, etc. These events can be further defined by event attributes such as price, quantity, and category. These events need to be configured in your org settings.\nFor behavioural events, you need to do configuration in the Hydraconfig and organisation settings.\nSending standard events to SDK\nThe SDK offers four event-tracking APIs for recording for reporting user action events. These APIs enable you to recognize visitors, monitor events, generate events dynamically, and track the activities of users, including any properties that describe their actions. This information can be used to gain insights into user behavior and create campaigns based on user segmentation at different levels. For example, with the user event data, you can send welcome messages to customers through e-mail or offer different offers based on user age, gender, etc.\nThe SDK has below standard event tracking APIs:\nSign In\nSign Up\nUser Update\nSign Out\nSign In\nThis API enables reporting of a SignIn event to the SDK.\nSwift\npublic func reportUserSignIn(data: UserSignInGenerator, customData: Attributes)\nUserSignInGenerator\n: This object holds the necessary basic information. You can generate this object by organizing the required information into a suitable container or object that adheres to the\nUserSignInGenerator\nprotocol.\ncustomData\n(Optional): This allows adding any extra information or custom data associated with the event being reported. The custom data should be added in the format of a\nDictionary<String, Any>\n.\nParameters\nType\nDescription\nMandatory/Optional\nfirstName\nString\nUser first name\nMandatory\nlastName\nString\nUser last name\nMandatory\nemail\nString\nUser email address\nOptional\nphone\nString\nUser mobile number\nMandatory\ncustomData\nDictionary\nAdditional information associated with the event being reported.\nOptional\nExample 1:\nSignIn event with  empty\ncustomData\nparameter.\nSwift\nlet userSignInData = UserSignInData(firstName: \"first-name\", lastName: \"last-name\", email: \"\n[email protected]\n\", phone: \"xxxxxxxx\")\nhydraCore.reportUserSignIn(data: userSignInData, customData: [:])\nExample 2:\nSignIn event with\ncustomData\nattributes age and gender. This allows for the logging of specific attributes related to the user's age and gender during the user sign-in report.\nSwift\nlet userSignInData = UserDetails(firstName: \"first-name\", lastName: \"last-name\", email: nil, phone: \"xxxxxxxx\")\nhydraCore.reportUserSignIn(data: userSignInData, customData: [“Age”: “25”, “Gender”: “Male”])\nExample 3:\nSignIn event with\ncustomData\nattributes age, gender and email.\nSwift\nlet userSignInData = UserSignInData(firstName: \"first-name\", lastName: \"last-name\", email: \"\n[email protected]\n\", phone: \"xxxxxxxx\")\nhydraCore.reportUserSignIn(data: userSignInData, customData: [“Age”: “25”, “Gender”: “Male”])\nSign Up\nThis API enables reporting of a SignUp (user registration) event to the SDK.\nSwift\npublic func reportUserSignUp(data: UserSignUpGenerator, customData: Attributes)\nUserSignUpGenerator\n: This object holds the necessary basic information. You can generate this object by organizing the required information into a suitable container or object that adheres to the\nUserSignUpGenerator\nprotocol.\ncustomData\n(Optional): This allows adding any extra information or custom data associated with the event being reported. The custom data should be added in the format of a\nDictionary<String, Any>\n.\nParameters\nType\nDescription\nMandatory/Optional\nfirstName\nString\nUser first name\nMandatory\nlastName\nString\nUser last name\nMandatory\nemail\nString\nUser email address\nOptional\nphone\nString\nUser mobile number\nMandatory\ncustomData\nDictionary\nAdditional information associated with the event being reported.\nOptional\nExample 1:\nSignUp event with empty\ncustomData\nparameter.\nSwift\nlet userSignUpData = UserSignUpData(firstName: \"first-name\", lastName: \"last-name\", email: \"\n[email protected]\n\", phone: \"xxxxxxxx\")\nhydraCore.reportUserSignUp(data: userSignUpData, customData: [:])\nExample 2:\nSignUp event with\ncustomData\nattributes age and gender. This allows for the logging of specific attributes related to the user's age and gender during the user sign-in report.\nSwift\nlet userSignUpData = UserDetails(firstName: \"first-name\", lastName: \"last-name\", email: nil, phone: \"xxxxxxxx\")\nhydraCore.reportUserSignUp(data: userSignUpData, customData: [“Age”: “25”, “Gender”: “Male”])\nExample 3:\nSignUp event with\ncustomData\nattributes age, gender and email.\nSwift\nlet userSignUpData = UserSignUpData(firstName: \"first-name\", lastName: \"last-name\", email: \"\n[email protected]\n\", phone: \"xxxxxxxx\")\nhydraCore.reportUserSignUp(data: userSignUpData, customData: [“Age”: “25”, “Gender”: “Male”])\nUser profile update\nThis API enables reporting of a user details update event to the SDK.\nSwift\npublic func reportUserProfileUpdate(data: UserProfileUpdateGenerator, customData: Attributes, subscriptions: [Any]? = nil)\nUserProfileUpdateGenerator\n: This object holds the necessary basic information. You can generate this object by organizing the required information into a suitable container or object that adheres to the\nUserProfileUpdateGenerator\nprotocol.\ncustomData\n(Optional): This allows adding any extra information or custom data associated with the event being reported. The custom data should be added in the format of a\nDictionary<String, Any>\n.\nParameters\nType\nDescription\nMandatory/Optional\nfirstName\nString\nUser first name\nOptional\nlastName\nString\nUser last name\nOptional\nemail\nString\nUser email address\nOptional\nphone\nString\nUser mobile number\nOptional\ncustomData\nDictionary\nAdditional information associated with the event being reported.\nOptional\nsubscriptions\nArray\nThe subscriptions list for the logged in user.\nOptional\nExample 1:\nUser profile update event with  empty\ncustomData\nparameter.\nSwift\nlet userProfileUpdateData = UserProfileUpdateData(firstName: \"first-name\", lastName: \"last-name\", email: \"\n[email protected]\n\", phone: \"xxxxxxxx\")\nhydraCore.reportUserProfileUpdate(data: userProfileUpdateData, customData: [:])\nExample 2:\nUser profile update with\ncustomData\nattributes age and gender. This allows for the logging of specific attributes related to the user's age and gender during the user sign-in report.\nSwift\nlet userProfileUpdateData = UserProfileUpdateData(firstName: \"first-name\", lastName: \"last-name\", email: \"\n[email protected]\n\", phone: \"xxxxxxxx\")\nhydraCore.reportUserProfileUpdate(data: userProfileUpdateData, customData: [“Age”: “25”, “Gender”: “Male”])\nExample 3:\nUser profile update event with\nsubscription\nparameter.\nSwift\nvar subscriptions: [HydraSubscription] = []\nvar subscription: HydraSubscription = HydraSubscription(channel: \"EMAIL\", priority: \"BULK\", type: \"OPTIN\")\n subscriptions.append(subscription)\n subscription = HydraSubscription(channel: \"PUSH\", priority: \"BULK\", type: \"OPTIN\")\n subscriptions.append(subscription)\nlet userProfileUpdateData = UserDetails(firstName: \"first-name\", lastName: \"last-name\", email: \"\n[email protected]\n\", phone: \"xxxxxxxx\")\nhydraCoreSDK.reportUserProfileUpdate(data: userProfileUpdateData, customData: [:], subscriptions: subscriptions)\nSign Out\nThis API enables reporting of a sign-out event to the SDK.\nSwift\npublic func reportUserSignOut(customData: [String: Any])\nTo log sign-out events, you can call the API without providing any data. This action removes all the user-related basic information, such as first name and mobile number, that was previously provided in the session.\nExample\nSwift\nhydraCore.reportUserSignOut(customData: [:])\nSending behavioural events to SDK\nThese events can be used to track user actions throughout the application. These events are valid only if the SDK receives the\nSignIn\nor\nSignUp\nevents. Events are Invalid if they are called after a\nSignOut\nevent. In order to track these events, users have to pass event names (NotNull or NonEmpty) and attributes (optional).\nThe API below enables the application to send the custom events:\nSwift\npublic func reportBehavioralEvent(name: String, customAttributes attributes: Attributes)\nParameter\nType\nDescription\nMandatory/Optional\nevent_name\nString\nName of the event\nCompulsory\nattributes\nDictionary\nThe custom attributes map for the events\nOptional\nExample\n:\nSwift\nhydraCore.reportBehavioralEvent(name: \"event-name\",\n                                                        customAttributes: [\"additional-info\" : \"additional-details\",\n                                                                                      [\"additional-info\" : \"additional-details\"])\nTable of Contents\nSending standard events to SDK\nSign In\nSign Up\nUser profile update\nSign Out\nSending behavioural events to SDK"
  },
  {
    "url": "https://docs.capillarytech.com/docs/configure-push-notifications",
    "page_slug": "configure-push-notifications",
    "title": "Push notifications",
    "content": "Push notifications\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nPush notifications\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nPush notifications\nThis page provides you with information on push notifications and how to configure it.\nPush notifications are alerts that appear on a user's screen when an update occurs on the mobile app. The notification appears even if the user is not using the mobile app. They are useful for delivering timely and personalised content to users and can be an effective way to increase user engagement with your app.\nThe push notifications are enabled through the HydraNotifications framework. The framework also records data related to notifications and can be used for analytics.\nYou need to integrate the below frameworks to enable the push notifications:\nHydraPushNotification\nHydraPushNotificationServiceExtension\nCapillary SDK sends push notifications to users using\nFirebase Cloud Messaging\n(FCM). Firebase Cloud Messaging is a service that allows you to send notifications to your applications and receive information from them.\nTo configure APNS Push notifications with Firebase, perform the following:\nDownload APNs key\nLog into your Apple developer account.\nNavigate to\nCertificates, Identifiers and Profiles\n.\nClick\nKeys\nand then click  the “+” button in the top right corner.\nIn the\nName\nfield, enter a name for your APNs Auth Key.\nSelect Apple Push Notification Service (APNs).\nClick\nContinue\n.\nVerify the information and click\nConfirm\n.\nClick\nDownload\nto download your auth key file. Copy and save the Key ID.\n📘\nNote\nYou can only download the file once. Make sure you save this file properly and create a backup for later. Do not rename the file. You can also use APNs certificate. For more information see\nApple developer guide\n.\nAdd the APNs key/certificate to the Firebase\nIn the Firebase Console, go to your project settings.\nSelect the\nCloud Messaging\ntab.\nClick on\niOS app configuration\n.\nUpload your APNs authentication key or certificate. For more information, see\nFirebase documentation\n.\nConfigure Firebase Cloud Messaging (FCM)\nIn the Firebase Console, go to your project settings.\nSelect the\nCloud Messaging\ntab.\nFrom \"iOS app configuration,\" copy the \"Server Key\" and save it for later.\nAdd the Firebase configuration file to project\nDownload the\nGoogleService-Info.plist file\nfor your app.\nOpen your Xcode project.\nDrag and drop the GoogleService-Info.plist file into your project.\nMake sure that the file is added to your app's target.\nFor more information on\nGoogleService-Info.plist file\nand on adding it to your Firebase project, see\nFirebase documentation\n.\nInitialisation\nTo initialise the push notifications, perform the following:\nInstall Firebase SDK and set up push notifications in your app\nIn your Xcode project, open your app's\nAppDelegate.swift\nfile.\nImport the Firebase and FirebaseMessaging.\nIn the\ndidFinishLaunchingWithOptions\nmethod, add the following code to initialise Firebase:\nSwift\nimport Firebase\nimport FirebaseMessaging\n\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        FirebaseApp.configure()\n        Messaging.messaging().delegate = self\n\n\n        // Add any additional configuration code or other setup here\n\n\n        return true\n}\nInitialise NotificationCore\nInitialise\nHydraPushNotification\nobject. Use below API:\nSwift\nlet notificationCore:NotificationCore = NotificationCore.shared\nPass the HydraCore object created previously.\nSwift\nnotificationCore.update(sdk: hydraCoreSDK)\nTrigger HydraPushNotification APIs from AppDelegates\nThe\nHydraPushNotification\nclass is responsible for implementing APIs that respond to the life cycle methods of the application, including the AppDelegate protocols. To ensure the smooth functioning of\nHydraPushNotification\n, the application should trigger the following methods from their appropriate locations:\nSwift\npublic func application(_ application: UIApplication,\n                            didReceiveRemoteNotification userInfo: [AnyHashable: Any],\n                            fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void) -> ((UIBackgroundFetchResult) -> Void)\n\n\npublic func application(_ application: UIApplication,\n                             didRegisterForRemoteNotificationsWithToken deviceToken: Data)\n\n\npublic  func application(_ application: UIApplication,\n                             didFailToRegisterForRemoteNotificationsWithError error: Error)\n\n\npublic  func application(_ application: UIApplication,\n                             didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil)\nSend FCM token to SDK\nFrom AppDelegate’s\ndidReceiveRegistrationToken\n, send the received token to SDK\nSwift\nextension AppDelegate:MessagingDelegate{\n    func messaging(_ messaging: Messaging, didReceiveRegistrationToken fcmToken: String?) {\n        if let fcmToken = fcmToken {\n            Logger.info(\"FCM Token is \\(fcmToken)\")\n            notificationCore.messaging(didReceiveRegistrationToken: fcmToken)\n        }\n    }\n}\nExample:\nSwift\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n    private var notificationCore:NotificationCore\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        self.notificationCore.application(application, didFinishLaunchingWithOptions: launchOptions)\n    }\n    \n}\nextension AppDelegate: UNUserNotificationCenterDelegate{\n    func userNotificationCenter(_ center: UNUserNotificationCenter,\n                                didReceive response: UNNotificationResponse,\n                                withCompletionHandler completionHandler: @escaping () -> Void) {\n        let userInfo = response.notification.request.content.userInfo\n        Messaging.messaging().appDidReceiveMessage(userInfo)\n        let result = notificationCore.userNotification(center: center, didReceive: response, withCompletionHandler: completionHandler)\n        if result != nil {\n                //developer can write custom code to handle as per their needs.\n        }\n    }\n    func userNotificationCenter(_ center: UNUserNotificationCenter,\n                                willPresent notification: UNNotification,\n                                withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {\n        let result = notificationCore.userNotification(center: center, willPresent: notification, withCompletionHandler: completionHandler)\n        if result != nil {\n                //developer can write custom code to handle as per their needs.\n        }\n    }\n}\n\n\nextension AppDelegate:MessagingDelegate{\n    func messaging(_ messaging: Messaging, didReceiveRegistrationToken fcmToken: String?) {\n        if let fcmToken = fcmToken {\n            Logger.info(\"FCM_Token is \\(fcmToken)\")\n            notificationCore.messaging(didReceiveRegistrationToken: fcmToken)\n        }\n    }\n}\n\n\nextension AppDelegate {\n    func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n        Messaging.messaging().apnsToken = deviceToken\n        notificationCore.application(application, didRegisterForRemoteNotificationsWithToken: deviceToken)\n    }\n\n\n    func application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {\n        print(\"Error occurred due to \\(error.localizedDescription)\")\n        notificationCore.application(application, didFailToRegisterForRemoteNotificationsWithError: error)\n    }\n\n\n    func application(_ application: UIApplication,\n                     didReceiveRemoteNotification userInfo: [AnyHashable : Any],\n                     fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void) {\n        Messaging.messaging().appDidReceiveMessage(userInfo)\n        notificationCore.application(application, didReceiveRemoteNotification: userInfo, fetchCompletionHandler: completionHandler)\n    }\n}\nCustomise and modify push notifications\nYou can integrate\nHydraPushNotificationExtensionService\nframework to\nUNNotificationServiceExtension\nto customise and modify incoming remote notifications before they are displayed to the user.  Perform the following:\n1. Create a push notification service extension target\nTo create a service extension target:\nIn Xcode, from the\nFile\nmenu, click\nNew\nand select\nTarget\n.\nSelect\nNotification Service Extension\n.\nEnter a name for the extension target and add it to the project.\nFor more information on service extension, see\nUNNotificationServiceExtension documentation\n.\n2. Add\nHydraPushNotificationServiceExtension\nframework to extension target\nAdd\nHydraPushNotificationServiceExtension\nframework to\nFrameworks and Libraries\nof notification service extension.\n3. Make changes to the\nUNNotificationServiceExtension\nclass\nImport\nHydraPushNotificationServiceExtension\nand call the API from this framework. See the code snippet below.\nSwift\nimport UserNotifications\nimport Foundation\nimport HydraPushNotificationServiceExtension\nclass NotificationService: UNNotificationServiceExtension {\n    let service:HydraRemoteNotificationService = .init()\n    override func didReceive(_ request: UNNotificationRequest, withContentHandler contentHandler: @escaping (UNNotificationContent) -> Void) {\n        service.didReceive(request, withContentHandler: contentHandler)\n    }\n    override func serviceExtensionTimeWillExpire() {\n            // Called just before the extension will be terminated by the system.\n            // Use this as an opportunity to deliver your \"best attempt\" at modified content, otherwise the original push payload will be used.\n        service.serviceExtensionTimeWillExpire()\n    }\n}\nGateway configuration\nTo enable mAPP SDK Channel and the push notifications, the team setting up the firebase account for the brand must raise a ticket with the gateways team with details requested by them.\nTable of Contents\nInitialisation\nInstall Firebase SDK and set up push notifications in your app\nInitialise NotificationCore\nTrigger HydraPushNotification APIs from AppDelegates\nSend FCM token to SDK\nCustomise and modify push notifications\n1. Create a push notification service extension target\n2. Add\nHydraPushNotificationServiceExtension\nframework to extension target\n3. Make changes to the\nUNNotificationServiceExtension\nclass\nGateway configuration"
  },
  {
    "url": "https://docs.capillarytech.com/docs/in-app-messaging_ios",
    "page_slug": "in-app-messaging_ios",
    "title": "In-app messaging",
    "content": "In-app messaging\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nIn-app messaging\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nIn-app messaging\nThis page provides you with information on In-app messaging feature.\nThe In-app messaging targets users by displaying messages while they are using your app. These messages are highly effective in providing contextual information and facilitating cross-selling/up-selling on specific screens or actions within your app.\nPrerequisites\nHydraPushNotification framework: Manages in-app messages.\nHydraInAppMessaging framework: Handles silent remote notifications (in-app messages).\nIntegration\nAdd the HydraInAppMessage framework. This framework is responsible for processing in-app messages.\nInitialize InAppMessagingCore object\nInitialize the InAppMessagingCore object and create an instance of the InboxCore using the following method:\nSwift\npublic init(with config: HydraInAppMessageConfigGenerator, environment env: Env = .dev) throws\nParameter\nType\nMandatory/Optional\nDescription\nconfig\nHydraInAppMessageConfigGenerator\nCompulsory\nAn object of class conforming to HydraInAppMessageConfigGenerator protocol\nenv\nEnvironment\nOptional\nEither .dev or .unittest\nHydraInAppMessageConfigGenerator\nThis value is required and can be generated using the following protocol:\nSwift\npublic protocol HydraInAppMessageConfigGenerator {\n    var hydraConfig: ConfigurationGenerator { get set }\n    var notificationCore: NotificationCore? { get set }\n    var placeholderImage: UIImage? { get set }\n    var appStoreId: String? { get set }\n}\nParameter\nType\nMandatory/Optional\nDescription\nhydraConfig\nConfigurationGenerator\nCompulsory\nAn instance of Hydra core.\nnotificationCore\nNotificationCore\nOptional\nAn instance of Notification core.\nplaceholderImage\nUIImage\nOptional\nAn object of UIImage class.\nappStoreId\nString\nOptional\nApplication's app store id.\nExample:\nSwift\nlet config = try HydraConfiguration(accountID: \"AccountID\", customerId: \"CustomerID\", server: .server1)\nguard let hydra = try? Hydra.generate(with: config) else {\n    Logger.error(\"Error in configuration generation\")\n    return nil\n}\nLogger.updateLogLevel(level: .critical)\ndo {\n    let inAppConfig = HydraInAppMessageConfiguration(hydraConfig: config, notificationCore: notificationCore, appStoreId: \"\", placeholderImage: nil)\n    inAppCore = try InAppMessagingCore(with: inAppConfig, environment: .dev)\n} catch let error {\n    print(error)\n}\nInApp-supported layouts\nApp rating\nFeedback\nFooter\nHeader\nInterstitial\nPop up\nRating\nTable of Contents\nPrerequisites\nIntegration\nInitialize InAppMessagingCore object\nInApp-supported layouts"
  },
  {
    "url": "https://docs.capillarytech.com/docs/configure-notification-center_ios",
    "page_slug": "configure-notification-center_ios",
    "title": "Notification center",
    "content": "Notification center\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nNotification center\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nNotification center\nThis page provides information about notification center and how to configure it.\nThe Notification Center is a feature in the SDK that provides a central place for users to view and manage all of their push notifications. The Notification Center is a UI element that is displayed within the app. It contains a list of all of the push notifications that the user has received. The user can tap on a notification to open the corresponding app.\nThe Notification Center helps with the following:\nCentralized Management:\nUsers access a centralized hub for all push notifications, ensuring organization and control over their app interactions.\nEnhanced Accessibility:\nNotifications are no longer buried in cluttered bars; users can manage them efficiently, leading to a seamless experience.\nIncreased Engagement:\nClear and accessible notifications promote active engagement, allowing users to respond promptly to social interactions, promotions, and achievements.\nImproved customer satisfaction:\nThe Notification Center will help to improve customer satisfaction by making the app more useful and engaging\nMetrics\n: Enables to track the number of users who open the Notification Center, the number of push notifications that are viewed in the Notification Center, and the number of push notifications that are deleted from the Notification Center\nUse Case: Retail Loyalty Program\nScenario:\nA retail company operates a loyalty program where customers earn points for each purchase. This program offers exclusive promotions and discounts to reward loyal customers. The app sends push notifications to users, notifying them of earned points and offering special discounts.\nIssue:\nMany users miss out on these discounts due to cluttered notification bars filled with messages from various apps. They frequently clear their notification bars without noticing the discounts, resulting in missed opportunities.\nSolution:\nIntroducing a Notification Center within the app resolves this issue. Users can conveniently access all loyalty program notifications in one location. Here, they can easily view their accumulated points and available discounts. This streamlined approach enhances user engagement and loyalty.\nPrerequisites\nNotification Management:\nThe Notification Center exclusively handles remote notifications that the application receives. To enable and support the Notification Center's functionality, developers must integrate two  frameworks:\nHydraPushNotification\nHydraPushNotificationServiceExtension\nApp Group Identifier Setup:\nTo ensure the proper functionality of InboxCore and InboxUI, developers must configure the App Group Identifier. We recommend creating a distinct App Group ID for the Capillary SDKs, following the format\ngroup.{app bundle id}.hydra\n❗️\nMake sure that the same App Group ID is enabled for all the targets where the Capillary SDK is utilized.\nSet up APP group ID\nTo set up an App Group ID for the main application, from\nTARGETS\n, select your App Target, navigate to the\nSigning & Capabilities\ntab and perform the following:\ni.  Enable\nApp Groups\nfor your app target and choose an App Group ID. If you don't have one, create a new one with the format\ngroup.{your_bundle_id}.hydra\n.\nii. Enable\nBackground mode\nand select/enable\nRemote Notification\n.\niii. Turn on the\nPush Notifications\ncapability for your app.\nTo set up an App Group ID for the Push Notification Extension Target, from\nTARGETS\n, select your App Target, navigate to the\nSigning & Capabilities\ntab and perform the changes as shown in the image below:\nNOTE:\nThe App Group ID must precisely match the name of the main application.\nIntegration\nYou can implement the Notification Center in the application in two ways:\nApproach\nFrameworks\nDescription\nApproach 1\nHydraInboxCore\nWhen developers want to create their own UI implementation, they can use this framework and its APIs. The framework returns all notifications, and developers can design their own UI as per their requirements.\nApproach 2\nHydraInboxCore and HydraInboxUI (Recommended)\nRecommended when the developer wants to use the Notification Center UI designed by the SDK. The developer needs to set up a notification button (or any button) and push/present the SDK’s Notification Center UI.\nIntegration Steps for HydraInboxCore Framework\nHydraInboxCore\nThis framework handles all remote notifications received by the application.\nAPIs are exposed to get details related to the Notification Center, such as the number of notifications available, the number of unread notifications, and the list of available notifications.\nThe application can use these APIs to design its own UI to display the Notification Center.\nIntegration Steps for HydraInboxCore and HydraInboxUI Frameworks (Recommended)\nHydraInboxUI\nResponsible for getting notifications from HydraInboxCore and displaying them under the Notification Center.\nRecommended for ease of use, as the application only needs to initialize HydraInboxUI.\nInitialization Steps for HydraInboxCore Framework and to create an instance of InboxCore\nSwift\npublic init(with config: HydraInboxCoreConfigGenerator, configuredFor env: Env) throws\nParameter\nType\nMandatory/Optional\nDescription\nconfig\nHydraInboxCoreConfigGenerator\nCompulsory\nObject of class conforming to HydraInboxCoreConfigGenerator protocol\nenv\nEnvironment\nOptional\nEither .dev or .unittest\nHydraInboxCoreConfigGenerator\nSwift\npublic protocol HydraInboxCoreConfigGenerator {\n    var maximumNotificationCount: Int? { get set }\n    var hydraConfig: ConfigurationGenerator { get set }\n    func update(with config: HydraInboxCoreConfigGenerator?)\n}\nParameter\nType\nMandatory/Optional\nDescription\nhydraConfig\nConfigurationGenerator\nCompulsory\nAn object of class conforming to ConfigurationGenerator protocol\nmaximumNotificationCount\nInt\nOptional\nMaximum number of notifications to display in the Notification Center (set to nil for internal default value)\nNOTE:\nIf\nmaximumNotificationCount\nis set to\nnull\n, the SDK will use an internal value (250) to limit the number of notifications stored in the database.\nInitialization Steps for HydraInboxUI Framework and to create an instance of InboxUICore\nSwift\npublic init(with inboxCore: InboxCore, configuration: HydraInboxUIConfigurator)\nParameter\nType\nMandatory/Optional\nDescription\ninboxCore\nInboxCore\nCompulsory\nInstance of InboxCore\nconfiguration\nHydraInboxUIConfigurator\nCompulsory\nObject of class conforming to HydraInboxUIConfigurator protocol\nHydraInboxUIConfigurator\nSwift\npublic protocol HydraInboxUIConfigurator {\n    var unreadMessageConfigurationType: InboxMessageConfiguration { get set }\n    var readMessageConfigurationType: InboxMessageConfiguration { get set }\n    var placeholderImage: UIImage? { get set }\n    var notificationsNotFoundConfiguration: HydraInboxEmptyNotificationsConfigurator { get set }\n}\nParameter\nType\nMandatory/Optional\nDescription\nunreadMessageConfigurationType\nInboxMessageConfiguration\nCompulsory\nEnum value: .defaultUnreadConfiguration or .customConfiguration\nreadMessageConfigurationType\nInboxMessageConfiguration\nCompulsory\nEnum value: .defaultReadConfiguration or .customConfiguration\nnotificationsNotFoundConfiguration\nHydraInboxEmptyNotificationsConfigurator\nOptional\nObject of class conforming to HydraInboxEmptyNotificationsConfigurator protocol\nplaceholderImage\nUIImage\nOptional\nObject of UIImage class\nNOTE:\nIf\nplaceholderImage\nis set to\nnull\n, the SDK application will set the application icon as placeholder image.\nHydraInboxEmptyNotificationsConfigurator\nSwift\npublic protocol HydraInboxEmptyNotificationsConfigurator {\n    var notificationsNotFoundLabelTextColor: UIColor { get set }\n    var notificationsNotFoundLabelFont: UIFont { get set }\n}\nParameter\nType\nMandatory/Optional\nDescription\nnotificationsNotFoundLabelTextColor\nUIColor\nCompulsory\nObject of class UIColor\nnotificationsNotFoundLabelFont\nUIFont\nCompulsory\nObject of class UIFont\nExample: Using Default UI Configuration\nSwift\nlet config = try HydraConfiguration(accountID: \"AccountID\", customerId: \"CustomerID\", server: .server1)\nguard let hydra = try? Hydra.generate(with: config) else {\n    Logger.error(\"Error in configuration generation\")\n    return nil\n}\nLogger.updateLogLevel(level: .critical)\ndo {\n    let config = InboxCoreConfiguration(hydraConfig: config, maximumNotificationCount: nil)\n    inboxCore = try InboxCore(with: config)\n    inboxUI = InboxUICore(with: inboxCore!, configuration: HydraInboxUIConfiguration(unreadMessageConfigType: .defaultUnreadConfiguration, readMessageConfigType: .defaultReadConfiguration))\n} catch let error {\n    print(error)\n}\nExample: Using Custom UI Configuration\nSwift\nlet config = try HydraConfiguration(accountID: \"AccountID\", customerId: CustomerID, server: .server1)\nguard let hydra = try? Hydra.generate(with: config) else { return nil }\nLogger.updateLogLevel(level: .critical)\ndo {\n    let config = InboxCoreConfiguration(hydraConfig: config, maximumNotificationCount: nil)\n    inboxCore = try InboxCore(with: config)\n    let unreadConfig: InboxMessageConfiguration = .customConfiguration(.systemIndigo, .white, .white, .white, .systemFont(ofSize: 20, weight: .heavy), .systemFont(ofSize: 15, weight: .bold), .italicSystemFont(ofSize: 10), 4, 6)\n    let readConfig: InboxMessageConfiguration = .customConfiguration(.systemPink, .white, .white, .white, .systemFont(ofSize: 15,\n\n weight: .heavy), .systemFont(ofSize: 10, weight: .bold), .italicSystemFont(ofSize: 10), 2, 4)\n    let emptyNotificationsConfiguration = HydraInboxEmptyNotificationsConfiguration(notificationsNotFoundLabelTextColor: .red, notificationsNotFoundLabelFont: .systemFont(ofSize: 15, weight: .regular))\n    inboxUI = InboxUICore(with: inboxCore!, configuration: HydraInboxUIConfiguration(unreadMessageConfigType: unreadConfig, readMessageConfigType: readConfig, notificationsNotFoundConfiguration: emptyNotificationsConfiguration, placeholderImage: UIImage(named: \"placeholder\")))\n} catch let error {\n    print(error)\n}\nNote: Custom configuration has the following sequence of parameters:\n.customConfiguration(cellBackgroundColor, cellTitleLabelTextColor, cellMessageLabelTextColor, cellTimeLabelTextColor, cellTitleLabelFont, cellMessageLabelFont, cellTimeLabelFont, cellTitleLabelLineLimit, cellMessageLabelLineLimit)\nAPI Usage\nHydraInboxCore\ngetUnreadNotificationCount()\nUse this API to retrieve the count of unread notifications using the instance of\nInboxCore\n. This method returns an integer value.\nExample:\nIn the example below, we have set a badge icon on the bell image if there is one or more unread notification(s):\nguard let inboxCore Application Manager sharedObj inboxCore else\n{\n  return\n}\nif inboxCore getUnread NotificationCount() > 0\n{\nnotificationButton setImage Ullmage system Name: \"bell.badge\" for normal\n} \nelse \n{\n  notificationButton setImage Ullmage system Name: \"bell\" for normal\n}\ngetNotifications()\nUse this API to get the available notifications. This method returns an array of\nHydraNotificationPayload\nobjects. The configuration provided while initializing the InboxCore instance is used. For more information, refer to the\nHydraInboxCoreConfigGenerator\nsection.\nExample:\nSwift\nval notifications: List<HydraNotificationPayload> = inboxCore.getNotifications()\nhandleNotification(notification: HydraNotificationPayload, action: HydraNotificationAction)\nThis API communicates the action taken on the notification to the SDK. The action should be an enum of type\nHydraNotificationAction\n.\nThere are two type of actions:\nUse\n.read\nwhen the user clicks on the notification, and\n.delete\nwhen the user wants to delete the notification.\nExample:\nSwift\ninboxCore.handleNotification(notification.notification, HydraNotificationAction.READ)\nhandleDeleteAllNotifications()\nThis API deletes all notifications associated with the current user from the database. Returns\ntrue\nif all notifications were deleted successfully, otherwise\nfalse\n.\nExample:\nSwift\nif (inboxCore.handleDeleteAllNotifications()) {\n    Logger.info(\"Delete all notifications succeeded\")\n} else {\n    Logger.error(\"Delete all notifications failed\")\n}\nperformNotificationAction(notification: HydraNotificationPayload)\nUse this API to perform the action associated with the notification when the user clicks on it.\nExample:\nSwift\ninboxCore.performNotificationAction(notification.notification)\nsetHydraInboxUIDelegate(delegate: HydraInboxUIProtocol?)\nUse this API to set the delegate of\nInboxCore\n. The delegate is notified of changes in the database, such as insertion, deletion, or updates of notifications. The view displaying the Notification Center should implement the\nHydraInboxUIProtocol\nand use this method.\nThe Notification Center view can implement the\nfunc refreshNotificationList()\nto update the UI and refresh the notifications.\nExample:\nSwift\nextension NotificationListViewModel: HydraInboxUIProtocol\n\n{ func refreshNotificationList()\n                                                         \n{\nDispatchQueue.main.async\n  { [weak self] in self?.refresh()\n}\n}\n}\nHydraInboxUI\nTo show Notification Center, an Application Developer can use either\nshowNotificationCenter(with navigationController: UINavigationController)\nOR\ngetNotificationCenter()\nAPI\nshowNotificationCenter(with navigationController: UINavigationController)\nUse this API to push Notification Center created by the SDK in the given navigationController.\nExample:\nSwift\ninboxUI.showNotificationCenter(with = navigationController)\ngetNotificationCenter()\nUse this API to obtain the Notification Center created by the SDK. The application can then decide whether to push or present this Notification Center.\nExample:\nSwift\nval notificationCenterViewController = inboxUI.getNotificationCenter()\nnavigationController.pushViewController(notificationCenterViewController, animated = true)\nsetHydraInboxUIDelegate(delegate: HydraInboxUIProtocol)\nUse this API to set the delegate of\nInboxUICore\n. This delegate is also passed internally to the\nInboxCore\ndelegate. By doing so, changes notified by\nInboxCore\nare directly passed to this delegate.\nExample:\nFor instance, if you have a bell icon on the Home screen that should show a badge when there are unread notifications, set the delegate of\nInboxUICore\non the Home screen using this method. Implement the\nrefreshNotificationList()\nmethod in the Home screen to update the bell icon accordingly:\nSwift\noverride func viewWillAppear(_ animated: Bool) {\n        super.viewWillAppear(animated)\n        updateNotificationBellIcon()\n       self.inboxUI.setInboxUIDelegate(delegate: self)\n}\n@objc private func updateNotificationBellIcon() {\n        guard let inboxCore = ApplicationManager.sharedObj.inboxCore else {\n            return\n        }\n        if inboxCore.getUnreadNotificationCount() > 0 {\n            notificationButton.setImage(UIImage(systemName: \"bell.badge\"), for: .normal)\n        } else {\n            notificationButton.setImage(UIImage(systemName: \"bell\"), for: .normal)\n        }\n    }\n\n\nextension HomeViewController: HydraInboxUIProtocol {\n    func refreshNotificationList() {\n        DispatchQueue.main.async { [weak self] in\n            self?.updateNotificationBellIcon()\n        }\n    }\n}\nTable of Contents\nPrerequisites\nIntegration\nAPI Usage\nHydraInboxCore\nhandleNotification(notification: HydraNotificationPayload, action: HydraNotificationAction)\nHydraInboxUI"
  },
  {
    "url": "https://docs.capillarytech.com/docs/setting-up-react-native-project-for-hydra-sdk",
    "page_slug": "setting-up-react-native-project-for-hydra-sdk",
    "title": "Setting up React native project for Hydra SDK",
    "content": "Setting up React native project for Hydra SDK\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nSetting up React native project for Hydra SDK\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nSetting up React native project for Hydra SDK\nThis document describes how to set up the React Native wrapper bridge using Hydra Native SDKs.\nTo use Capillary Engagement platform on React Native application, you need to set up the React Native Wrapper using the Native Hydra Android and iOS SDKs.\nRequirements\nAndroid\nMinimum Android SDK version - 21\nMinimum compileSdkVersion - 34\nSupported targetSdkVersion - 34\nMinimum Android Gradle Version - 7.2.2\nMinimum Kotlin version - 1.7.10\niOS\nMinimum iOS SDK version - 14.3+\nPrerequisites\nTo start integrating and accessing the Hydra SDK, you need -\nCapillary Account access with account Id, base url, and sslPublicKey\nPrivate Github Hydra Maven package access for Android and iOS\nClient team will need to share following information to Hydra team -\nApp bundle id for both Android and iOS (extracted by client app)\nApp signature (extracted by client app)\nGetting App Bundle Ids\nAndroid\n- Go to android/app/build.gradle file and copy applicationId\niOS\n- Open XCode, click on Project target -> General settings -> Copy Bundle Id\nGetting App Signature\nFor Android, Capillary requires App’s signatures for Debug and Release certificates. Here is how you can extract the app signatures -\nFrom terminal\n-\nIf you have keytool installed, then you can use following commands -\nkeytool -list -v -keystore PATH_TO_KEYSTORE -alias VALUE_OF_ALIAS\nCopy the SHA256 string from the output:\nSHA256: LOOK_FOR_THIS_VALUE\nFrom Android Studio\n-\ngradle -> app -> Tasks -> android -> signingReport\nCopy the SHA256 string from the output:\nSHA256: LOOK_FOR_THIS_VALUE\nNative Hydra Packages\nHydra SDK supports following packages -\nHydra Core - This is the core Hydra package which is used to initialize Hydra SDK and expose behavioral events (signUp, signIn, pushEvents etc)\nHydra Push Base - Base Push notification package\nHydra Firebase - Hydra Firebase package for push notifications using Firebase\nHydra Rich Notification - Package for Rich Notification support in Android\nHydra InApp - Hydra package for In App messaging support\nHydra Inbox Core - Hydra package for Notification Center Support APIs\nHydra Inbox UI  - Hydra package for Notification Center Support with UI\nHydra Push Notification Extension (iOS only) - Push notification extension for iOS\nDemo App\nWe have also create a Sample React native application to demonstrate how to integrate these packages in the React Native application, please contact Capillary support team to get the access\nReact Native Android Setup\nSetting up Hydra Gradle private repository URL\nHydra Native SDKs are the private Maven repositories, to access the private repositories in the React Native applications, you need to add the private Maven repository URL and credentials in the afterEvaluate section in the app/build.gradle file.\nOpen android/app/build.gradle file and add the following code at the end of file -\nbuild.gradle\nproject.afterEvaluate {\n   project.repositories.maven { ->\n       url = URI.create(\"https://maven.pkg.github.com/Capillary/hydra-sdk-android-maven\")\n       credentials { cred ->\n           cred.username = System.getenv(\"MAVEN_USERNAME\")\n           cred.password = System.getenv(\"MAVEN_PASSWORD\")\n       }\n   }\n}\nYou need to add the MAVEN_USERNAME and MAVEN_PASSWORD either in the local environment (from bash) OR setup using the react-native-config environment setup. The other way you can do it is, add a github properties file in the android/app and read the variables from that file.\nNOTE: Username is your Github username and the password is the Github PAT.\nSetup Hydra Core SDK\nAdd dependencies of Hydra SDK along with AndroidX Libraries in the app/build.gradle file.\nbuild.gradle\ndependencies {\n...\n   // AndroidX libraries\n   implementation(\"androidx.core:core-ktx:1.13.1\")\n   implementation(\"androidx.appcompat:appcompat:1.6.1\")\n   implementation(\"androidx.lifecycle:lifecycle-process:2.8.0\")\n\n\n   // Hydra SDKs\n   implementation(\"com.capillary:hydra-core:1.3.1\")\n...\n}\nSetup React Native Android Bridge\nAs we are using the Native Hydra SDK to use the Capillary’s APIs, we will need to set up the Android bridge and expose the native methods to the React Native application.\nNavigate to Android Project:\nOpen your React Native project's Android folder using Android Studio or another IDE. This folder is usually located at android/app/src/main/java/com.your.app.name (replace com.your.app.name with your actual app's package name).\nCreate a New Class:\nInside this folder, create a new Java or Kotlin class for your native module. For example, if your module is for handling toast messages, name it RnHydraModule.kt\nSetup this class as a ReactNativeModule by extending it using ReactContextBaseJavaModule -\nRnHydraModule.kt\nimport com.facebook.react.bridge.ReactApplicationContext\nimport com.facebook.react.bridge.ReactContextBaseJavaModule\n\n\nclass RnHydraModule(reactContext: ReactApplicationContext) :\n   ReactContextBaseJavaModule(reactContext) {\n   override fun getName(): String {\n       return NAME\n   }\n\n\n   companion object {\n       const val NAME = \"HydraRnSdk\"\n   }\n}\nRegister the Module (Java/Kotlin)\nIn the same directory, create a new class RnHydraPackage.kt and replace it’s contents with following code -\nKotlin\nimport com.facebook.react.ReactPackage\nimport com.facebook.react.bridge.ReactApplicationContext\nimport com.facebook.react.uimanager.ViewManager\n\n\nclass RnHydraPackage: ReactPackage {\n   override fun createNativeModules(reactContext: ReactApplicationContext): List<RnHydraModule> {\n       return listOf(RnHydraModule(reactContext))\n   }\n\n\n   override fun createViewManagers(reactContext: ReactApplicationContext): List<ViewManager<*, *>> {\n       return emptyList()\n   }\n}\nNow open the MainApplication.kt file, and in getPackages method, add this package as -\nKotlin\noverride fun getPackages(): List<ReactPackage> =\n   PackageList(this).packages.apply {\n     add(RnHydraPackage())\n   }\nReact Native iOS Setup\nTo use the Hydra SDK APIs on iOS, we need to integrate the native iOS packages and expose the native methods over the React Native Bridge.\nNOTE:\nPlease make sure to do\npod install\nbefore starting iOS setup\nSetup Native Hydra iOS XCode packages\nTo add Native iOS packages, add the Hydra iOS package repository -\nOpen the iOS project from ReactNativeProject/iOS/ReactNativeProject.xcworkspace\nClick on Project target on top left corner and click on project name under Project section\nClick on Add button (+) to add new XCode package and search for\nhttps://github.com/Capillary/hydra-sdk-ios-packages.git\nClick Add Package and add the required packages to the Project and click Add Package -\nSetup iOS React Native Bridge module\nIn XCode, right click on your project name in the left pane and click New File option and select Objective-C file.\nCreate RnHydraModule.m file and in this file enter the following code to setup the Native Module -\nObjective-C\n#import <React/RCTBridgeModule.h>\n\n@interface RCT_EXTERN_MODULE(RnHydraSdk, NSObject)\n\n@end\nMake sure your RnHydraModule.m is added to the App’s target by checking it from right pane -\nCreate another swift file - RnHydraSdk.swift to add the implementation for the Native methods we will be exposing on React Native Bridge -\nWhen you add this file,\nXCode may prompt you to add a bridging header\n, please add it.\nSwift\n@objc(RnHydraSdk)\nclass RnHydraSdk: NSObject {\n  \n}\nNOTE:\nPlease make sure to create the swift file with the same as you created your Native Bridge with, in our case we named RnHydraSdk.\nHydra Core\nSetup Native Android Hydra Core methods\nAdd Native Hydra Core methods\nOpen RnHydraModule file and add following methods for accessing the Hydra Core APIs\nKotlin\nimport com.capillary.hydra.android.sdk.FcmConfig\nimport com.capillary.hydra.android.sdk.HydraAPI\nimport com.capillary.hydra.android.sdk.HydraConfig\nimport com.capillary.hydra.android.sdk.UserPreferences\nimport com.capillary.hydra.android.sdk.utils.Logger\nimport com.facebook.react.bridge.Promise\nimport com.facebook.react.bridge.ReactApplicationContext\nimport com.facebook.react.bridge.ReactContextBaseJavaModule\nimport com.facebook.react.bridge.ReactMethod\nimport com.facebook.react.bridge.ReadableMap\nimport com.hydrarnsdk.utils.convertReadableMapToMap\n\n\nclass RnHydraModule(reactContext: ReactApplicationContext) :\n   ReactContextBaseJavaModule(reactContext) {\n   override fun getName(): String {\n       return NAME\n   }\n\n\n   companion object {\n       const val NAME = \"RnHydraSdk\"\n       const val INSTANCE_NOT_FOUND = \"Cannot find Capillary instance, please instantiate your SDK\"\n   }\n\n\n   private var hydraAPI: HydraAPI? = null\n\n\n   /**\n    * ********************************************************************************\n    *                          Hydra Core APIs\n    * ********************************************************************************\n    */\n\n\n   /**\n    * Initializes the SDK with the provided configuration\n    */\n   @ReactMethod\n   fun initSdk(rnConfig: ReadableMap, promise: Promise?) {\n       val accountId = rnConfig.getString(\"accountId\")\n       if (accountId == null) {\n           promise?.reject(Throwable(\"Account Id cannot be null\"))\n           return\n       }\n\n\n       val baseUrl: String? = rnConfig.getString(\"baseURL\")\n       val sslPublicKey: String? = rnConfig.getString(\"sslPublicKey\")\n       val country = rnConfig.getString(\"country\")\n       val countryCode = rnConfig.getString(\"countryCode\")\n       val city = rnConfig.getString(\"city\")\n       val captureViewPortDetails: Boolean = rnConfig.getBoolean(\"captureViewPortDetails\")\n       val isDisableAppLaunchedEvent: Boolean = rnConfig.getBoolean(\"captureViewPortDetails\")\n       val debugLevel = rnConfig.getInt(\"debugLevel\")\n       val isFCMRegistrationEnabled =\n           rnConfig.getMap(\"fcmConfig\")?.getBoolean(\"isFCMRegistrationEnabled\") == true\n\n\n       val fcmConfig = FcmConfig(isFCMRegistrationEnabled)\n\n\n       val hydraConfig: HydraConfig = HydraConfig.Builder(\n           currentActivity!!.applicationContext,\n           accountId,\n           baseUrl,\n           sslPublicKey,\n           country,\n           city,\n           countryCode,\n           captureViewPortDetails,\n           fcmConfig,\n           null,\n           null,\n           null,\n           isDisableAppLaunchedEvent,\n           debugLevel\n       ).build()\n\n\n       Logger.i(\"Hydra Capillary SDK initialized successfully!\")\n       promise?.resolve(true)\n   }\n\n\n   /**\n    * Pushes the user sign up event to the SDK\n    *\n    * @param cuId The customer unique identifier\n    * @param firstName The first name of the user\n    * @param lastName The last name of the user\n    * @param email The email of the user\n    * @param phone The phone number of the user\n    * @param customData The custom data to be sent along with the event\n    * @param promise The promise to resolve or reject the event\n    *\n    * @return The promise to resolve or reject the event\n    *\n    * @throws Throwable If the instance is not found\n    *\n    */\n   @ReactMethod\n   fun pushUserSignUp(\n       cuId: String,\n       firstName: String,\n       lastName: String,\n       email: String,\n       phone: String,\n       customData: ReadableMap? = null,\n       promise: Promise?\n   ) {\n       if (hydraAPI == null) promise?.reject(Throwable(INSTANCE_NOT_FOUND))\n       val result = hydraAPI?.pushUserSignup(cuId, firstName, lastName, email, phone,\n           customData?.let { convertReadableMapToMap(it) })\n       Logger.i(\"User signed up successfully!\")\n       promise?.resolve(result != null)\n   }\n\n\n   /**\n    * Pushes the user sign in event to the SDK\n    *\n    * @param cuId The customer unique identifier\n    * @param firstName The first name of the user\n    * @param lastName The last name of the user\n    * @param email The email of the user\n    * @param phone The phone number of the user\n    * @param customData The custom data to be sent along with the event\n    * @param promise The promise to resolve or reject the event\n    *\n    * @return The promise to resolve or reject the event\n    *\n    * @throws Throwable If the instance is not found\n    */\n   \n@ReactMethod\n   fun pushUserSignIn(\n       cuId: String,\n       firstName: String? = null,\n       lastName: String? = null,\n       email: String? = null,\n       phone: String? = null,\n       customData: ReadableMap? = null,\n       promise: Promise?\n   ) {\n       if (hydraAPI == null) promise?.reject(Throwable(INSTANCE_NOT_FOUND))\n       val result = hydraAPI?.pushUserSignin(cuId, firstName, lastName, email, phone,\n           customData?.let { convertReadableMapToMap(it) })\n       Logger.i(\"User signed up successfully!\")\n       promise?.resolve(result != null)\n   }\n\n\n   /**\n    * Pushes the user update event to the SDK\n    *\n    * @param cuId The customer unique identifier\n    * @param firstName The first name of the user\n    * @param lastName The last name of the user\n    * @param email The email of the user\n    * @param phone The phone number of the user\n    * @param customData The custom data to be sent along with the event\n    * @param promise The promise to resolve or reject the event\n    *\n    * @return The promise to resolve or reject the event\n    *\n    * @throws Throwable If the instance is not found\n    */\n   @ReactMethod\n   fun pushUserUpdate(\n       cuId: String,\n       firstName: String? = null,\n       lastName: String? = null,\n       email: String? = null,\n       phone: String? = null,\n       customData: ReadableMap? = null,\n       subscriptions: ReadableArray? = null,\n       promise: Promise?\n   ) {\n       if (hydraAPI == null) promise?.reject(Throwable(INSTANCE_NOT_FOUND))\n       val result = hydraAPI?.pushUserUpdate(\n           cuId,\n           firstName,\n           lastName,\n           email,\n           phone,\n           customData?.let { convertReadableMapToMap(it) },\n           subscriptions?.let { subscriptions.toArrayList() }\n       )\n       Logger.i(\"User data updated successfully!\")\n       promise?.resolve(result != null)\n   }\n\n   /**\n    * Pushes the user sign out event to the SDK\n    *\n    * @param cuId The customer unique identifier\n    * @param promise The promise to resolve or reject the event\n    *\n    * @return The promise to resolve or reject the event\n    *\n    * @throws Throwable If the instance is not found\n    */\n   @ReactMethod\n   fun pushUserSignOut(\n       cuId: String,\n       promise: Promise?\n   ) {\n       if (hydraAPI == null) promise?.reject(Throwable(INSTANCE_NOT_FOUND))\n       val result = hydraAPI?.pushUserSignOut(cuId)\n       Logger.i(\"User signed out successfully!\")\n       promise?.resolve(result != null)\n   }\n\n\n   /**\n    * Pushes the user delete event to the SDK\n    *\n    * @param cuId The customer unique identifier\n    * @param userPreference The user preferences to be sent along with the event\n    * @param promise The promise to resolve or reject the event\n    *\n    */\n   @ReactMethod\n   fun passUserPreferences(cuId: String, userPreference: ReadableMap, promise: Promise?) {\n       if (hydraAPI == null) promise?.reject(Throwable(INSTANCE_NOT_FOUND))\n\n\n       val promPushOpted = userPreference.getBoolean(\"promPushOpted\")\n       val transPushOpted = userPreference.getBoolean(\"transPushOpted\")\n       val result = hydraAPI?.passUserPreferences(cuId, UserPreferences(promPushOpted, transPushOpted))\n       Logger.i(\"User preferences data updated successfully!\")\n       promise?.resolve(result != null)\n   }\n\n\n   /**\n    * Pushes the user events to the SDK\n    *\n    * @param eventName The event name to be pushed\n    * @param attributes The attributes to be sent along with the event\n    *\n    * @return The promise to resolve or reject the event\n    *\n    * @throws Throwable If the instance is not found\n    *\n    * @example\n    * pushEvent(\"eventName\", { \"key\": \"value\" })\n    *\n    */\n   @ReactMethod\n   fun pushEvent(\n       eventName: String,\n       attributes: ReadableMap? = null,\n       promise: Promise?\n   ) {\n       if (hydraAPI == null) promise?.reject(Throwable(INSTANCE_NOT_FOUND))\n       val result = hydraAPI?.pushEvent(eventName, attributes?.let { convertReadableMapToMap(it) })\n       Logger.i(\"Push Event sent successfully!\")\n       promise?.resolve(result != null)\n   }\n}\nAdd a utils class\nCreate a new folder called utils/utils.kt and add the following code in it -\nutils/utils.kt\npackage com.hydrarnsdk.utils\n\n\nimport android.os.Bundle\nimport com.capillary.hydra.inbox.core.model.Action\nimport com.capillary.hydra.inbox.core.model.CTATYPE\nimport com.capillary.hydra.inbox.core.model.GATEWAY\nimport com.capillary.hydra.inbox.core.model.InboxMessage\nimport com.capillary.hydra.inbox.core.model.MediaContent\nimport com.capillary.hydra.inbox.core.model.TextContent\nimport com.facebook.react.bridge.Arguments\nimport com.facebook.react.bridge.ReadableArray\nimport com.facebook.react.bridge.ReadableMap\nimport com.facebook.react.bridge.ReadableType\nimport com.facebook.react.bridge.WritableMap\nimport org.json.JSONObject\n\n\n\n\n// Recursive function to convert ReadableMap to Map\nfun convertReadableMapToMap(readableMap: ReadableMap): Map<String, Any> {\n   val immutableMap = mutableMapOf<String, Any>()\n   val iterator = readableMap.keySetIterator()\n   while (iterator.hasNextKey()) {\n       val key = iterator.nextKey()\n       when (readableMap.getType(key)) {\n           ReadableType.Boolean -> immutableMap[key] = readableMap.getBoolean(key)\n           ReadableType.Number -> immutableMap[key] = readableMap.getDouble(key)\n           ReadableType.String -> immutableMap[key] = readableMap.getString(key) as String\n           ReadableType.Map -> immutableMap[key] =\n               convertReadableMapToMap(readableMap.getMap(key)!!)\n\n\n           ReadableType.Array -> {\n               readableMap.getArray(key)?.let { convertReadableArrayToArray(it) }\n           }\n\n\n           else -> { /* Handle other types if needed */\n           }\n       }\n   }\n   return immutableMap\n}\n\n\nfun convertReadableArrayToArray(readableArray: ReadableArray): List<Any> {\n   val immutableList = mutableListOf<Any>()\n   for (i in 0 until readableArray.size()) {\n       when (readableArray.getType(i)) {\n           ReadableType.Boolean -> immutableList.add(readableArray.getBoolean(i))\n           ReadableType.Number -> immutableList.add(readableArray.getDouble(i))\n           ReadableType.String -> immutableList.add(readableArray.getString(i))\n           ReadableType.Map -> immutableList.add(convertReadableMapToMap(readableArray.getMap(i)))\n           ReadableType.Array -> immutableList.add(\n               convertReadableArrayToArray(\n                   readableArray.getArray(\n                       i\n                   )\n               )\n           )\n\n\n           else -> { /* Handle other types if needed */\n           }\n       }\n   }\n   return immutableList\n}\n\n\nfun convertBundleToReadableMap(bundle: Bundle): WritableMap {\n   return Arguments.fromBundle(bundle)\n}\n\n\nfun readableMapToInboxMessage(map: ReadableMap): InboxMessage? {\n   val scope = map.getString(\"scope\") ?: return null\n   val accountId = map.getString(\"accountId\") ?: return null\n   val senderId = map.getString(\"senderId\") ?: return null\n   val messageId = map.getString(\"messageId\") ?: return null\n\n\n   val gatewayString = map.getString(\"gateway\")\n   val gateway = GATEWAY.valueOf(gatewayString ?: return null)\n\n\n   val textContentMessage = map.getMap(\"textContent\")?.getString(\"message\")\n   val textContentTitle = map.getMap(\"textContent\")?.getString(\"title\")\n   val textContent = TextContent(textContentTitle!!, textContentMessage!!)\n\n\n   var actionObj: Action? = null\n   map.getMap(\"action\")?.let {\n       val action = it.getString(\"action\")\n       val actionText = it.getString(\"actionText\")\n       val actionType: CTATYPE = enumValueOf<CTATYPE>(it.getString(\"type\").toString())\n       actionObj = Action(actionText!!, actionType, action)\n   }\n\n\n   val mediaImage = map.getMap(\"mediaContent\")?.getString(\"image\")\n   val mediaContent = MediaContent(mediaImage!!)\n\n\n   val isRead = map.getBoolean(\"isRead\")\n   val createdAt = map.getString(\"createdAt\") ?: return null\n   val payload = map.getString(\"payload\")?.let { JSONObject(it) } ?: JSONObject()\n\n\n   return InboxMessage(\n       scope,\n       accountId,\n       senderId,\n       messageId,\n       gateway,\n       textContent,\n       actionObj,\n       mediaContent,\n       isRead,\n       createdAt,\n       payload\n   )\n}\n\n\nfun inboxMessageToReadableMap(message: InboxMessage): ReadableMap {\n   val mutableMap = mutableMapOf<String, Any>()\n   mutableMap[\"scope\"] = message.scope\n   mutableMap[\"accountId\"] = message.accountId\n   mutableMap[\"senderId\"] = message.senderId\n   mutableMap[\"messageId\"] = message.messageId\n   mutableMap[\"gateway\"] = message.gateway.name\n\n\n   val textContentMap = mutableMapOf<String, Any>()\n   textContentMap[\"title\"] = message.textContent.title\n   textContentMap[\"message\"] = message.textContent.message\n   mutableMap[\"textContent\"] = textContentMap\n\n\n   message.action?.let {\n       val actionMap = mutableMapOf<String, Any>()\n       actionMap[\"actionText\"] = it.actionText as String\n       actionMap[\"type\"] = it.type.name\n       actionMap[\"action\"] = it.action as String\n       mutableMap[\"action\"] = actionMap\n   }\n\n\n   message.mediaContent?.let {\n       val mediaContentMap = mutableMapOf<String, Any>()\n       mediaContentMap[\"image\"] = it.image\n       mutableMap[\"mediaContent\"] = mediaContentMap\n   }\n\n\n   mutableMap[\"isRead\"] = message.isRead\n   mutableMap[\"createdAt\"] = message.createdAt\n   mutableMap[\"payload\"] = message.payload.toString()\n\n\n   return Arguments.makeNativeMap(mutableMap)\nSetup Native iOS Hydra Core methods\nOpen RnHydraModule.m and add following methods in the file -\niOS Bridge methods\nObjective-C\n#import <React/RCTBridgeModule.h>\n\n\n@interface RCT_EXTERN_MODULE(RnHydraSdk, NSObject)\n\n\nRCT_EXTERN_METHOD(initSdk:(NSDictionary)config\n                 withResolver:(RCTPromiseResolveBlock)resolve\n                 withRejecter:(RCTPromiseRejectBlock)reject)\n\n\nRCT_EXTERN_METHOD(pushUserSignUp:(NSString *)username\n                 withFirstName: (NSString *)firstname\n                 withLastName: (NSString *)lastname\n                 withEmail: (NSString *)email\n                 withPhone: (NSString *) phone\n                 withCustomData: (NSDictionary)customData\n                 withResolver:(RCTPromiseResolveBlock)resolve\n                 withRejecter:(RCTPromiseRejectBlock)reject)\n\n\nRCT_EXTERN_METHOD(pushUserSignIn:(NSString *)username\n                 withFirstName: (NSString *)firstname\n                 withLastName: (NSString *)lastname\n                 withEmail: (NSString *)email\n                 withPhone: (NSString *) phone\n                 withCustomData: (NSDictionary)customData\n                 withResolver:(RCTPromiseResolveBlock)resolve\n                 withRejecter:(RCTPromiseRejectBlock)reject)\n\n\nRCT_EXTERN_METHOD(pushUserSignOut:(NSString *)cuId\n                 withResolver:(RCTPromiseResolveBlock)resolve\n                 withRejecter:(RCTPromiseRejectBlock)reject)\n\n\nRCT_EXTERN_METHOD(pushUserUpdate: (NSString *)username\n                 withFirstName: (NSString *)firstname\n                 withLastName: (NSString *)lastname\n                 withEmail: (NSString *)email\n                 withPhone: (NSString *) phone\n                 withCustomData: (NSDictionary)customData\n                 withSubscriptions: (NSArray)subscriptions\n                 withResolver:(RCTPromiseResolveBlock)resolve\n                 withRejecter:(RCTPromiseRejectBlock)reject)\n\n\nRCT_EXTERN_METHOD(pushEvent:(NSString *)eventName\n                 withEventAttributes:(NSDictionary)eventAttributes\n                 withResolver:(RCTPromiseResolveBlock)resolve\n                 withRejecter:(RCTPromiseRejectBlock)reject)\n\n\nRCT_EXTERN_METHOD(passUserPreferences: (NSDictionary)userPreferences\n                 withResolver: (RCTPromiseResolveBlock)resolve\n                 withRejecter:(RCTPromiseRejectBlock)reject)\n\n\nRCT_EXTERN_METHOD(updateCustomerId:(NSString *)custId\n                 withResolver:(RCTPromiseResolveBlock)resolve\n                 withRejecter:(RCTPromiseRejectBlock)reject)\n@end\niOS Bridge Method implementation\nNow, open HydraRnSdk.swift file and add the following methods to implement the above methods we defined -\nSwift\nimport HydraCore\nimport HydraPushNotification\nimport HydraInAppMessage\n\n\n@objc(RnHydraSdk)\nclass RnHydraSdk: NSObject {\n  static var hydra: Hydra? = nil\n\n\n public static func getHydraInstance() -> Hydra? {\n   if (hydra != nil) {\n     return hydra\n   }\n  \n   return nil\n }\n  @objc(initSdk:withResolver:withRejecter:)\n func initSdk(config: NSDictionary,\n              resolve:RCTPromiseResolveBlock?,\n              reject:RCTPromiseRejectBlock?) -> Void {\n   let accountId: String = (config.value(forKey: \"accountId\") as? String) ?? \"\"\n   let customerId: String = (config.value(forKey: \"customerId\") as? String) ?? \"\"\n   let baseUrl: String = (config.value(forKey: \"baseURL\") as? String) ?? \"\"\n   let sslPublicKey: String = (config.value(forKey: \"sslPublicKey\") as? String) ?? \"\"\n   let country: String = (config.value(forKey: \"country\") as? String) ?? \"\"\n   let city: String = (config.value(forKey: \"city\") as? String) ?? \"\"\n   let countryCode: String = (config.value(forKey: \"countryCode\") as? String) ?? \"\"\n   let timezone: String = (config.value(forKey: \"timezone\") as? String) ?? \"\"\n   let debugLevel: Int = (config.value(forKey: \"debugLevel\") as? Int) ?? 0\n  \n   do {\n     let config: HydraConfiguration = try HydraConfiguration(\n       accountID: accountId,\n       customerId: customerId,\n       server:  .genericServer(baseUrl, sslPublicKey, [0,5,10,30,120]))\n     let geoData: GeoData = GeoData(country: country, countryCode: countryCode, city: city, timeZone: timezone)\n\n\n     RnHydraSdk.hydra = RnHydraCore.shared.generateInstance(\n       withConfiguration: config,\n       geoData: geoData\n     )\n\n\n     // setting log level\n     RnHydraSdk.hydra!.updateLogLevel(level: getSdkLogLevel(debugLevel: debugLevel))\n     resolve?(\"HydraCore SDK initialized successully!\")\n     print(\"HydraCore SDK initialized successully!\")\n   } catch {\n     print(\"Error initializing SDK\")\n     reject?(\"ERROR\", \"Error initializing SDK\", error)\n   }\n }\n  @objc(pushUserSignUp:withFirstName:withLastName:withEmail:withPhone:withCustomData:withResolver:withRejecter:)\n func pushUserSignUp(username: String,\n                     firstname: String,\n                     lastname: String,\n                     email: String,\n                     phonenumber: String,\n                     customData: [String: Any],\n                     resolve:RCTPromiseResolveBlock?,\n                     reject:RCTPromiseRejectBlock?) -> Void {\n   if(RnHydraSdk.hydra != nil) {\n     let userInfo: UserDetails = UserDetails(\n       firstName: firstname,\n       lastName: lastname,\n       email: email,\n       phone: phonenumber)\n    \n     RnHydraSdk.hydra!.reportUserSignUP(data: userInfo, customData: customData)\n     resolve?(\"User sign up successfully!\")\n     print(\"pushUserSignIn::User sign up successfully!\")\n   } else {\n     reject?(\"SIGNUP_ERROR\", \"Error while signing up user\", getHydraNotFoundError())\n     print(\"pushUserSignUp::Error while signing up user\")\n   }\n }\n  @objc(pushUserSignIn:withFirstName:withLastName:withEmail:withPhone:withCustomData:withResolver:withRejecter:)\n func pushUserSignIn(username: String,\n                     firstname: String,\n                     lastname: String,\n                     email: String,\n                     phonenumber: String,\n                     customData: [String: Any],\n                     resolve:RCTPromiseResolveBlock?,\n                     reject:RCTPromiseRejectBlock?) -> Void {\n  \n   if(RnHydraSdk.hydra != nil) {\n     let userInfo: UserDetails = UserDetails(\n       firstName: firstname,\n       lastName: lastname,\n       email: email,\n       phone: phonenumber)\n    \n     RnHydraSdk.hydra!.reportUserSignIn(data: userInfo, customData: customData)\n     resolve?(\"User sign in successfully!\")\n     print(\"pushUserSignIn::User sign in successfully!\")\n   } else {\n     reject?(\"SIGNIN_ERROR\", \"Error while signing in user\", getHydraNotFoundError())\n     print(\"pushUserSignIn::Error while signing in user\")\n   }\n }\n  @objc(pushUserSignOut:withResolver:withRejecter:)\n func pushUserSignOut(cuId: String,\n                      resolve:RCTPromiseResolveBlock?,\n                      reject:RCTPromiseRejectBlock?) {\n   if(RnHydraSdk.hydra != nil) {\n     RnHydraSdk.hydra!.reportUserSignOut(customData: [\"customerId\": cuId])\n     resolve?(\"User sign in successfully!\")\n     print(\"pushUserSignOut::User sign out successfully!\")\n   } else {\n     let error = NSError(domain: \"com.reactnative.ccapillary\", code: 400, userInfo: [NSLocalizedDescriptionKey: \"Cannot find instance of HydraCore\"])\n     reject?(\"SIGNOUT_ERROR\", \"Error while signing out user\", error)\n     print(\"pushUserSignOut::Error while signing in user\")\n   }\n }\n  @objc(pushUserUpdate:withFirstName:withLastName:withEmail:withPhone:withCustomData:withResolver:withRejecter:)\n func pushUserUpdate(username: String,\n                     firstname: String,\n                     lastname: String,\n                     email: String,\n                     phonenumber: String,\n                     customData: [String: Any],\n                     subscriptions: [Any]?,\n                     resolve:RCTPromiseResolveBlock?,\n                     reject:RCTPromiseRejectBlock?) -> Void {\n   if(RnHydraSdk.hydra != nil) {\n     let userInfo: UserDetails = UserDetails(\n       firstName: firstname,\n       lastName: lastname,\n       email: email,\n       phone: phonenumber)\n    \n    RnHydraSdk.hydra!.reportUserProfileUpdate(data: userInfo, customData: customData, subscriptions: subscriptions)\n\n\n     resolve?(\"User data updated successfully!\")\n     print(\"pushUserUpdate::User sign up successfully!\")\n   } else {\n     reject?(\"SIGNUP_ERROR\", \"Error while signing up user\", getHydraNotFoundError())\n     print(\"pushUserUpdate::Error while signing up user\")\n   }\n }\n  @objc(pushEvent:withEventAttributes:withResolver:withRejecter:)\n func pushEvent(eventName: String,\n                eventAttribues: Attributes,\n                resolve:RCTPromiseResolveBlock?,\n                reject:RCTPromiseRejectBlock?) -> Void {\n   if (RnHydraSdk.hydra != nil) {\n     RnHydraSdk.hydra?.reportUserEvent(name: eventName, customAttributes: eventAttribues)\n     resolve?(\"Push Event sent successfully!\")\n     print(\"pushEvent::User sign up successfully!\")\n   } else {\n     reject?(\"PUSH_EVENT_ERROR\", \"Error while signing up user\", getHydraNotFoundError())\n     print(\"pushEvent::Error while sending push event\")\n   }\n }\n\n\n @objc(passUserPreferences:withResolver:withRejecter:)\n func passUserPreferences(\n   userPreferences: [String: Bool],\n   resolve:RCTPromiseResolveBlock?,\n   reject:RCTPromiseRejectBlock?\n ) {\n   if(RnHydraSdk.hydra != nil) {\n     let promPushOpted = userPreferences[\"promPushOpted\"] ?? false\n     let transPushOpted = userPreferences[\"transPushOpted\"] ?? false\n     RnHydraSdk.hydra?.updateUserNotificationSettingsFor(promoPushOpted: promPushOpted, transPushOpted: transPushOpted)\n     RnHydraSdk.hydra!.reportUserPreferencesUpdate()\n     resolve?(\"Push Event sent successfully!\")\n     print(\"passUserPreferences::User sign up successfully!\")\n   } else {\n     reject?(\"PASS_PREFERENCES_ERROR\", \"Error while signing up user\", getHydraNotFoundError())\n     print(\"passUserPreferences::Error while sending push event\")\n   }\n }\n\n\n  @objc(updateCustomerId:withResolver:withRejecter:)\n func updateCustomerId(custId: String,\n                       resolve:RCTPromiseResolveBlock?,\n                       reject:RCTPromiseRejectBlock?) -> Void {\n   if (RnHydraSdk.hydra != nil) {\n     RnHydraSdk.hydra!.update(customerID: custId)\n     resolve?(true)\n     print(\"passUserPreferences::User sign up successfully!\")\n   } else {\n     reject?(\"ERROR\", \"Error while updating customer id\", getHydraNotFoundError())\n   }\n }\n // ******************************* private methods *******************************\n private func getHydraNotFoundError() -> NSError {\n   return NSError(domain: \"com.reactnative.ccapillary\",\n                  code: 400,\n                  userInfo: [NSLocalizedDescriptionKey: \"Cannot find instance of HydraCore\"]\n   )\n }\n  private func getSdkLogLevel(debugLevel: Int) -> LogLevel {\n   switch(debugLevel) {\n   case 0:\n     return LogLevel.verbose;\n   case 1:\n     return LogLevel.debug;\n   case 2:\n     return LogLevel.info;\n   case 3:\n     return LogLevel.error;\n   case 4:\n     return LogLevel.critical;\n   default:\n     return LogLevel.verbose;\n   }\n }\n}\nRnHydraCore class\nCreate a new file called RnHydraCore.swift and add the following code in it -\nSwift\nimport Foundation\nimport HydraCore\n\n\n@objc(RnHydraCore)\nopen class RnHydraCore: NSObject {\n @objc public static var shared = RnHydraCore(with: true)\n var hydraInstance: Hydra? = nil\n public func generateInstance(\n   withConfiguration config: HydraConfiguration,\n   geoData: (HydraCore.GeographicDataGenerator)? = nil,\n   supportsPushNotifications: Bool = false,\n   deviceScreenInfo: HydraCore.DeviceScreenInfo? = nil,\n   inboxCoreConfig: (HydraCore.HydraInboxCoreConfigGenerator)? = nil,\n   configuredFor env: HydraCore.Env = .dev\n )  -> Hydra? {\n   if (hydraInstance == nil) {\n     do {\n       hydraInstance = try Hydra.generate(with: config,\n                                          geoData: geoData,\n                                          supportsPushNotifications: supportsPushNotifications,\n                                          deviceScreenInfo: deviceScreenInfo,\n                                          inboxCoreConfig: inboxCoreConfig,\n                                          configuredFor: env)\n     } catch {\n       return nil\n     }\n   }\n  \n   return hydraInstance\n }\nSetup React Native Bridge methods\nFor the methods we added in the Native Android module and exposed them to React Native, we need to add them to the React Native side for the React Native apps to start using those.\nReact Native Bridge methods\nCreate a new RnHydra.tsx and types.ts files in your React Native’s root directory and add the following (eg - projectName/scr/RnHydra.tsx)-\nJavaScript\nimport {\n NativeModules,\n Platform,\n} from 'react-native';\nimport {\n type HydraConfigParams,\n type PushUserParams,\n type UserPreferences,\n} from './types';\n\n\n/**\n* Error message displayed when the 'react-native-capillary' package is not linked.\n*/\nconst LINKING_ERROR =\n `The package 'Hydra SDK' doesn't seem to be linked. Make sure: \\n\\n` +\n Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\n '- You rebuilt the app after installing the package\\n'\n\n\nconst RnHydraSdk = NativeModules.RnHydraSdk\n ? NativeModules.RnHydraSdk\n : new Proxy(\n   {},\n   {\n     get() {\n       throw new Error(LINKING_ERROR);\n     },\n   }\n );\n\n\n/**\n* Initializes the Hydra SDK with the provided configuration parameters.\n* This method should be called before any other method in the SDK.\n* The SDK should be initialized only once in the app lifecycle.\n* Subsequent calls to this method will have no effect.\n* The SDK will not be initialized if the configuration parameters are invalid, if the configuration\n* parameters are not provided or if the configuration parameters are not provided in the correct format.\n*\n* @param hydraConfig - The configuration parameters for the Hydra SDK.\n* @returns A promise that resolves when the SDK is successfully initialized.\n*\n* @example\n* ```tsx\n* init({\n*   accountId: 'account-id',\n*   baseURL: 'https://api.your-domain.in/',\n*   sslPublicKey: 'ssl-public',\n*   customerId: 'customer-id',\n*   country: 'India',\n*   city: 'Pune',\n*   countryCode: '91',\n*   captureViewPortDetails: true,\n*   isDisableAppLaunchedEvent: false,\n*   debugLevel: 2,\n*   fcmConfig: {\n*     isFCMRegistrationEnabled: false,\n*   },\n*   notificationConfig: {\n*     isNotificationEnabled: true,\n*     ...\n*   }\n* });\n*/\nexport function init(hydraConfig: HydraConfigParams): Promise<any> {\n return RnHydraSdk.initSdk(hydraConfig);\n}\n\n\n/**\n* Pushes user sign up data to the Hydra SDK.\n*\n* @param params - The parameters for user sign up.\n* @returns A promise that resolves when the user sign up data is successfully pushed.\n*\n* @example\n* ```tsx\n* pushUserSignUp({\n*   username: 'username',\n*   firstName: 'first-name',\n*   lastName: 'last-name',\n*   email: 'email',\n*   phone: 'phone',\n*   customData: {\n*     customKey: 'customValue',\n*   },\n* });\n*/\nexport async function pushUserSignUp({\n customerId,\n firstName,\n lastName,\n email,\n phone,\n customData,\n}: PushUserParams): Promise<any> {\n if (customerId === undefined) {\n   throw new Error('customerId is required');\n }\n\n\n if (Platform.OS === 'ios') {\n   // iOS needs customerId to be updated before pushing user sign up data\n   try {\n     await RnHydraSdk.updateCustomerId(customerId);\n     return RnHydraSdk.pushUserSignUp(\n       customerId,\n       firstName,\n       lastName,\n       email,\n       phone,\n       customData\n     );\n   } catch (err) {\n     throw err;\n   }\n } else {\n   return RnHydraSdk.pushUserSignUp(\n     customerId,\n     firstName,\n     lastName,\n     email,\n     phone,\n     customData\n   );\n }\n}\n\n\n/**\n* Pushes user sign in data to the Hydra SDK.\n*\n* @param params - The parameters for user sign in.\n* @returns A promise that resolves when the user sign in data is successfully pushed.\n*\n* @example\n* ```tsx\n* pushUserSignIn({\n*   customerId: 'customerId',\n*   firstName: 'first-name',\n*   lastName: 'last-name',\n*   email: 'email',\n*   phone: 'phone',\n*   customData: {\n*     customKey: 'customValue',\n*   },\n* });\n*/\nexport async function pushUserSignIn({\n customerId,\n firstName,\n lastName,\n email,\n phone,\n customData,\n}: PushUserParams): Promise<any> {\n if (customerId === undefined) {\n   throw new Error('customerId is required');\n }\n\n\n if (Platform.OS === 'ios') {\n   // iOS needs customerId to be updated before pushing user sign in data\n   try {\n     await RnHydraSdk.updateCustomerId(customerId);\n     return RnHydraSdk.pushUserSignIn(\n       customerId,\n       firstName,\n       lastName,\n       email,\n       phone,\n       customData\n     );\n   } catch (err) {\n     throw err;\n   }\n } else {\n   return RnHydraSdk.pushUserSignIn(\n     customerId,\n     firstName,\n     lastName,\n     email,\n     phone,\n     customData\n   );\n }\n}\n\n\n/**\n* Pushes user update data to the Hydra SDK.\n*\n* @param params - The parameters for user update.\n* @returns A promise that resolves when the user update data is successfully pushed.\n*\n* @example\n* ```tsx\n* pushUserUpdate({\n*   customerId: 'customerId',\n*   firstName: 'first-name',\n*   lastName: 'last-name',\n*   email: 'email',\n*   phone: 'phone',\n*   customData: {\n*     customKey: 'customValue',\n*   },\n* });\n*/\nexport async function pushUserUpdate({\n customerId,\n firstName,\n lastName,\n email,\n phone,\n customData,\n subscriptions\n}: PushUserParams): Promise<any> {\n if (customerId === undefined) {\n   throw new Error('customerId is required');\n }\n if (Platform.OS === 'ios') {\n   // iOS needs customerId to be updated before pushing user update data\n   try {\n     await RnHydraSdk.updateCustomerId(customerId);\n     return RnHydraSdk.pushUserUpdate(\n       customerId,\n       firstName,\n       lastName,\n       email,\n       phone,\n       customData,\n       subscriptions\n     );\n   } catch (err) {\n     throw err;\n   }\n } else {\n   return RnHydraSdk.pushUserUpdate(\n     customerId,\n     firstName,\n     lastName,\n     email,\n     phone,\n     customData,\n     subscriptions\n   );\n }\n}\n\n\n/**\n* Pushes user sign out data to the Hydra SDK.\n*\n* @param cuid - The customer ID of the user.\n* @returns A promise that resolves when the user sign out data is successfully pushed.\n*/\nexport function pushUserSignOut(cuid: string): Promise<any> {\n return RnHydraSdk.pushUserSignOut(cuid);\n}\n\n\n/**\n* Pushes an event to the Hydra SDK.\n*\n* @param eventName - The name of the event.\n* @param attributes - Additional attributes associated with the event.\n* @returns A promise that resolves when the event is successfully pushed.\n*\n* @example\n* ```tsx\n* pushEvent('event-name', {\n*  key: 'value',\n* });\n*/\nexport function pushEvent(\n eventName: string,\n attributes?: Record<string, any>\n): Promise<any> {\n return RnHydraSdk.pushEvent(eventName, attributes);\n}\n\n\n/**\n* Passes user preferences to the Hydra SDK.\n*\n* @param cuId - The customer ID of the user.\n* @param userPreferences - The user preferences to be passed.\n* @returns A promise that resolves when the user preferences are successfully passed.\n*\n* @example\n* ```tsx\n* passUserPreferences('customer-id', {\n*  promPushOpted: true,\n* transPushOpted: false,\n* });\n*/\nexport function passUserPreferences(\n cuId: string,\n userPreferences: UserPreferences\n): Promise<any> {\n // TODO: This needs to be fixed for iOS, we need to call\n // set preferences first before updating preferences\n return Platform.OS === 'android'\n   ? RnHydraSdk.passUserPreferences(cuId, userPreferences)\n   : RnHydraSdk.passUserPreferences();\n}\nTypes\nAdd type.ts in projectName/src/types.ts\nTypeScript\nimport type { FcmConfig } from './FcmConfig';\n\n\nexport interface PushUserParams {\n customerId: string;\n firstName?: string | null;\n lastName?: string | null;\n email?: string | null;\n phone?: string | null;\n customData?: Record<string, any> | null;\n subscriptions?: any[];\n}\n\n/**\n* Notification Configuration object.\n*\n* @param smallIcon Resource-Id for the Notification Small icon.\n*\n* Guideline: Notification small icon should be flat, pictured face on, and must be white on\n* a transparent background.\n*\n* @param notificationColor Set the icon color for notification.\n*\n* @param isMultipleNotificationInDrawerEnabled By default,Sdk will show multiple notifications\n* i.e. isMultipleNotificationInDrawerEnabled is true, if the app wants\n* to show a single notification then they should pass\n* isMultipleNotificationInDrawerEnabled as false\n*/\nexport interface NotificationConfig {\n  // small icon resource for push-notification. Give the string name of the icon\n  // you added in android drawable without extension.\n  // @example\n  // If you added small_notification.xml in the android/app/res/drawable/ folder, then\n  // give the string name as small_notification\n \n smallIcon: string;\n\n\n // Color resource for push-notification icon. Give the string name of the icon\n // you added in android drawable without extension.\n // @example\n // If you added notification_color as a color property in the android/app/res/colors/colors.xml,\n // then give the string name as notification_color\n\n\n notificationColor: string;\n  //If true show multiple notification in the drawer, else show single notification.\n isMultipleNotificationInDrawerEnabled: boolean;\n}\n\n\n/**\n* InApp Configuration object\n* @param defaultImage Resource-Id for fallback image for in app message\n*/\nexport interface InAppConfig {\n defaultImage: string;\n}\n\n\n/**\n* NotificationCenterConfig Configuration object\n* @param defaultImage Resource-Id for fallback image for the inbox messages in the notification center\n*/\nexport interface NotificationCenterConfig {\n defaultImage: string;\n notificationCenterOffset: number;\n}\n\n/**\n* This class is responsible for handling instance configuration info of Hydra SDK.\n*/\nexport type HydraConfigParams = {\n accountId: string\n baseURL?: string\n sslPublicKey?: string\n customerId?: string\n country?: string\n city?: string;\n countryCode?: string\n captureViewPortDetails: boolean;\n isDisableAppLaunchedEvent: boolean;\n debugLevel: number;\n fcmConfig: FcmConfig;\n notificationConfig?: NotificationConfig;\n inAppConfig?: InAppConfig;\n notificationCenterConfig?: NotificationCenterConfig;\n}\n\n\n/**\n* This class is responsible for handling user preferences info of Hydra SDK.\n*/\nexport type UserPreferences = {\n promPushOpted: boolean;\n transPushOpted: boolean;\n}\nInitializing Hydra Core\nYou need to create an instance of the Hydra SDK to use SDK APIs, this api needs to be called in from your App’s initial file (e.g. App.tsx) of the application with the HydraConfig.\nJavaScript\nimport {init} from './HydraModule';\nuseEffect(() => {\n   init({\n     accountId: 'ACCOUNT_ID_PROVIDED_BY_CAPILLARY,\n     baseURL:\n       'https://baseurl.com/new/',\n     sslPublicKey: 'Qfmq8ouVRhwcHdl0piZPcWtYvJmHhoRPhmdadowsmla=',\n     country: 'India',\n     city: 'Pune',\n     countryCode: '91',\n     captureViewPortDetails: true,\n     isDisableAppLaunchedEvent: false,\n     debugLevel: 2,\n     fcmConfig: {\n       isFCMRegistrationEnabled: false,\n     },\n   })\n }, []);\nAt this point, your Hydra SDK is initialized and you can use the Hydra core APIs.\nBehavioral Events\nSign up event\nWhen a user signs up on the app, the client app shall call the Hydra SDK API to sign up the user on the Hydra platform as well.\nExample 1:\nJavaScript\nimport {pushUserSignUp} from './HydraModule';\npushUserSignUp({\n         customerId: '12345',\n         email: '\n[email protected]\n',\n         phone: '1234567890',\n         firstName: 'Rakesh',\n         lastName: 'Kumar',\n         customData: {\n           age: '25',\n           gender: 'MALE',\n           address: 'Pune',\n         },\n       })\n         .then(resp => {console.log('pushUserSignUp success', resp);})\n         .catch(error => {});\nExample 2: You can sign up without optional data as well -\nJavaScript\npushUserSignUp({\n         customerId: '12345',\n         email: '',\n         phone: '',\n         firstName: '',\n         lastName: '',\n         customData: null,\n       })\n         .then(resp => {console.log('pushUserSignUp success', resp);})\n         .catch(error => {});\nSign in event\nSimilar to sign up event, when the user logs into the client mobile app, the client mobile app shall call the sign in Hydra SDK API with required details -\nJavaScript\nimport {pushUserSignIn} from './HydraModule';\n\n\npushUserSignIn({\n     customerId: userName,\n     firstName,\n     lastName,\n     email,\n     phone: phoneNumber,\n     customData: JSON.parse(customAttributes),\n   })\n     .then((res: any) => {console.log('pushUserSignIn success', res)})\n     .catch((err: any) => {Alert.alert('Error', 'Failed to sign in')});\nUpdate User info event\nWhen user updates the user information, the app shall call push user update api -\nJavaScript\nimport {pushUserUpdate} from './HydraModule';\n\n\n   let customAttributesObj = customAttributes\n     ? JSON.parse(customAttributes)\n     : null;\n   let subscriptionsObj = subscriptions ? JSON.parse(subscriptions) : null;\n   console.log(\"calling pushUserSignUp\");\n   pushUserUpdate({\n     customerId: userName,\n     firstName,\n     lastName,\n     email,\n     phone: phoneNumber,\n     customData: customAttributesObj,\n     subscriptions: subscriptionsObj,\n   })\n     .then((res: any) => {\n       console.log(\"pushUserSignUp\", res);\n       navigation.goBack();\n     })\n     .catch((err: any) => {\n       console.log(\"pushUserSignUp\", err);\n       Alert.alert(\"Error\", \"Failed to sign up\");\n     });\n };\nSign out event\nWhen user signs out from the app, user shall call the sign out function -\nJavaScript\nimport {pushUserSignOut} from './HydraModule';  \npushUserSignOut(customerID)  \n     .then(() => {  \n       navigation.reset({  \n         index: 0,  \n         routes: [{ name: 'Welcome' }],  \n       });  \n     })  \n     .catch((err: any) => {  \n       console.log('pushUserSignOut', err);  \n       Alert.alert('Error', 'Failed to sign out');  \n     });\nSending custom event\nIf your application want to register any custom event for example, the new user created or user added the new items or user does some action and app want to trigger the event then please use pushEvent API -\nJavaScript\npushEvent(eventName, customData)\n   .then((res: any) => {console.log('pushEvent success', res)}\n   ).catch((err: any) => {console.log('pushEvent error', err)}\nTable of Contents\nRequirements\nAndroid\niOS\nPrerequisites\nGetting App Bundle Ids\nGetting App Signature\nNative Hydra Packages\nDemo App\nReact Native Android Setup\nSetting up Hydra Gradle private repository URL\nSetup Hydra Core SDK\nSetup React Native Android Bridge\nRegister the Module (Java/Kotlin)\nReact Native iOS Setup\nSetup Native Hydra iOS XCode packages\nSetup iOS React Native Bridge module\nHydra Core\nSetup Native Android Hydra Core methods\nSetup Native iOS Hydra Core methods\nSetup React Native Bridge methods\nInitializing Hydra Core\nBehavioral Events"
  },
  {
    "url": "https://docs.capillarytech.com/docs/push-notification-for-hydra-sdk",
    "page_slug": "push-notification-for-hydra-sdk",
    "title": "Integrate Push Notifications into your React Native project",
    "content": "Integrate Push Notifications into your React Native project\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nIntegrate Push Notifications into your React Native project\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nIntegrate Push Notifications into your React Native project\nThis document outlines the steps to integrate push notifications into your React Native project using the Hydra SDK. Follow the instructions below to enable and configure push notifications for your application.\nPrerequisite -\nTo start using, you need to set up the firebase account on the Firebase console if not set already. To set up a Firebase account for Android and iOS apps,\nplease follow this guide\nFor iOS, you need to add either APNs certificate or APNs Auth key on Firebase.\nAndroid Configuration\nTo set up push notifications, we need to set up the Firebase Native Android package if not added already.\nAdd Google service\nTo start using push notifications, you need to add the google gms services and start using its plugin -\nOpen android/build.gradle and add the following -\nbuild.gradle\ndependencies {\n   ...\n   classpath 'com.google.gms:google-services:x.x.x'\n   ...\n}\nNow open android/app/build.gradle and add the following at the top just below apply facebook plugin -\nbuild.gradle\napply plugin: \"com.google.gms.google-services\"\nAdd google-info.json file\nFrom the Firebase Console you set up for Android, please download the Google-info.json file and this file in the android app in android/app location.\nAdd Hydra push notification packages\nAdd the Hydra push notification packages in the android/app/build.gradle file below the hydra core package -\nbuild.gradle\ndependencies {\n implementation(\"com.capillary:hydra-core:x.x.x\")\n implementation(\"com.capillary:hydra-firebase:x.x.x\")\n implementation(\"com.capillary:hydra-pushbase:x.x.x\")\n}\nNow sync your Android project to install these dependencies.\nAdd Hydra Firebase service\nOpen android/app/src/main/AndroidManifest.xml file and add the following service to the application -\nAndroidManifest.xml\n<service\n       android:name=\"com.capillary.hydra.firebase.HydraFirebaseMessagingService\"\n       android:exported=\"false\">\n       <intent-filter>\n         <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\n       </intent-filter>\n     </service>\nThis will set the firebase service to receive the remote notifications from the Firebase on mobile app.\nAdd push notifications listeners\nAlso add following private method at the end of the file -\nYou will also need to add 3 new listeners to get the push notification related events -\nCreate a new folder called listeners and add following files to this folder, these files are used above while setting the push notifications listeners\nCreate RnApplicationTokenListener.kt file and add following code -\nRnApplicationTokenListener.kt\npackage com.example.listeners\n\n\nimport android.util.Log\nimport com.capillary.hydra.pushbase.listener.TokenAvailableListener\nimport com.capillary.hydra.pushbase.model.Token\nimport com.hydrarnsdk.classes.EventTypes\nimport com.hydrarnsdk.classes.RnHydra\n\n\nclass RnApplicationTokenListener : TokenAvailableListener {\n   private val TAG = RnApplicationTokenListener::class.java.name\n\n\n   override fun onTokenAvailable(token: Token) {\n     Log.w(TAG, \"Application Token $token\")\n     RnHydra.setNotificationToken(token.token)\n     RnHydra.emitEvent(EventTypes.ON_TOKEN_AVAILABLE.event, token.token)\n   }\n}\nCreate RnHydraPushNotificationListener and add following code -\nKotlin\npackage com.example.listeners\n\n\n\n\nimport android.content.Context\nimport com.capillary.hydra.pushbase.listener.HydraPushNotificationListener\nimport com.capillary.hydra.pushbase.notification.model.CTA\nimport com.capillary.hydra.pushbase.notification.model.NotificationPayload\nimport com.facebook.react.bridge.Arguments\nimport com.hydrarnsdk.classes.EventTypes\nimport com.hydrarnsdk.classes.RnHydra\nimport com.hydrarnsdk.utils.convertBundleToReadableMap\n\n\nclass RnHydraPushNotificationListener: HydraPushNotificationListener {\n override fun handleCustomAction(context: Context, payload: String) {\n   RnHydra.emitEvent(EventTypes.HANDLE_CUSTOM_ACTION.event, payload)\n }\n\n\n override fun onNotificationClick(\n   context: Context,\n   payload: NotificationPayload,\n   cta: CTA\n ): Boolean {\n    val clickedAction = Arguments.createMap()\n    cta.action?.let { clickedAction.putString(\"action\", it) }\n    cta.actionText?.let { clickedAction.putString(\"actionText\", it) }\n    clickedAction.putString(\"type\", cta.type.toString())\n    RnHydra.emitEvent(EventTypes.ON_NOTIFICATION_CLICK.event, clickedAction)\n    return true\n }\n\n\n override fun onNotificationDismissed(context: Context, payload: NotificationPayload) {\n   RnHydra.emitEvent(EventTypes.ON_NOTIFICATION_DISMISSED.event, convertBundleToReadableMap(payload.payload))\n }\n\n\n override fun onNotificationReceived(context: Context, payload: NotificationPayload) {\n   RnHydra.emitEvent(EventTypes.ON_NOTIFICATION_RECEIVED.event, convertBundleToReadableMap(payload.payload))\n }\n\n\n override fun onNotificationShown(context: Context, payload: NotificationPayload) {\n   RnHydra.emitEvent(EventTypes.ON_NOTIFICATION_SHOWN.event, convertBundleToReadableMap(payload.payload))\n }\n}\nCreate another file in listeners folder RnNotificationPermissionListener and add following code -\nKotlin\npackage com.hydrarnsdk.listener\n\n\nimport com.capillary.hydra.android.sdk.utils.Logger\nimport com.capillary.hydra.pushbase.listener.NotificationPermissionListener\nimport com.hydrarnsdk.classes.EventTypes\nimport com.hydrarnsdk.classes.RnHydra\n\n\nclass RnNotificationPermissionListener: NotificationPermissionListener {\n\n\n override fun onPermissionResult(isGranted: Boolean) {\n   Logger.v(\"onPermissionResult isGranted: $isGranted\")\n   RnHydra.emitEvent(EventTypes.ON_REQUEST_PERMISSION_ACTION.event, isGranted)\n }\n}\nPush notification React Native Bridge APIs\nNow add the Native APIs for setting up the Push notifications from React Native bridge -\nKotlin\n/**\n  * ********************************************************************************\n  *                      Hydra Push Notification APIs\n  * ********************************************************************************\n  */\n\n\n /**\n  * Adds the event listener for the provided event type\n  */\n @ReactMethod\n fun addEventListener(eventType: String) {\n   RnHydra.setNotificationListener(eventType)\n }\n\n\n /**\n  * Removes the event listener for the provided event type\n  */\n @ReactMethod\n fun removeEventListener(eventType: String) {\n   RnHydra.removeNotificationListener(eventType)\n }\n\n\n /**\n  * Requests the push notification permission\n  */\n @ReactMethod\n fun requestPermissions() {\n   HydraPushApi.getInstance().requestPushPermission(reactApplicationContext)\n }\n\n\n\n\n @ReactMethod\n fun getToken(promise: Promise) {\n   promise.resolve(RnHydra.getNotificationToken())\n }\n\n\n/**\n  * ********************************************************************************\n  *                              Private functions\n  * ********************************************************************************\n  */\n /**\n  * Registers the push notification listeners\n  */\n private fun registerPushNotificationListeners() {\n   HydraPushApi().addPermissionResponseListener(RnNotificationPermissionListener())\n   HydraPushApi().registerPushNotificationListener(RnHydraPushNotificationListener())\n   HydraFirebaseAPI().addTokenListener(RnApplicationTokenListener())\n }\n\n private fun getDrawableId(icon: String, defType: String): Int {\n   val packageName: String = reactApplicationContext.packageName\n   return reactApplicationContext.resources.getIdentifier(icon, defType, packageName)\n }\nUpdate Hydra instance init method\nWe need to do a few changes in the Android native bridge we created recently. In\ninitSdk\nmethod in RnHydraModule.kt module, add the following code before initialization the HydraAPI -\nKotlin\nval fcmConfig = FcmConfig(isFCMRegistrationEnabled)\n   val notificationConfig = smallIcon?.let {\n     notificationColor?.let { color ->\n       NotificationConfig(\n         getDrawableId(it, \"drawable\"),\n         getDrawableId(color, \"color\"),\n         isMultipleNotificationInDrawerEnabled\n       )\n     }\n   }\n\nval hydraConfig: HydraConfig = HydraConfig.Builder(\n     currentActivity!!.applicationContext,\n     accountId,\n     baseUrl,\n     sslPublicKey,\n     country,\n     city,\n     countryCode,\n     captureViewPortDetails,\n     fcmConfig,\n     notificationConfig,\n     null,\n     null,\n     isDisableAppLaunchedEvent,\n     debugLevel\n   ).build()\n\n\n       hydraAPI = HydraAPI.instanceWithConfig(currentActivity!!.applicationContext, hydraConfig)\n       // Set the HydraAPI instance to the RnHydra class\n       RnHydra.setHydraAPI(hydraAPI!!)\n       // Set the JS Event Emitter to the RnHydra class to emit the events to JS\n       RnHydra.setJSEventEmitter(reactApplicationContext.getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter::class.java))\n       // Register the push notification listeners\n       registerPushNotificationListeners()\n\n\n       Logger.i(\"Hydra Capillary SDK initialized successfully!\")\n       promise?.resolve(true)\n...\nHere we are adding the support to send the custom notification icon and a notification icon color to the Hydra SDK. This will be used.\nRnHydra Singleton instance\nTo use the Hydra instance from single point and also expose the event listeners, we need to create the RnHydra Singleton instance -\nCreate a new package called classes and add a new Kotlin class RnHydra.kt and add following code -\nKotlin\npackage com.hydra.sdk.example.classes\n\n\nimport android.annotation.SuppressLint\nimport com.capillary.hydra.android.sdk.HydraAPI\nimport com.capillary.hydra.android.sdk.utils.Logger\nimport com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter\n\n\nobject RnHydra {\n @SuppressLint(\"StaticFieldLeak\")\n private var hydraAPI: HydraAPI? = null\n private var hydraNotificationListeners: ArrayList<String> = ArrayList()\n private var emitter: RCTDeviceEventEmitter? = null\n private var notificationToken: String? = null\n\n\n fun setHydraAPI(hydra: HydraAPI) {\n   hydraAPI = hydra\n }\n\n\n fun getHydraAPI(): HydraAPI? {\n   return hydraAPI\n }\n\n\n fun setJSEventEmitter(em: RCTDeviceEventEmitter) {\n   emitter = em\n }\n\n\n fun setNotificationListener(listener: String) {\n   Logger.v(\"setNotificationListener for $listener\")\n   if (!hydraNotificationListeners.contains(listener)) {\n     hydraNotificationListeners.add(listener)\n   }\n }\n\n\n fun removeNotificationListener(listener: String) {\n   Logger.v(\"removeNotificationListener for $listener\")\n   if (hydraNotificationListeners.contains(listener)) {\n     hydraNotificationListeners.remove(listener)\n   }\n }\n\n\n fun getNotificationToken(): String? {\n   return notificationToken\n }\n\n\n fun setNotificationToken(token: String) {\n   notificationToken = token\n }\n\n\n fun getNotificationListeners(): ArrayList<String> {\n   return hydraNotificationListeners\n }\n\n\n fun emitEvent(event: String, data: Any) {\n   if (emitter !== null && hydraNotificationListeners.contains(event)) {\n     Logger.i(\"RnHydra\", \"Emitting $event Event!\")\n     emitter!!.emit(event, data)\n   }\n }\n}\nCreate EventTypes\nThere are several events Hydra SDK will be emitting for Push notifications and other events, create another class in the classes package we created above and add the new file EventTypes.kt and following code in it -\nKotlin\npackage com.hydra.sdk.example.classes\n\n\nenum class EventTypes(val event: String) {\n ON_TOKEN_AVAILABLE(\"onTokenAvailable\"),\n ON_PUSH_RECEIVED(\"onPushReceived\"),\n ON_NOTIFICATION_CLICK(\"onNotificationClicked\"),\n ON_NOTIFICATION_RECEIVED(\"onNotificationReceived\"),\n ON_NOTIFICATION_SHOWN(\"onNotificationShown\"),\n ON_NOTIFICATION_DISMISSED(\"onNotificationDismissed\"),\n HANDLE_CUSTOM_ACTION(\"handleCustomAction\"),\n ON_REQUEST_PERMISSION_ACTION(\"onRequestPermissionAction\"),\n ON_UNREAD_MESSAGE_COUNT_AVAILABLE(\"onCountAvailable\"),\n ON_MESSAGES_AVAILABLE(\"onMessagesAvailable\")\n}\niOS Configuration\nAdd Push notification capability\nTo get push notifications on your app, you need to enable the push notification and background actions capabilities in XCode -\nPush notification\nIn XCode, click on Project target and click on Signing & Capabilities section, search for Push notification, and add it.\nBackground modes\nThen search for Background modes and select Background fetch and Remote notifications\nAdd google-info.plist file\nNow, head back to your firebase account, select Settings from the left top corner and in the General tab from the iOS app, download the google-info.plist file\nNow, add that download file to your project by importing it using Add Files to my project option.\nAdd Hydra Push notification packages\nTo use push notifications, you need to add 1 Firebase Messaging package and 2 Hydra packages in your app -\nFirebase Messaging\nHydra Push notification\nHydraPushNotificationServiceExtension\nClick on the Project from the left corner and click on + icon in dependencies section, now select the already added Hydra iOS package and add these packages to your app from Add to target and click on Add package.\nDo clean build once to start getting these packages in your project files if needed\nAdding Hydra push notification packages\nAdd Firebase Messaging -\n2.1 Search for firebase-ios-packages, select the firebase-ios-packages and click on Add Package button\n2.2 From the list of packages, add FirebaseMessaging to the application and click Add Package\nAdd Native iOS code\nNow, you need to configure the native support for push notifications.\nAdd Required callbacks (delegates) to AppDelegate.m\nFirebase and iOS gives few callbacks to handle the Push notifications, we need to add them to get the APNs, Firebase Tokens, Push notifications payload and their action details, add following code to your AppDelegate.m file -\nAdd new interface on top of AppDelegate implementation like -\nAppDelegate.m\n@interface AppDelegate() <FIRMessagingDelegate, UNUserNotificationCenterDelegate>\n\n\n@end\nThis will allow the Firebase and Notification center delegate methods to be implemented by the AppDelegate class.\nNow in AppDelegate class, initialize Firebase and set their delegates in\ndidFinishLaunchingWithOptions\nmethod -\nObjective-C\n#import \"Firebase.h\"\n#import \"FirebaseMessaging/FirebaseMessaging.h\"\n#import <React/RCTBundleURLProvider.h>\n#import <UserNotifications/UserNotifications.h>\n#import \"RnPushNotification.h\"\n\n\n@implementation AppDelegate\n\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n // Configure Notifications\n [FIRApp configure];\n [UNUserNotificationCenter currentNotificationCenter].delegate = self;\n [FIRMessaging messaging].delegate = self;\n\n\n [[RnPushNotification sharedInstance] application:application didFinishLaunchingWithOptions:launchOptions];\n  self.moduleName = @\"myApp\";\n // You can add your custom initial props in the dictionary below.\n // They will be passed down to the ViewController used by React Native.\n self.initialProps = @{};\n\n\n return [super application:application didFinishLaunchingWithOptions:launchOptions];\n}\nAdd Notifications Delegate methods\nNow add the Delegate methods for Firebase and User notifications below this method -\nObjective-C\n// Push notification delegates\n- (void)messaging:(FIRMessaging *)messaging didReceiveRegistrationToken:(NSString *)fcmToken {\n NSLog(@\"GOT THE TOKEN  %@\", fcmToken);\n [[RnPushNotification sharedInstance] messaging:fcmToken];\n}\n\n\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler {\n [[RnPushNotification sharedInstance] userNotificationCenter:center willPresentNotification:notification withCompletionHandler:completionHandler];\n}\n\n\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void(^)(void))completionHandler {\n [[FIRMessaging messaging] appDidReceiveMessage:response.notification.request.content.userInfo];\n [[RnPushNotification sharedInstance] userNotificationCenter:center didReceiveNotificationResponse:response withCompletionHandler:completionHandler];\n}\n\n\n- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler {\n [[RnPushNotification sharedInstance] application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n}\n\n\n- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error {\n NSLog(@\"Error: %@\", error);\n [[RnPushNotification sharedInstance] application:application didFailToRegisterForRemoteNotificationsWithError:error];\n}\n\n\n- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n NSLog(@\"APNS DeviceToken: %@\", deviceToken);\n [[FIRMessaging messaging] setAPNSToken:deviceToken];\n [[RnPushNotification sharedInstance] application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n}\nPass Notification Delegate method details to Hydra SDK\nYou would have noticed, we are calling some APIs from RnPushNotification, this is done to get the notification details to the Hydra SDK. We need to add this Objective-C class in our iOS app -\n3.1 Create RnPushNotification Objective-C Cocoa touch class\nCreate a new Cocoa touch Objective C class -\nRnPushNotification\nin iOS XCode project -\n3.2 Now add following code in RnPushNotification.h\nObjective-C\n#import <Foundation/Foundation.h>\n#import \"UserNotifications/UNUserNotificationCenter.h\"\n#import \"UIKit/UIApplication.h\"\n\n\nNS_ASSUME_NONNULL_BEGIN\n\n\n@interface RnPushNotification : NSObject\n+ (instancetype)sharedInstance;\n- (void) messaging:(id)token;\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler;\n\n\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center\n        didReceiveNotificationResponse:(UNNotificationResponse *)response\n        withCompletionHandler:(void (^)(void))completionHandler;\n\n\n- (void)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;\n- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(nonnull void (^)(UIBackgroundFetchResult))completionHandler;\n- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken;\n- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error;\n\n\n- (void) updateHydraWithNotificationSupport:(BOOL) granted;\n@end\n\n\nNS_ASSUME_NONNULL_END\n3.3 Add implementation for above methods in RnPushNotification.m file\nObjective-C\n#import \"RnPushNotification.h\"\n#import \"myApp-Swift.h\"\n\n\n@implementation RnPushNotification\n+ (instancetype)sharedInstance {\n static RnPushNotification *shared = nil;\n static dispatch_once_t onceToken;\n dispatch_once(&onceToken, ^{\n   shared = [[self alloc] init];\n });\n return shared;\n}\n\n\n- (void)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n [NSTimer scheduledTimerWithTimeInterval:1 repeats:NO\n                                   block:^(NSTimer * _Nonnull timer) {\n   [[RnHydraCore shared] application:application didFinishLanchingWithOptions:launchOptions];\n }];\n}\n\n\n- (void)messaging:(id)token {\n [NSTimer scheduledTimerWithTimeInterval:1 repeats:NO\n                                   block:^(NSTimer * _Nonnull timer) {\n   [[RnHydraCore shared] messagingReceiveRegistrationToken:token];\n }];\n}\n\n\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center\n      willPresentNotification:(UNNotification *)notification\n        withCompletionHandler:(void (^)(UNNotificationPresentationOptions))completionHandler {\n [[RnHydraCore shared] userNotification:center willPresent:notification withCompletionHandler:completionHandler];\n}\n\n\n- (void)userNotificationCenter:(UNUserNotificationCenter *)center\ndidReceiveNotificationResponse:(UNNotificationResponse *)response\n        withCompletionHandler:(void (^)(void))completionHandler {\n [[RnHydraCore shared] userNotification:center didReceive:response withCompletionHandler:completionHandler];\n}\n\n\n- (void)application:(UIApplication *)application\ndidReceiveRemoteNotification:(NSDictionary *)userInfo\nfetchCompletionHandler:(nonnull void (^)(UIBackgroundFetchResult))completionHandler {\n [[RnHydraCore shared] application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n}\n\n\n- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {\n [NSTimer scheduledTimerWithTimeInterval:1 repeats:NO\n                                   block:^(NSTimer * _Nonnull timer) {\n   [[RnHydraCore shared] application:application didRegisterForRemoteNotificationsWithToken:deviceToken];\n }];\n}\n\n\n- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error {\n [[RnHydraCore shared] application:application didFailToRegisterForRemoteNotificationsWithError:error];\n}\n\n\n- (void)updateHydraWithNotificationSupport:(BOOL) granted {\n [NSTimer scheduledTimerWithTimeInterval:1 repeats:NO\n                                   block:^(NSTimer * _Nonnull timer) {\n   [[RnHydraCore shared] updateNotificationPermission: granted];\n }];\n }\n@end\n3.4 Update RnHydraCore class to add the methods required by RnPushNotification class\nReplace the contents of RnHydraCore with following code -\nSwift\n//\n//  RnHydraCore.swift\n//  react-native-capillary\n//\n//  Created by Rakesh Ostwal on 13/05/24.\n//\n\n\nimport Foundation\nimport HydraCore\nimport HydraPushNotification\nimport React\n\n\nenum EventTypes: String {\n case ON_TOKEN_AVAILABLE = \"onTokenAvailable\"\n case ON_PUSH_RECEIVED = \"onPushReceived\"\n case ON_NOTIFICATION_CLICK = \"onNotificationClicked\"\n case ON_NOTIFICATION_RECEIVED = \"onNotificationReceived\"\n case ON_NOTIFICATION_SHOWN = \"onNotificationShown\"\n case ON_NOTIFICATION_DISMISSED = \"onNotificationDismissed\"\n case HANDLE_CUSTOM_ACTION = \"handleCustomAction\"\n case ON_REQUEST_PERMISSION_ACTION = \"onRequestPermissionAction\"\n case ON_UNREAD_MESSAGE_COUNT_AVAILABLE = \"onCountAvailable\"\n case ON_MESSAGES_AVAILABLE = \"onMessagesAvailable\"\n}\n\n\n@objc(RnHydraCore)\nopen class RnHydraCore: NSObject, HydraNotificationCallbackDelegate {\n @objc public static var shared = RnHydraCore(with: true)\n var hydraInstance: Hydra? = nil\n let notificationCore: NotificationCore?\n var apnsTokenToSet: Data? = nil\n var fcmToken: String? = nil\n var permissionToUpdate: Bool = false\n var listeners: [String] = []\n\n\n  private init(with temp: Bool) {\n   notificationCore = NotificationCore.shared\n   super.init()\n   notificationCore?.setNotificationCallbackDelagte(delegate: self)\n }\n\n\n  public func generateInstance(\n   withConfiguration config: HydraConfiguration,\n   geoData: (HydraCore.GeographicDataGenerator)? = nil,\n   supportsPushNotifications: Bool = false,\n   deviceScreenInfo: HydraCore.DeviceScreenInfo? = nil,\n   inboxCoreConfig: (HydraCore.HydraInboxCoreConfigGenerator)? = nil,\n   configuredFor env: HydraCore.Env = .dev\n )  -> Hydra? {\n   if (hydraInstance == nil) {\n     do {\n       hydraInstance = try Hydra.generate(with: config,\n                                          geoData: geoData,\n                                          supportsPushNotifications: supportsPushNotifications,\n                                          deviceScreenInfo: deviceScreenInfo,\n                                          inboxCoreConfig: inboxCoreConfig,\n                                          configuredFor: env)\n\n\n       print(\"setting the hydra sdk to notification core\")\n       notificationCore?.update(sdk: hydraInstance!)\n\n\n       if (apnsTokenToSet != nil) {\n         application(UIApplication.shared, didRegisterForRemoteNotificationsWithToken: apnsTokenToSet!)\n       }\n\n\n       if (self.fcmToken != nil) {\n         messaging(didReceiveRegistrationToken: fcmToken!)\n       }\n\n\n       if (self.permissionToUpdate) {\n         updateNotificationPermission(granted: true)\n       }\n     } catch {\n       return nil\n     }\n   }\n  \n   return hydraInstance\n }\n\n\n\n\n  public func update(sdk hydra: Hydra) {\n   self.hydraInstance = hydra\n   notificationCore?.update(sdk: hydra)\n }\n  public func requestPermissions() {\n   let authOptions: UNAuthorizationOptions = [.alert, .badge, .sound]\n   let center = UNUserNotificationCenter.current()\n   center.requestAuthorization(options: authOptions) { granted, error in\n     if let error = error {\n       // Handle the error here.\n       print(\"Error occurred due to :\\(error.localizedDescription)\")\n       return\n     }\n     // Enable or disable features based on the authorization.\n     self.updateNotificationPermission(granted: granted)\n     if granted{\n       print(\"Application Granted permissions:\\(granted)\")\n       DispatchQueue.main.async {\n         UIApplication.shared.registerForRemoteNotifications()\n       }\n     }\n     self.emitEvent(event: EventTypes.ON_REQUEST_PERMISSION_ACTION.rawValue, data: granted)\n    \n     self.hydraInstance?.reportUserSettingsUpdate()\n   }\n }\n  public func getToken() -> String? {\n   return self.fcmToken\n }\n\n\n public func addEventListener(event: String) {\n   if !listeners.contains(event) {\n     print(\"Set event listener for - \\(event)\")\n     listeners.append(event)\n   }\n }\n\n\n public func removeEventListener(event: String) {\n   print(\"Remove event listener for - \\(event)\")\n   self.listeners.removeAll(where: { $0 == event })\n }\n\n\n public func emitEvent(event: String, data: Any) {\n   if (self.listeners.contains(event)) {\n     print(\"Emitting Event for - \\(event)\")\n     DispatchQueue.main.async {\n        RNEventEmitter.emitter.sendEvent(withName: event, body: data)\n     }\n   }\n }\n\n\npublic func process(cta: HydraCore.CTA, notificationPayload payload: Any) -> Bool {\n   print(\"Notificaiton was clicked with action \\(cta.action)\")\n   emitEvent(event: EventTypes.ON_NOTIFICATION_CLICK.rawValue, data: convertCTAToDictionary(cta))\n   return true\n }\n\n\n @objc(messagingReceiveRegistrationToken:)\n public func messaging(didReceiveRegistrationToken token: String) {\n   if (self.hydraInstance != nil) {\n     print(\"Hydra Core instance is set, updating FCM token with Hydra!\")\n     notificationCore?.messaging(didReceiveRegistrationToken: token)\n     self.fcmToken = token\n     emitEvent(event: EventTypes.ON_TOKEN_AVAILABLE.rawValue, data: token)\n   } else {\n     print(\"Hydra Core instance is not set now, will update FCM token once the Hydra object is created\")\n     self.fcmToken = token\n   }\n }\n  @objc(application:didFinishLanchingWithOptions:)\n public func application(application: UIApplication,\n                         didFinishLanchingWithOptions options: NSDictionary?) {\n   notificationCore?.application(application, didFinishLaunchingWithOptions: nil)\n }\n  @objc(userNotification:didReceive:withCompletionHandler:)\n public func userNotification(center: UNUserNotificationCenter,\n                              didReceive response: UNNotificationResponse,\n                              withCompletionHandler completionHandler: @escaping () -> Void) {\n   notificationCore?.userNotification(center: center, didReceive: response, withCompletionHandler: completionHandler)\n }\n  @objc(userNotification:willPresent:withCompletionHandler:)\n public func userNotification(center: UNUserNotificationCenter,\n                              willPresent notification: UNNotification,\n                              withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {\n   notificationCore?.userNotification(center: center, willPresent: notification, withCompletionHandler: completionHandler)\n }\n \n @objc(application:didRegisterForRemoteNotificationsWithToken:)\n public func application(_ application: UIApplication,\n                         didRegisterForRemoteNotificationsWithToken deviceToken: Data) {\n   if (hydraInstance != nil) {\n     print(\"hydra core instance is available\")\n     notificationCore?.application(application, didRegisterForRemoteNotificationsWithToken: deviceToken)\n   } else {\n     print(\"hydra core instance is not available\")\n     self.apnsTokenToSet = deviceToken\n   }\n }\n  @objc(application:didFailToRegisterForRemoteNotificationsWithError:)\n public func application(_ application: UIApplication,\n                         didFailToRegisterForRemoteNotificationsWithError error: Error) {\n   notificationCore?.application(application, didFailToRegisterForRemoteNotificationsWithError: error)\n }\n  @objc(application:didReceiveRemoteNotification:fetchCompletionHandler:)\n public func application(_ application: UIApplication,\n                         didReceiveRemoteNotification userInfo: [AnyHashable : Any],\n                         fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void) {\n   notificationCore?.application(application, didReceiveRemoteNotification: userInfo, fetchCompletionHandler: completionHandler)\n }\n  @objc(updateNotificationPermission:)\n public func updateNotificationPermission(granted: Bool) {\n   hydraInstance?.update(notificationSupport: granted)\n }\n \n func convertCTAToDictionary(_ cta: CTA) -> [String: Any] {\n   var dictionary = [String: Any]()\n\n\n   dictionary[\"actionText\"] = cta.actionText ?? \"\" // Handle optional value\n   dictionary[\"action\"] = cta.action\n   dictionary[\"type\"] = cta.type\n  \n   return dictionary\n }\n}\n3.5 Add RnEventEmitter Native module\nTo emit the events to the React Native from Native iOS over the bridge, you need to add the Native Event Emitter -\nCreate a new Objective C Header file - RNEventEmitter.m and add following code -\nRNEventEmitter.m\n#import <React/RCTBridgeModule.h>\n#import <React/RCTEventEmitter.h>\n\n\n@interface RCT_EXTERN_MODULE(RNEventEmitter, RCTEventEmitter)\n RCT_EXTERN_METHOD(supportedEvents)\n@end\nNow add the supporting Swift file - RNEventEmitter.swift file and add the following code -\nSwift\nimport Foundation\nimport React\n\n\n@objc(RNEventEmitter)\nopen class RNEventEmitter: RCTEventEmitter {\n\n\n public static var emitter: RCTEventEmitter!\n\n\n override init() {\n   super.init()\n   RNEventEmitter.emitter = self\n }\n\n\n open override func supportedEvents() -> [String] {\n   [\n     EventTypes.ON_PUSH_RECEIVED.rawValue,\n     EventTypes.ON_TOKEN_AVAILABLE.rawValue,\n     EventTypes.ON_MESSAGES_AVAILABLE.rawValue,\n     EventTypes.ON_NOTIFICATION_CLICK.rawValue,\n     EventTypes.ON_NOTIFICATION_SHOWN.rawValue,\n     EventTypes.ON_NOTIFICATION_RECEIVED.rawValue,\n     EventTypes.ON_NOTIFICATION_DISMISSED.rawValue,\n     EventTypes.ON_REQUEST_PERMISSION_ACTION.rawValue,\n     EventTypes.ON_UNREAD_MESSAGE_COUNT_AVAILABLE.rawValue,\n     EventTypes.HANDLE_CUSTOM_ACTION.rawValue,\n   ]\n }\n}\n3.6 Add iOS Native module methods\nTo support push notifications, we need request permissions API, need the callbacks when the token or push notification is available, to do that, add following React Native Bridge methods in React Native Bridge -\nIn RnHydraModule.m, add following code at the end of file -\nRnHydraModule.m\n// Push notifications\nRCT_EXTERN_METHOD(requestPermissions)\n\n\nRCT_EXTERN_METHOD(getToken:(RCTPromiseResolveBlock)resolve\n                 rejecter:(RCTPromiseRejectBlock)reject)\n\n\nRCT_EXTERN_METHOD(addEventListener:)\n\n\nRCT_EXTERN_METHOD(removeEventListener:)\nIn RnHydraSdk.swift file, add its implementation -\nSwift\n// ************************** push notification methods **************************\n @objc(requestPermissions)\n func requestPermissions() {\n   RnHydraCore.shared.requestPermissions()\n }\n  @objc(getToken:rejecter:)\n func getToken(resolve:RCTPromiseResolveBlock?, reject:RCTPromiseRejectBlock?) {\n   let token = RnHydraCore.shared.getToken()\n   resolve?(token)\n }\n  @objc(addEventListener:)\n func addEventListener(event: String) {\n   RnHydraCore.shared.addEventListener(event: event)\n }\n\n\n @objc(removeEventListener:)\n func removeEventListener(event: String) {\n   RnHydraCore.shared.removeEventListener(event: event)\n }\n// ******************************* private methods *******************************\nRich Notification Support\nTo add Rich notification supports to Hydra SDK, please configure app groups and add new notification service as below\nAdd App groups\nWe recommend having a separate App Group ID set for Hydra SDKs with the format group.{app bundle id}.hydra and make sure the same app group id is enabled for all the targets where Hydra SDK is being used.\nTo add App groups, you need to add an App groups capability from the Signing and Capability tab.\nAdd App Groups and Enable your app’s group -\nAdd Hydra notification extension\nTo build the rich notifications in iOS app, you need to add the notifications service extension, please add a new notification service extension by following the steps below -\nAdd new App target - Select File -> New -> Target\nSearch for Notification service, you will get 2 notifications Extensions, 1 - Content Extension and another Service Extension. Select Notification Service Extension.\nClick next and name it HydraPushNotificationExtension OR anything you want to name and click Next -\nMake sure you have a team selected and the bundle identifier is showing correctly.\nActivate Extension - XCode will prompt you if you want to activate the Extension, Click Activate.\nAdd App groups to Extension\nNow, please map the App groups we created with the newly created Extension by adding same App groups id to Extension’s app group -\nCopy the group id from App’s App group.plist file -\nAdd the copied group identifier to Extention’s App group.plist file -\nUpdate NotificationService.swift file’s code\nNow, open the NotificationService file in the Extension Service folder and replace it with the following code -\nSwift\nimport UserNotifications\nimport HydraPushNotificationServiceExtension\n\n\nclass NotificationService: UNNotificationServiceExtension {\n let service:HydraRemoteNotificationService = .init()\n\n\n   var contentHandler: ((UNNotificationContent) -> Void)?\n   var bestAttemptContent: UNMutableNotificationContent?\n\n\n   override func didReceive(_ request: UNNotificationRequest, withContentHandler contentHandler: @escaping (UNNotificationContent) -> Void) {\n     service.didReceive(request, withContentHandler: contentHandler)\n   }\n  \n   override func serviceExtensionTimeWillExpire() {\n     service.serviceExtensionTimeWillExpire()\n   }\n}\nNOTE:\nIf you don’t find the HydraRemoteNotificationService, please clean & build the app once.\nReact Native Push notification setup\nReact Native Bridge methods\nNow in React Native code, open the bridge file - HydraModule.ts we created last time and add following code -\nHydraModule.ts\n/**\n* ********************************************************************************\n*                      Hydra Push Notification APIs\n* ********************************************************************************\n*/\n/**\n* Passes user preferences to the Hydra SDK.\n*\n* @param cuId - The customer ID of the user.\n* @param userPreferences - The user preferences to be passed.\n* @returns A promise that resolves when the user preferences are successfully passed.\n*\n* @example\n* ```tsx\n* passUserPreferences('customer-id', {\n*  promPushOpted: true,\n* transPushOpted: false,\n* });\n*/\nexport function passUserPreferences(\n cuId: string,\n userPreferences: UserPreferences\n): Promise<any> {\n // TODO: This needs to be fixed for iOS, we need to call\n // set preferences first before updating preferences\n return Platform.OS === 'android'\n   ? RnHydraSdk.passUserPreferences(cuId, userPreferences)\n   : RnHydraSdk.passUserPreferences();\n}\n\n\n/**\n* Requests permissions for push notifications.\n* This method should be called before any other method in the SDK.\n*/\nexport function requestPermissions() {\n return RnHydraSdk.requestPermissions();\n}\n\n\n/**\n* A method to get the FCM token from SDK\n*\n* @returns a notification token string\n*/\nexport function getToken(): Promise<string> {\n return RnHydraSdk.getToken();\n}\n\n\ntype EventListenerSubscriptionMap = Record<string, EmitterSubscription>;\n\n\n/**\n* A map of event listener subscriptions.\n* The key is the event type and the value is the subscription object.\n* This map is used to keep track of the event listeners added by the app.\n* This is used to remove the event listeners when they are no longer needed.\n* This map should not be accessed directly by the app.\n* Use the `addEventListener` and `removeEventListener` functions instead.\n*/\nconst eventListenerSubscriptions: EventListenerSubscriptionMap = {};\nconst emitter = Platform.OS === 'ios' ? new NativeEventEmitter(NativeModules.RNEventEmitter) : DeviceEventEmitter\n\n\n\n\n/**\n* Adds an event listener for the specified event type.\n* The listener will be called when the event is triggered.\n*\n* @param eventType - The type of the event to listen for.\n* @param listener - The callback function to be called when the event is triggered.\n*/\nexport function addEventListener(\n eventType: RnEventTypes,\n listener: (event: any) => void\n) {\n if (!eventListenerSubscriptions[eventType]) {\n   RnHydraSdk.addEventListener(eventType);\n   const subscription = emitter.addListener(eventType, listener);\n   eventListenerSubscriptions[eventType] = subscription;\n }\n}\n\n\n/**\n* Removes the event listener for the specified event type.\n*\n* @param eventType - The type of the event to remove the listener from.\n*/\nexport function removeEventListener(eventType: RnEventTypes) {\n const subscription = eventListenerSubscriptions[eventType];\n if (subscription) {\n   RnHydraSdk.removeEventListener(eventType);\n   subscription.remove();\n   delete eventListenerSubscriptions[eventType];\n }\n}\n\n\n/**\n* Removes all event listeners added by the app.\n* This should be called when the app is unmounted or when the event\n* listeners are no longer needed.\n*/\nexport function removeAllEventListeners() {\n Object.keys(eventListenerSubscriptions).forEach((eventType) => {\n   removeEventListener(eventType as RnEventTypes);\n });\n}\nUpdate new types in types.ts\nAdd the new required types in types.ts\nTypeScript\nexport interface NotificationPayload {\n accountId: string;\n body: Body;\n campaignId: string;\n clickAction: CTA;\n cuid: string;\n custom: string;\n expandableDetails: ExpandableDetails;\n gateway: GATEWAY;\n imageIdentifier: string;\n isRead: string;\n messageId: string;\n priority: string;\n scope: string;\n senderID: string;\n senderSource: string;\n validity: string;\n variationId: string;\n}\n\n\nexport interface Body {\n cta: CTA;\n image: string;\n message: string;\n textRepresentation: string;\n title: string;\n}\n\n\nexport interface CTA {\n action: string;\n actionText: string;\n type: string;\n}\n\n\nexport interface ExpandableDetails {\n ctas: CTA[];\n image: string;\n message: string;\n style: string;\n textRepresentation: string;\n}\n\n\n/**\n* This class defines the event types that gets the callback from the SDK\n* when the event is triggered from native side with the required information\n* to handle the action on the React native app side.\n*/\nexport enum RnEventTypes  {\n ON_TOKEN_AVAILABLE = \"onTokenAvailable\",\n ON_PUSH_RECEIVED = \"onPushReceived\",\n ON_NOTIFICATION_CLICK = \"onNotificationClicked\",\n ON_NOTIFICATION_RECEIVED = \"onNotificationReceived\",\n ON_NOTIFICATION_SHOWN = \"onNotificationShown\",\n ON_NOTIFICATION_DISMISSED = \"onNotificationDismissed\",\n HANDLE_CUSTOM_ACTION = \"handleCustomAction\",\n ON_REQUEST_PERMISSION_ACTION = \"onRequestPermissionAction\",\n ON_UNREAD_MESSAGE_COUNT_AVAILABLE = \"onCountAvailable\",\n ON_MESSAGES_AVAILABLE = \"onMessagesAvailable\"\n};\nUpdate init method in React native\nFor Push notifications, we need to send the Fcm Config and notificationConfig objects.\nNotificationConfig object requires a small icon to be displayed in the status bar and a notification color.\nSmall icon - Please add a notification icon in the android/app/res/drawable folder and use the exact same name while passing it from React Native\nNotification color - define a notification icon color in the android/app/res/values/colors.xml file and pass its name from React Native init method like below -\nThe updated init() method shall look like -\nJavaScript\ninit({\n     accountId: 'account-id',\n     baseURL:\n       'https://baseurl.com/new/',\n     sslPublicKey: 'Qfmq8ourRhwcDdl0pizPcqtYvJmHhoROhmdadoesmwT^',\n     country: 'India',\n     city: 'Pune',\n     countryCode: '91',\n     captureViewPortDetails: true,\n     isDisableAppLaunchedEvent: false,\n     debugLevel: 2,\n     fcmConfig: {\n       isFCMRegistrationEnabled: true,\n     },\n     notificationConfig: {\n       smallIcon: 'small_icon',\n       notificationColor: 'teal_200',\n       isMultipleNotificationInDrawerEnabled: true,\n     },\n   })\nPush Notifications Event Listeners -\nNow in your app, call requestPermissions after your init() function call and setup token listener and notification click listeners-\nJavaScript\nfunction onTokenAvailable(token: string) {\n   console.log('Token:', token);\n }\n\n\n function onNotificationClicked(notification: any) {\n   // TODO: Handle notification click\n }\n\n\n function onPermissionAction(isGranted: boolean) {\n   console.log(`Notification permission ${isGranted ? '' : 'not'} granted`);\n   // TODO setup push token and notification callbacks if permission is granted\n }\n\n\n React.useEffect(() => {\n   requestPermissions();\n   addEventListener(RnEventTypes.ON_REQUEST_PERMISSION_ACTION,onPermissionAction);\n\n\n   addEventListener(RnEventTypes.ON_TOKEN_AVAILABLE, onTokenAvailable);\n   addEventListener(RnEventTypes.ON_NOTIFICATION_CLICK, onNotificationClicked);\n   return () => {\n     removeEventListener(RnEventTypes.ON_REQUEST_PERMISSION_ACTION);\n     removeEventListener(RnEventTypes.ON_TOKEN_AVAILABLE);\n     removeEventListener(RnEventTypes.ON_NOTIFICATION_CLICK);\n   };\n }, []);\nIf you notice above, we are setting up the listeners to get the callbacks when the user takes action on permissions, OR when the token is available or when the user clicks on notification.\nHanding Notification click events\nWhen a user clicks on Push notification, the Hydra SDK provides the notification click event details like action, actionText and what is actionType. Based on the action, you can customize the action you want to take in the onNotificationClicked method.\nConsider you sent a notification to user to update their settings and if user clicks on push notification, you will get the click details and based on details, you can perform action accordingly -\nJavaScript\nfunction onNotificationClicked(notification: any) {\n     console.log('>>>>>>>>> onNotificationClicked', notification);\n\n\n     if (notification.action === 'settings') {\n       navigate.navigate('UserPreferences')\n     }\n   }\nGet notification token\nYou can also get a push notification token using the React Native Bridge method called getToken() as required.\nJavaScript\ngetToken()\n   .then((token) => {})\n   .catch((err) => console.log(err));\nThat’s all, now you are good to get started. Run your app, get the notification token and send sample Hydra and normal notifications and use FCM APIs and see if you get the notifications and if you are able to click on notifications and get notification payload.\nTable of Contents\nPrerequisite -\nAndroid Configuration\nAdd Google service\nAdd google-info.json file\nAdd Hydra push notification packages\nAdd Hydra Firebase service\nAdd push notifications listeners\nPush notification React Native Bridge APIs\nUpdate Hydra instance init method\nRnHydra Singleton instance\nCreate EventTypes\niOS Configuration\nAdd Push notification capability\nAdd google-info.plist file\nAdd Hydra Push notification packages\nAdd Native iOS code\nRich Notification Support\nReact Native Push notification setup"
  },
  {
    "url": "https://docs.capillarytech.com/docs/notification-center",
    "page_slug": "notification-center",
    "title": "Integrate Notification center into your React Native project",
    "content": "Integrate Notification center into your React Native project\nJump to Content\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nLog In\nDeveloper Documentation\nLog In\nMoon (Dark Mode)\nSun (Light Mode)\nHome\nUser Documentation\nDeveloper Documentation\nReleases\nIntegrate Notification center into your React Native project\nSearch\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nJUMP TO\napi documentation\nGetting Started\nOverview\nAPI reference index\nAuthentication\nOAuth\nBasic authentication\nAuth for consumer or end-customer apps\nAuthorisation\nRate limits\nAPI status codes\nTimezone Management\nMake your first API request\nCustomer (V1)\nRecommendations\nGet User Recommendations\nget\nGet Item Recommendations\nget\nGet Cart Recommendations\nget\nChange identifier on Auth engine\npost\nAdd Customer\npost\nUpdate customer details\nput\nUpdate Customer Identifier\nput\nSearch Customers\nget\nGet customer details\nget\nGet Customer Transactions\nget\nGet Customer Redemptions\nget\nAdd/Update Customer Notes\npost\nGet Customer Notes\nget\nGet Customer Interactions\nget\nAdd Ticket\npost\nGet Ticket Details\nget\nGet Referral Details\nget\nAdd/Update Customer Preferences\npost\nGet Customer Preferences\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nCustomer (V2)\nAdd Customer\npost\nGet Customer ID\nget\nUpdate Identifier/Issue Card\npost\nUpsert customer\npost\nAssociate Customer\npost\nGet Customer Details\nget\nGet customer hierarchy in a user group\nget\nUpdate Customer Details\nput\nUpdate association details\nput\nSearch Customers\nget\nUpdate Subscription Details\npost\nGet Subscription Details\nget\nGet Customer Tracker Details\nget\nGet Points Expiry Schedule\nget\nGet Points Expiry Schedule (Light API)\nget\nGet Loyalty Events\nget\nGet Loyalty Details\nget\nGet Points Transfer Summary\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nGet Detailed Customer Coupon Data\nget\nGet Retro Requests\nget\nGet Identifier Change Requests\nget\nGet Goodwill Requests\nget\nRequest Goodwill points (Group)\npost\nAdd Customer Image\npost\nDelete Customer Image\ndelete\nLink/Delink Card\npost\nGet Customer Status Log\nget\nGet Customer Subscription Log\nget\nGet Customer Image\nget\nGet user group customer tracker details\nget\nGet customer transactions\nget\nGet Customer Interactions\nget\nStatus codes\nCustomer (V2 Lookup)\nUpdate Customer Details\nput\nGet Customer Details\nget\nUpdate Customer Status\nput\nGet Subscription Details\nget\nGet Customer Loyalty Details\nget\nGet Retro Requests\nget\nAdd Customer Image\npost\nGet Referrals (Lookup)\nget\nGet Customer Recommendations\nget\nGet Points Balance\nget\nGet Customer Tier\nget\nGet Points Conversion Schedule\nget\nCustomer Labels\nAdd Labels\npost\nGet Org Labels\nget\nTag Customers (to Labels)\npost\nGet Customer Labels\nget\nSearch Customers by Label\nget\nTransaction\nTransaction (V1)\nAdd Transaction\npost\nAdd Transaction with Local Currency\npost\nUpdate Transaction Details\npost\nCancel Transaction Lineitem\npost\nGet Transaction Details\nget\nReturn Transaction\npost\nRetro Transaction\npost\nTransaction (V2)\nAdd/Return transaction (single)\npost\nAdd/Return Transaction(bulk)\npost\nUpdate Transaction\nput\nUpdate Transactions in Bulk\nput\nGet Transaction Details\nget\nGet transaction details using bill number\nget\nSimulation transaction add\npost\nExpose Evaluation log for an event\npost\nStatus codes\nTransaction rejection\ngetRejectedTransactions\nget\ngetReTriggerStatus\nget\nmarkFailed\nput\nretriggerTransactionAdd\npost\nCoupon\nCoupon (V1.1 APIs)\nIssue Coupon\npost\nResend Coupon\nget\nRedeem Coupon\npost\nGet Coupon details\nget\nGet Customer Coupons\nget\nIs Coupon Redeemable\nget\nGet Coupon series details\nget\nCoupon (V2 APIs)\nCreate coupon series\npost\nUpdate coupon series\nput\nGet coupon series details\nget\nIssue single coupon\npost\nIssue bulk coupons\npost\nIssue multiple coupons to a customer from a series\npost\nRedeem single coupon\npost\nRedeem bulk coupons\npost\nCheck if coupon is Redeemable\nget\nReactivate redeemed coupon\npost\nGet coupon details\nget\nGet All Customer Coupons\nget\nUpdate coupon redeem field\nput\nUpdate coupon code expiry date\nput\nRevoke coupon\npost\nCoupon Upload (V1 APIs)\nUpload Coupons (Batch)\npost\nUpload Redeemed Coupons\npost\nGet Uploaded Coupons' Status\nget\nGet Status of Redeemed Coupons\nget\nPoints\nPoints (v2)\nCheck if Points Transferable\npost\nTransfer Customer Points\npost\nGet Points Transfer Details\nget\nReverse Redeemed Points\npost\nGroup Points Transferrable\npost\nTransfer Group Points\npost\nConvert Promised Points\npost\nUpdate redeem points\nput\nDeduct points and alternate currencies from user\npost\nDeduct points and alternate currencies from user using userId\npost\nPoints (v1.1)\nCheck If Points Redeemable\nget\nIssue Validation Code (to redeem points)\nget\nRedeem Points\npost\nPoints Ledger\nGet Customer Ledger Balance\nget\nGet Points Ledger Information\nget\nGet Points Ledger Explode info\nget\nConnected Org APIs\nGet Points Ledger Information in Connected Orgs\nget\nGet Points Ledger Explode Info in Connected Orgs\nget\nCards\nGenerate Cards\npost\nGet Card Generation Log\nget\nAdd Card (Single)\npost\nUpdate Card Details (Single)\nput\nUpdate Card Details (Bulk)\nput\nGet Card Details\nget\nGet Status Log\nget\nLimit Active Cards per Customer\npost\nAdd Card Number to a Card Series\npost\nAdd External Reference ID to Card\nput\nSearch APIs\nCreate search criteria\npost\nRetrieve search criteria details\nget\nEnable search index of older data\npost\nPerform search\npost\nDeactivate search criteria\ndelete\nCreate Data Field\npost\nUpdate Data Field\nput\nGet Data Field Detail\nget\nPerform Search (Cortex API)\npost\nBadges\nCreate badges\npost\nFixed Window Restriction in Badges\nUpdate badges\nput\nGet badge by ID\nget\nGet all badges\nget\nGet fixed window details\nget\nClaim badge\npost\nUnclaim badge\npost\nUpdate activation status of badge\nput\nEnrol customers for badges\npost\nIssue badge (earn)\npost\nMultiple Badge Issuances\nIssue badge to multiple customers\npost\nImport earned (issued) badges of customer\npost\nRevoke enrolled badges\npost\nRevoke issued badge\npost\nGet badges for customer\nget\nGet all customer badges\nget\nGet individual badge details of a customer\nget\nCreate badges group\npost\nUpdate badges group\nput\nGet group by ID\nget\nGet all groups\nget\nCreate custom field for badges\npost\nUpdate badge custom field\nput\nGet badge custom field by ID\nget\nGet all badge custom fields\nget\nRewards Catalog\nCreate Reward Category\npost\nUpdate Reward Category\nput\nGet Reward Category\nget\nCreate reward\npost\nAdding revenue metadata against a reward\nUpdate Reward\nput\nClaim Reward\npost\nIssue single reward\npost\nReward Issuance with Quantity and Redemption Value Details\nIssue bulk reward\npost\nIdempotency Check for Issuing Reward\nGet rewards for user\nget\nGet all brand rewards using Brand ID\nget\nGet reward details by ID\nget\nGet brand rewards\nget\nGet purchased rewards for user (New API)\nget\nGet available reward details for user by id\nget\nGet all reward transactions for a user\nget\nGet Reward Transaction Details using Reward Transaction ID\nget\nCreate catalog promotion\npost\nUpdate catalog promotion\nput\nGet catalog promotion details\nget\nGet list of promotions\nget\nDisable promotion\nput\nGet available brand rewards\nget\nCreate custom field for reward\npost\nUpdate reward custom field\nput\nGet all custom fields\nget\nCreate reward group\npost\nUpdate rewards group\nput\nGet rewards group\nget\nGet rewards group by ID\nget\nCreate points restriction\npost\nUpdate points restriction\nput\nGet points constraints\nget\nOrganisation Level Configuration for Rewards Catalog\npost\nGet Organisation Level Configuration\nget\nCreate a Vendor\npost\nEnable or Disable a Vendor\nput\nCreate Vendor Redemption\npost\nGet all vendor redemptions\nget\nGet Vendor list for specific brand\nget\nGet Vendor Details\nget\nUpload images to file service\npost\nCreate fulfillment status\npost\nUpdate fulfillment status\nput\nGet fulfillment status\nget\nUpdate fulfilment status and transaction custom fields for issued rewards\nput\nCreate Reward Expiry Reminder\npost\nUpdate Reward Expiry Reminder\nput\nGet Reward Expiry Reminder\nget\nConnected Org APIs\nGet all available rewards for user in connected orgs\nget\nGet reward details by ID in connected orgs\nget\nIssue Reward in connected orgs\npost\nGet purchased rewards for user in connected orgs\nget\nGet all reward transactions for a user in connected orgs\nget\nGet transaction details by reward transaction ID in connected orgs\nget\nMerge User Rewards\npost\nGet User Reward Merge Details\nget\nTarget/Milestone\nMilestone & Streaks APIs\nCreate target groups\npost\nUpdate target group\nput\nGet target groups based on ID\nget\nGet associated target groups of a user\nget\nGet Promotion Data\nget\nGet active targets\nget\nGet all target groups\nget\nGet target periods\nget\nGet targets details\nget\nGet target communication template\nget\nUpsert target communication\npost\nGet target channels\nget\nDelete target group\ndelete\nCreate target period\npost\nUpdate target period\nput\nCreate targets (milestone)\npost\nModify targets\nput\nDeactivate target\ndelete\nCreate unified target group\npost\nUpdate unified target\nput\nCreate streaks\npost\nEdit streak\nput\nCreate target based on Behavioural event\npost\nCreate target based on EMF event\npost\nCreate target group based on alternate currencies\npost\nGet all milestones (target)\nget\nEnrol/Re-enrol a customer to a milestone/streak\npost\nUnenrol users from a milestone and streak\npost\nCheck the Validity of Milestone / Target Name\npost\nGet target events\nget\nUser-Created Challenges\nConnected Org APIs\nEnroll/Re-Enroll a Customer to a Milestone or Streak\npost\nUnenroll a Customer to from Milestone or Streak\npost\nGet Associated Target Groups of a User\nget\nData Scopes\nLeaderboards\nGet top ranked users\nget\nGet user rank across target groups\nget\nLoyalty Promotion\nIntroduction\nEnrol and Issue Promotion\npost\nRevoke Enrolled and Issued Promotions\npost\nConnected Org APIs\nGet Promotion Data of a Customer\nget\nUser Created Challenge\nCreate Promotion for UCC\npost\nGet promotion by ID\nget\nGet details of all promotions\nget\nGet Promotion Data of a Specific Customer\nget\nCart Promotions\nGet Cart Promotion Settings\nget\nGet Promotion Redemptions\nget\nGet Cart Promotions code API\nget\nGet Cart Promotions for a particular till\nget\nGet Lock unlock -Pending carts\nget\nGet Cart Promotions Config API\nget\nCreate Cart Promotion\npost\nSet Cart Promotion Settings\npost\nEarn Cart Promotion\npost\nDeactivate Cart Promotion\npost\nActivate Cart Promotion\npost\nPost Revoke Earned Cart Promotion\npost\nPost Earn Cart Promotions in Bulk\npost\nPost Evaluate Cart Promotions\npost\nCancel Cart Evaluation\nput\nPost Cart Promotions Code link API\npost\nGet Cart Promotions for a Customer\nget\nIssue Cart Promotion\npost\nUser Group\nAdd Group\npost\nUpdate User Group\nput\nSearch user groups by name, ID, and mobile number\nget\nDelete User Group\ndelete\nJoin Member to Group\npost\nRemove group member\ndelete\nTransfer Group Member\npost\nGet group transactions\nget\nRetrieve user group members list\nget\nRetrieve user group members list with cards & status details\nget\nRetrieve Primary & Secondary Member Details\nget\nRetrieve group slab/tier log history\nget\nRetrieve points expiry schedule of a group\nget\nRetrieve points conversion schedule\nget\nStatus codes\nUpdate permissions\nput\nSearch for groups using the extended fields\npost\nOrganization\nOrganization (V1)\nGet Org Details\nget\nGet Org Entities\nget\nGet Org Configurations\nget\nGet Org Statistics\nget\nGet Top Selling Items\nget\nGet Org Custom Fields\nget\nRetrieve Brand ID\npost\nGet Org Payment Modes\nget\nOrganization (V2)\nAdd Till\npost\nUpdate Till with Custom Fields\nput\nGet Custom Fields\nget\nGet Config Key Values\nget\nGet org till details\nget\nGet Active Tills\nget\nGet Loyalty Programs\nget\nAdd Store\npost\nRetrieve org hierarchy details\nget\nAdd Store in bulk\npost\nCommunications (v2)\nSend communication message\npost\nError code\nCommunications (v1)\nSend communication message\npost\nError code\nCustom Fields\nCreate a Custom Field\npost\nGet Custom Fields\nget\nTag Custom Field to an Entity\npost\nAudit logs\nGet audit logs of entities\nget\nGet Audit Logs by event name\nget\nPII deletion\nAdd a PII deletion request\npost\nUpdate PII deletion status\nput\nRetrieve request status of PII deletion\nget\nRetrieve PII deletion request details\nget\nError codes\nLeads\nAdd Lead\npatch\nAdd Lead Substatus\npost\nUpdate Lead Status\nput\nUpdate Lead Followups\npost\nUpdate Lead\nput\nConfigure lead reasons\npost\nGet Lead Status Log\nget\nGet Lead follow-ups\nget\nGet Lead Reasons\nget\nGet Lead Details\nget\nGet Lead Substatus\nget\nAssign Lead\nget\nSearch lead\nget\nStaff\nAdd Staff Account\npost\nGet Access Token\npost\nEdit Staff Details\npost\nGet Staff Details\nget\nChange Account Password\npost\nSend OTP\npost\nValidate OTP\npost\nChange Identifier (Send OTP)\npost\nChange Identifier (Validate OTP)\npost\nTransfer Staff User\npost\nGet Staff of Store/Zone\nget\nLogout Staff Account\nget\nRemove Staff Account\npost\nBehavioral Events\nCreate Event (Custom)\npost\nUpdate Event (Custom)\nput\nGet Org Events\nget\nGet Running Events Status\nget\nGet Customer Events\nget\nDisable Event\nput\nAdd Webhook\npost\nGet Events Logs\nget\nGet Events Meta\nget\nGet event data using request ID\nget\nSearch events\nget\nPost Event\npost\nEvent notification logs\nGet Event Log (by Request ID)\nget\nGet Event Log (by Reference ID)\nget\nGet Event Log (by Event ID)\nget\nResponse code\nCompany\nAdd Company\npost\nUpdate Company\nput\nGet Company Details\nget\nRemove Company\ndelete\nGet Org Companies\nget\nGet Companies by Extended Field Values\nget\nRequest (V1)\nAdd Request\npost\nApprove Requests\npost\nReject Requests\npost\nGet Request Details\nget\nGet Request Logs\nget\nRequests (V2)\nAdd transaction request\npost\nUpdate transaction request\nput\nRetrieve transaction request status\nget\nRetrieve  transaction request details\nget\nStatus event notification\nError codes\n(New) Request workflow\nCreate a request\nChange customer status request\npost\nPoints redemption request\npost\nIssue goodwill points request\npost\nIssue/Earn badge request\npost\nEnrol customers for badges\npost\nRetro transaction - Claim transaction\npost\nApprove or reject a request\nput\nGet details of all requests\nget\nGet details of a particular request\nget\nError codes\nPartner Program\nLink Customer to Partner Program\npost\nUpdate Customer\npost\nDelink Customer\npost\nGet Customer Activity\nget\nGet customer activity history\nget\nUser Authentication\nRegister User\npost\nAuthorize User\npost\nUpdate Password\nput\nOTP\nGenerate OTP\npost\nOTP template guidelines\nValidate OTP\npost\nGet OTP\nget\nSuccess and error codes\nProduct\nAdd Product\npost\nGet Product Details\nget\nSearch Products\nget\nAdd Product Attributes\npost\nGet Product Attributes\nget\nGet Product Categories\nget\nGet Product Brands\nget\nGet Product Colors\nget\nGet Product Sizes\nget\nGet Product Meta Sizes\nget\nResponse codes\nStore\nGet Store Details\nget\nGet Store Staff Details\nget\nGet Store Tasks\nget\nVerify Store Login Credentials\nget\nUpload Store Logs\npost\nUpload Store Reports\npost\nGet Store Reports\nget\nGet Store Configurations\nget\nVerify Login Credentials\nget\nTask\nAdd Tasks\npost\nUpdate Tasks\npost\nGet Tasks Metadata\nget\nGet Task Logs\nget\nUpdate Status Mappings\npost\nGet Status Mappings\nget\nGet Task Reminders\nget\nCreate/Update Task Reminders\npost\nRetrieve Individual Task Details\nget\nCustomer Authentication (Web/Mobile)\nFirst factor authentication\nGenerate Authentication Token\npost\nGenerate OTP\npost\nValidate OTP\npost\nValidate Password\npost\nRegenerate Authentication Token\npost\nChange Password\npost\nForget Password\npost\nStatus codes\nMulti-factor authentication\nGenerate MFA token\npost\nGenerate MFA OTP\npost\nValidate MFA OTP\npost\nMFA password flow\nValidate password\npost\nChange password\npost\nForgot password\npost\nRegenerate token\npost\nDelete token\ndelete\nAuthentication configurations\nReferral\nRefer Customer\npost\nGet Referral Code\nget\nValidate Referral Code\nget\nDIY Template APIs\nCreate DIY Template\npost\nRetrieve Workspaces\nget\nRetrieve Blocks Supported by the Template\nget\nOther APIs\nGet Transaction Earning\nget\nTrigger Walk-in Notifications on InStore\nget\nUpdate Currency Ratio\npost\nGenerate Card/customer External ID\nget\nConfigure Org Extended Field\npost\nGet Org Extended Fields\nget\nCreate Store Associates\npost\nFeed (Scan Event)\npost\nGet Configured Card Limit per Customer\nget\nGet Org Sources\nget\nGet org configs\nget\nRetrieve extended field config details\nget\nmobile SDKs\nAndroid SDK\nOverview\nConfigure firebase\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nXiaomi push notification (Push Amplification)\niOS SDK\nOverview\nSet up source account\nConfigure gateway\nInstall SDK\nInitialise SDK\nSet up events tracking\nPush notifications\nIn-app messaging\nNotification center\nSetting up React native project for Hydra SDK\nIntegrate Push Notifications into your React Native project\nIntegrate In-App messaging into your React Native project\nIntegrate Notification center into your React Native project\nPlugins\nShopify plugin\nMagento plugin\nPowered by\nIntegrate Notification center into your React Native project\nThis document outlines the steps to integrate Notification Center into your React Native project using the Hydra SDK. Follow the instructions below to enable and configure Notification Center for your application.\nNotification Center is a powerful feature through which your users can have a unified and streamlined notification experience, where they can easily access and manage their notifications in one place. It provides an option for the end-user to scroll back and see what they have missed, read the notifications and maintain the history by deleting the notifications.\nPrerequisites\nLike InApp messaging, Notification Center also requires you to first set up the Push notifications for Android and iOS before you start using it.\nIntegration\nThere can be two approaches to implement the Notification Center in the application.\nIntegrate HydraInboxCore framework\nWhen developers want to create their own UI implementation then they can use this framework and its API’s.\nThis framework can return all the notifications and the developer can sketch the UI as per their requirement.\nIntegrate HydraInboxCore and HydraInboxUI frameworks(Recommended)\nThis should be used when the developer wants to use the Notification Center UI designed by the SDK.\nThis will need the developer to set up a notification button(or any button) and push/present SDK’s Notification Center UI.\nDependencies\nNotification Center has 2 packages -\nHydraInboxCore - Contains the inbox core apis, only use/add this package if you building custom UI\nHydraInboxUI - Contains the Notification Center UI, use/add this package if you want to use the inbuilt notification center UI.\nAndroid\nAdd package dependency\nOpen android/app/build.gradle file and add the following dependencies to the application\nbuild.gradle\ndependencies {\n   ...\n   // Hydra SDKs\n   implementation(\"com.capillary:hydra-core:536.3.6\")\n   implementation(\"com.capillary:hydra-pushbase:536.4.8\")\n   implementation(\"com.capillary:hydra-firebase:536.3.6\")\n   implementation(\"com.capillary:hydra-richnotification:536.0.5\")\n\n\n\n\n   implementation(\"com.capillary:hydra-inapp:536.0.12\")\n   implementation(\"com.capillary:hydra-inbox-core:536.0.11\")\n   implementation(\"com.capillary:hydra-inbox-ui:536.0.12\")\n   ...\n}\nNOTE:\nadd hydra-inbox-ui package only if you want to use the in built notification center UI otherwise just add hydra-inbox-core.\nUpdate Android Bridge module\nOpen RnHydraModule.kt from android/app/src folder and update the init method to accommodate the notification center instance in Hydra instance -\nKotlin\n@ReactMethod\n   fun initSdk(rnConfig: ReadableMap, promise: Promise?) {\n       ...\n       val inAppDefaultIcon: String? = rnConfig.getMap(\"inAppConfig\")?.getString(\"defaultImage\")\n       val notificationCenterDefaultIcon: String? = rnConfig.getMap(\"notificationCenterConfig\")?.getString(\"defaultImage\")\n       val notificationCenterOffset: Int? = rnConfig.getMap(\"notificationCenterConfig\")?.getInt(\"notificationCenterOffset\")\n\n\n       ...\n\n\n       val inAppConfig = inAppDefaultIcon?.let {\n           InAppConfig(getDrawableId(it, \"drawable\"))\n       }\n\n\n       val notificationCenterConfig = notificationCenterDefaultIcon?.let {\n           notificationCenterOffset?.let {offset ->\n               NotificationCenterConfig(getDrawableId(it,\"drawable\"), offset)\n           }\n       }\n\n\n       val hydraConfig: HydraConfig = HydraConfig.Builder(\n           currentActivity!!.applicationContext,\n           accountId,\n           baseUrl,\n           sslPublicKey,\n           country,\n           city,\n           countryCode,\n           captureViewPortDetails,\n           fcmConfig,\n           notificationConfig,\n           inAppConfig,\n           notificationCenterConfig,\n           isDisableAppLaunchedEvent,\n           debugLevel\n       ).build()\n\n\n       hydraAPI = HydraAPI.instanceWithConfig(currentActivity!!.applicationContext, hydraConfig)\n       // Set the HydraAPI instance to the RnHydra class\n       RnHydra.setHydraAPI(hydraAPI!!)\n       // Set the JS Event Emitter to the RnHydra class to emit the events to JS\n       RnHydra.setJSEventEmitter(reactApplicationContext.getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter::class.java))\n       // Register the push notification listeners\n       registerPushNotificationListeners()\n\n\n       Logger.i(\"Hydra Capillary SDK initialized successfully!\")\n       promise?.resolve(true)\n   }\nHere we created the notificationCenterConfig by extracting the notificationConfig object we sent from ReactNative side (this will come later) and added the notificationCenterConfig object to the Hydra’s instance method.\nAdd Notification Click Event listener\nNOTE:\nIf you are using built-in Notification Center UI from Hydra, then you need to add this listener otherwise you can ignore this.\nCreate a new listener class in android/app/src/listeners folder - RnOnInboxMessageClickListener and add following code to it\nKotlin\npackage com.hydra.sdk.example.listener\n\nimport android.content.Context\nimport com.capillary.hydra.android.sdk.utils.Logger\nimport com.capillary.hydra.inbox.core.model.Action\nimport com.capillary.hydra.inbox.ui.listener.OnMessageClickListener\nimport com.facebook.react.bridge.Arguments\nimport com.hydrarnsdk.classes.EventTypes\nimport com.hydrarnsdk.classes.RnHydra\n\nclass RnOnInboxMessageClickListener: OnMessageClickListener {\n   override fun onMessageClick(context: Context, action: Action): Boolean {\n       val clickedAction = Arguments.createMap()\n       action.action?.let { clickedAction.putString(\"action\", it) }\n       action.actionText?.let { clickedAction.putString(\"actionText\", it) }\n       clickedAction.putString(\"type\", action.type.toString())\n       RnHydra.emitEvent(EventTypes.ON_NOTIFICATION_CLICK.event, clickedAction)\n       return true\n   }\n}\nKeep the same package at top of file as per your package\nRegister click event listener\nNow register this click listener to start receiving click events in registerPushNotificationListeners method -\nAdd following code at the end of method -\nKotlin\nprivate fun registerPushNotificationListeners() {\n      ...       HydraInboxUIHelper.getInstance().registerOnMessageClickListener(RnOnInboxMessageClickListener())\n   }\niOS\nAdd package dependency\nIn iOS, open XCode and click on Project name, -> in package dependencies -> click + icon and select hydra-sdk-ios-packages -> click Add Package.\nNow the new window will be opened, add HydraInboxCore and HydraInboxUI to your project target and click Add Package\nUpdate iOS Bridge module\nNow update the initSdk method in RnHydraSdk.swift to initialize HydraInboxCore and HydraInboxUI\nSwift\n@objc(initSdk:withResolver:withRejecter:)\n func initSdk(config: NSDictionary,\n              resolve:RCTPromiseResolveBlock?,\n              reject:RCTPromiseRejectBlock?) -> Void {\n   ...\n   let inAppConfigParams: NSDictionary? = (config.value(forKey: \"inAppConfig\") as? NSDictionary)\n   let ncConfigParams: NSDictionary? = (config.value(forKey: \"notificationCenterConfig\") as? NSDictionary)\n\n\n   do {\n     let config: HydraConfiguration = try HydraConfiguration(\n       accountID: accountId,\n       customerId: customerId,\n       server:  .genericServer(baseUrl, sslPublicKey, [0,5,10,30,120]))\n     let geoData: GeoData = GeoData(country: country, countryCode: countryCode, city: city, timeZone: timezone)\n\n\n     // Notificaion Inbox Core Config\n     let inboxConfig: InboxCoreConfiguration? = ncConfigParams.flatMap { params in\n         return InboxCoreConfiguration(hydraConfig: config, maximumNotificationCount: 200)\n     }\n\n\n     RnHydraSdk.hydra = RnHydraCore.shared.generateInstance(\n       withConfiguration: config,\n       geoData: geoData,\n       supportsPushNotifications: isFCMRegistrationEnabled,\n       inboxCoreConfig: inboxConfig\n     )\n    \n     // InApp messaging\n     ...\n\n\n     // Notification Inbox Core\n     if (ncConfigParams != nil) {\n       let inboxCore = try InboxCore(with: inboxConfig!)\n       RnHydraCore.shared.update(inboxCore: inboxCore)\n\n\n       // Setup notification core ui only if the app supports notification center ui\n       if (useNotificationCenterUI) {\n         let inboxUIConfiguration: NSDictionary? = (ncConfigParams?.value(forKey: \"inboxUIConfiguration\") as? NSDictionary)\n         let unreadMessageConfigPayload = (inboxUIConfiguration?.value(forKey: \"unreadMessageConfig\") as? NSDictionary)\n         let readMessageConfigPayload = (inboxUIConfiguration?.value(forKey: \"readMessageConfig\") as? NSDictionary)\n         let defNCImage: String? = (ncConfigParams?.value(forKey: \"defaultImage\") as? String)\n         let ncPlaceHolderImage: UIImage? = defNCImage.flatMap {UIImage(named: $0)}\n        \n         var inboxUnreadConfig: HydraReactNativeInboxUIConfiguration? = nil\n         var inboxReadConfig: HydraReactNativeInboxUIConfiguration? = nil\n         if (unreadMessageConfigPayload != nil) {\n           inboxUnreadConfig = convertInboxUIPayloadToInboxUIConfig(dictionary: unreadMessageConfigPayload!, type: InboxUIConfigurationType.unread)\n         }\n        \n         if (readMessageConfigPayload != nil) {\n           inboxReadConfig = convertInboxUIPayloadToInboxUIConfig(dictionary: readMessageConfigPayload!, type: InboxUIConfigurationType.read)\n         }\n\n\n         let inboxUIConfig = HydraInboxUIConfiguration(\n           unreadMessageConfigType: inboxUnreadConfig != nil ? .customReactNativeConfiguration(inboxUnreadConfig!) : .defaultUnreadConfiguration,\n           readMessageConfigType: inboxReadConfig != nil ?.customReactNativeConfiguration(inboxReadConfig!) : .defaultReadConfiguration,\n           placeholderImage: ncPlaceHolderImage\n         )\n\n\n         let inboxUI = InboxUICore(with: inboxCore, configuration: inboxUIConfig)\n\n\n         RnHydraCore.shared.update(inboxUICore: inboxUI)\n       }\n     }\n\n\n     // setting log level\n     ...\n }\nIf you notice, in above code, we are adding the inbox core and inbox UI instances to the Hydra SDK.\nWe are updating the Hydra initialization by setting the inboxCoreConfig in its init method and then later we are adding the code to create the inboxCore and inboxUI instances and setting them in RnHydraCore for further usage.\nAdd private method at the end of file -\nSwift\nprivate func convertInboxUIPayloadToInboxUIConfig(dictionary: NSDictionary, type: InboxUIConfigurationType) -> HydraReactNativeInboxUIConfiguration? {\n   let cellBackgroundColor = dictionary[\"cellBackgroundColor\"] as? String\n   let cellTitleLabelTextColor = dictionary[\"cellTitleLabelTextColor\"] as? String\n   let cellMessageLabelTextColor = dictionary[\"cellMessageLabelTextColor\"] as? String\n   let cellTimeLabelTextColor = dictionary[\"cellTimeLabelTextColor\"] as? String\n   var titleFont: HydraFontGenerator?\n   var messageFont: HydraFontGenerator?\n   var timeFont: HydraFontGenerator?\n\n\n   if let cellTitleLabelFontDict = dictionary[\"cellTitleLabelFont\"] as? [String: Any] {\n     titleFont = createFontGenerator(from: cellTitleLabelFontDict)\n   }\n\n\n   if let cellMessageLabelFontDict = dictionary[\"cellMessageLabelFont\"] as? [String: Any] {\n     messageFont = createFontGenerator(from: cellMessageLabelFontDict)\n   }\n\n\n   if let cellTimeLabelFontDict = dictionary[\"cellTimeLabelFont\"] as? [String: Any] {\n     timeFont = createFontGenerator(from: cellTimeLabelFontDict)\n   }\n\n\n   let cellTitleLabelLineLimit = dictionary[\"cellTitleLabelLineLimit\"] as? Int ?? 2\n   let cellMessageLabelLineLimit = dictionary[\"cellMessageLabelLineLimit\"] as? Int ?? 2\n\n\n   return HydraReactNativeInboxUIConfiguration(\n     type: type,\n     cellBackgroundColor: cellBackgroundColor,\n     cellTitleLabelTextColor: cellTitleLabelTextColor,\n     cellMessageLabelTextColor: cellMessageLabelTextColor,\n     cellTimeLabelTextColor: cellTimeLabelTextColor,\n     cellTitleLabelFont: titleFont,\n     cellMessageLabelFont: messageFont,\n     cellTimeLabelFont: timeFont,\n     cellTitleLabelLineLimit: cellTitleLabelLineLimit,\n     cellMessageLabelLineLimit: cellMessageLabelLineLimit\n   )\n }\n\n\n func createFontGenerator(from dictionary: [String: Any]) -> HydraFont {\n   let size = dictionary[\"size\"] as? CGFloat ?? 0.0\n   let name = dictionary[\"name\"] as? String ?? \"\"\n   return HydraFont(size: size, name: name)\n }\nUpdate RnHydraCore methods\nWe need to set the inbox core and inbox ui instances to the RnHydraCore instance to use it in future. Add following methods to the RnHydraCore -\nAdd 2 new instance variables to the RnHydraCore object -\nSwift\nvar inboxCore: InboxCore? = nil\n var inboxUICore: InboxUICore? = nil\nAdd methods to set these variables from RnHydraSdk -\nSwift\npublic func update(inboxCore core: InboxCore) {\n   self.inboxCore = core\n }\n\n\n public func update(inboxUICore core: InboxUICore) {\n   self.inboxUICore = core\n }\nClick listener\niOS uses the same click listener as the push notification click listener, so if you have set that up, you will get the click event in onNotificationClicked event listener, you are all set. For more information, Check out\nHanding Notification click events\nsection.\nNotification Center APIs\nNotification center exposes following APIs for users to use and render the notifications on the app -\nSr.\nAPI\nDescription\nPackage to Use\n1\nstartNotificationCenterActivity\nAn API to show the notification center UI screen. Use this API if you want to display the built-in UI. This API also provides the option to customize the UI as you need.\nHydra Inbox UI\n2\ngetInboxMessages\nReturns all Notification messages the app has received so far.\nHydra Inbox Core\n3\ngetUnreadNotificationCount\nReturns the unread notifications messages count.\nHydra Inbox Core\n4\ntrackInboxMessageClick\nUpdates Hydra SDK that the notification was clicked.\nHydra Inbox Core\n5\ndeleteInboxMessage\nDeletes the selected notification from the list.\nHydra Inbox Core\n6\ndeleteAllInboxMessages\nDeletes all inbox messages from the list.\nHydra Inbox Core\nBefore we start using these APIs, we need to set the native bridge module on both Android and iOS to expose its functionality.\nAndroid\nNative Android bridge API support\nOpen RnHydramodule.kt and add following methods below Push notifications APIs section\nNative Android bridge APIs\nKotlin\n/**\n    * ********************************************************************************\n    *                      Hydra Notification Center APIs\n    * ********************************************************************************\n    */\n\n\n   /**\n    * Starts the notification center activity\n    * This method is used to start the notification center activity from the RN bridge\n    * to show the notification center UI.\n    */\n   @ReactMethod\n   fun startNotificationCenterActivity() {\n       val inboxActivity = Intent(reactApplicationContext, InboxActivity::class.java)\n       inboxActivity.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)\n       ContextCompat.startActivity(reactApplicationContext, inboxActivity, null)\n   }\n\n\n   /**\n    * A method to get the unread notification count over the RN bridge\n    * Once SDK gets the notification count, it sends the data back to the JS\n    * over the bridge using {@link RnUnReadCountListener}.\n    */\n   @ReactMethod\n   fun getUnreadNotificationCount() {\n       HydraInboxCoreApi().getUnReadMessagesCount(reactApplicationContext, RnUnReadCountListener())\n   }\n\n\n   /**\n    * A method to track the notification click event over the RN bridge\n    */\n   @ReactMethod\n   fun trackInboxMessageClick(inboxData: ReadableMap) {\n       val inbox = readableMapToInboxMessage(inboxData)\n       if (inbox != null) {\n           HydraInboxCoreApi().trackInboxMessageClick(reactApplicationContext, inbox)\n       }\n   }\n\n\n   /**\n    * A method to fetch all the notification messages saved in the SDK and pass\n    * it over the React Native application over the bridge.\n    *\n    * Once SDK gets the messages, it sends the data back to the JS over the bridge\n    * using {@link RnOnMessagesAvailableListener}.\n    */\n   @ReactMethod\n   fun fetchInboxMessages() {\n       HydraInboxCoreApi().fetchInboxMessages(reactApplicationContext, RnOnMessagesAvailableListener())\n   }\n\n\n   /**\n    * A method to delete a given inbox notification\n    *\n    * @returns a promise once the SDK deletes the notification from inbox\n    *\n    * NOTE: the promise is asynchronously handled considering the notification\n    * will be deleted by the time the SDK sends promise over the bridge as\n    * RN SDK is not getting a callback when the Native SDK deletes it.\n    */\n   @ReactMethod\n   fun deleteInboxMessage(inboxData: ReadableMap, promise: Promise?) {\n       val inbox = readableMapToInboxMessage(inboxData)\n       if (inbox !=null) {\n           HydraInboxCoreApi().deleteInboxMessage(reactApplicationContext, inbox)\n           promise?.resolve(true)\n       }\n   }\n\n\n   /**\n    * A method to delete all the inbox notifications from the SDK.\n    *\n    * @returns a promise once the SDK deletes all the notifications from inbox\n    *\n    * NOTE: the promise is asynchronously handled considering the notification\n    * will be deleted by the time the SDK sends promise over the bridge as\n    * RN SDK is not getting a callback when the Native SDK deletes it.\n    */\n   @ReactMethod\n   fun deleteAllInboxMessages(promise: Promise?) {\n       HydraInboxCoreApi().deleteAllInboxMessages(reactApplicationContext)\n       promise?.resolve(true)\n   }\nAdd Event listeners\nAs you would have noticed - getUnreadNotificationCount and fetchInboxMessages methods requires us to give the callback listeners so once the data is available, the Android SDK will callback this listener and then the bridge module will pass it back to the React Native App\nAs you would have noticed - getUnreadNotificationCount and fetchInboxMessages methods requires us to give the callback listeners so once the data is available, the Android SDK will callback this listener and then the bridge module will pass it back to the React Native App\nCreate RnUnReadCountListener\nIn android/app/src/listener, create a new listener - RnUnReadCountListener.kt and add following code to it -\nKotlin\npackage com.hydra.sdk.example.listener\n\n\nimport com.capillary.hydra.android.sdk.utils.Logger\nimport com.capillary.hydra.inbox.core.listener.UnReadCountListener\nimport com.hydrarnsdk.classes.EventTypes\nimport com.hydrarnsdk.classes.RnHydra\n\n\nclass RnUnReadCountListener: UnReadCountListener {\n override fun onCountAvailable(unReadMessagesCount: Int) {\n   Logger.v(\"onCountAvailable $unReadMessagesCount\")\n   RnHydra.emitEvent(EventTypes.ON_UNREAD_MESSAGE_COUNT_AVAILABLE.event, unReadMessagesCount)\n }\n}\nKeep the package name as of your application’s package name\nCreate RnOnMessagesAvailableListener\nIn android/app/src/listener, create a new listener - RnOnMessagesAvailableListener.kt and add following code to it -\nKotlin\npackage com.hydra.sdk.example.listener\n\n\nimport com.capillary.hydra.android.sdk.utils.Logger\nimport com.capillary.hydra.inbox.core.listener.OnMessagesAvailableListener\nimport com.capillary.hydra.inbox.core.model.InboxMessage\nimport com.facebook.react.bridge.Arguments\nimport com.facebook.react.bridge.WritableArray\nimport com.hydrarnsdk.classes.EventTypes\nimport com.hydrarnsdk.classes.RnHydra\nimport com.hydrarnsdk.utils.inboxMessageToReadableMap\n\n\nclass RnOnMessagesAvailableListener: OnMessagesAvailableListener {\n override fun onMessagesAvailable(inboxMessages: List<InboxMessage>) {\n   Logger.v(\"onMessagesAvailable, total messages - ${inboxMessages.size}\")\n   val list : WritableArray = Arguments.createArray()\n   inboxMessages.forEach {\n     val item = inboxMessageToReadableMap(it)\n     list.pushMap(item)\n   }\n   RnHydra.emitEvent(EventTypes.ON_MESSAGES_AVAILABLE.event, list)\n }\n}\nKeep the package name as of your application’s package name\niOS\nFor iOS, we need to setup the Native bridge module methods like we did for Android -\nNative iOS bridge APIs interface\nOpen RnHydraModule.m bridge file and add the following notification center APIs -\nRnHydraModule.m\n// Push notification inbox core\nRCT_EXTERN_METHOD(startNotificationCenterActivity)\n\n\nRCT_EXTERN_METHOD(fetchInboxMessages)\n\n\nRCT_EXTERN_METHOD(getUnreadNotificationCount)\n\n\nRCT_EXTERN_METHOD(trackInboxMessageClick:)\n\n\nRCT_EXTERN_METHOD(deleteInboxMessage:)\n\n\nRCT_EXTERN_METHOD(deleteAllInboxMessages)\nNative iOS bridge APIs implementation\nNow, we need to add its implementation in the RnHydraSdk.swift file. Open the file and copy following APIs in it -\nSwift\n// ********************* push notification center inbox apis *********************\n\n\n @objc(startNotificationCenterActivity)\n func startNotificationCenterActivity() {\n   RnHydraCore.shared.showNotificationController()\n }\n  @objc(fetchInboxMessages)\n func getInboxMessages() {\n   RnHydraCore.shared.getInboxMessages()\n }\n  @objc(getUnreadNotificationCount)\n func getUnreadNotificationCount() {\n   RnHydraCore.shared.getUnreadNotificationCount()\n }\n  @objc(trackInboxMessageClick:)\n func trackInboxMessageClick(message: [AnyHashable : Any]) {\n   RnHydraCore.shared.trackInboxMessageClick(message: message)\n }\n  @objc(deleteInboxMessage:)\n func deleteInboxMessage(message: [AnyHashable : Any]) {\n   RnHydraCore.shared.deleteInboxMessage(message: message)\n }\n  @objc(deleteAllInboxMessages)\n func deleteAllInboxMessages() {\n   RnHydraCore.shared.deleteAllInboxMessages()\n }\nUpdate RnHydraCore object\nThe actual implementation for these methods needs to be added in the RnHydraCore object, add following methods to the instance -\nSwift\npublic func showNotificationController() {\n   if (self.inboxUICore != nil) {\n     DispatchQueue.main.async {\n       guard let notificationCenter = self.inboxUICore?.getNotificationCenter()\n       else { return  }\n       print(\"Showing notification center UI\")\n       self.navController?.pushViewController(notificationCenter, animated: true)\n     }\n   }\n }\n\n\n public func getInboxMessages() {\n   let  notifications  = self.inboxCore?.getNotifications()\n   var notificationsJson: [Any] = []\n   for notification in notifications! {\n     notificationsJson.append(notification.getJSON())\n   }\n   emitEvent(event: EventTypes.ON_MESSAGES_AVAILABLE.rawValue, data: notificationsJson)\n }\n  public func getUnreadNotificationCount() {\n   let count = self.inboxCore?.getUnreadNotificationCount()\n   emitEvent(event: EventTypes.ON_UNREAD_MESSAGE_COUNT_AVAILABLE.rawValue, data: count ?? 0)\n }\n\n\n public func trackInboxMessageClick(message: [AnyHashable : Any]) {\n   let payload = HydraNotificationPayload.generate(from: message)\n   print(\"Marking inbox message for scope \\(payload.scope) as read.\")\n   self.inboxCore?.handleNotification(notification: payload, action: .read)\n }\n  public func deleteInboxMessage(message: [AnyHashable : Any]) {\n   let payload = HydraNotificationPayload.generate(from: message)\n   print(\"Deleting inbox message for scope \\(payload.scope).\")\n   self.inboxCore?.handleNotification(notification: payload, action: .delete)\n }\n\n\n public func deleteAllInboxMessages() {\n   print(\"Deleting all inbox messages.\")\n   self.inboxCore?.handleDeleteAllNotifications()\n }\nReact Native\nReact Native Bridge APIs\nExpose these native methods to the React Native by adding the following code in the HydraModule.ts\nTypeScript\n/**\n* ********************************************************************************\n*                      Hydra Notification Center APIs\n* ********************************************************************************\n*/\n/**\n*\n* A method to start the notification center activity/component.\n* This method opens the notification center on new screen.\n*/\nexport function startNotificationCenterActivity() {\n return RnHydraSdk.startNotificationCenterActivity();\n}\n\n\n/**\n* A method to fetch the notification inbox messages from the SDK.\n*\n* @param callback - A callback function that will be called when the inbox messages are available.\n*/\nexport function getInboxMessages(callback: (event: InboxMessage[]) => void) { \n addEventListener(RnEventTypes.ON_MESSAGES_AVAILABLE, (event) => {\n   callback(event)\n   removeEventListener(RnEventTypes.ON_MESSAGES_AVAILABLE);\n });\n RnHydraSdk.fetchInboxMessages();\n}\n\n\n/**\n* A method to get the unread notification count from the SDK.\n*\n* @param callback - A callback function that will be called when the unread notification count is available.\n*/\nexport function getUnreadNotificationCount(callback: (event: number) => void) {\n addEventListener(RnEventTypes.ON_UNREAD_MESSAGE_COUNT_AVAILABLE, (event) => {\n   callback(event);\n   removeEventListener(RnEventTypes.ON_UNREAD_MESSAGE_COUNT_AVAILABLE);\n });\n RnHydraSdk.getUnreadNotificationCount();\n}\n\n\n/**\n* A method to inform SDK the inbox message is read.\n*\n* @param inboxMessage - The inbox message that was clicked.\n*\n* @returns A promise that resolves when the inbox message is successfully marked as read.\n*/\nexport function trackInboxMessageClick(inboxMessage: InboxMessage) {\n return RnHydraSdk.trackInboxMessageClick(inboxMessage);\n}\n\n\n/**\n* A methof to delete the inbox message from the SDK.\n*\n* @returns A promise that resolves when the inbox message is successfully deleted.\n*/\nexport function deleteInboxMessage(inboxMessage: InboxMessage) {\n return RnHydraSdk.deleteInboxMessage(inboxMessage);\n}\n\n\n/**\n* A method to delete all the inbox messages from the SDK.\n*\n* @returns A promise that resolves when all the inbox messages are successfully deleted.\n*/\nexport function deleteAllInboxMessages() {\n return RnHydraSdk.deleteAllInboxMessages();\n}\nUpdate Types\nAdd following types to the types.ts file -\nTypeScript\n// Interface for TextContent\ninterface TextContent {\n title: string;\n message: string;\n}\n\n\n// Interface for MediaContent\ninterface MediaContent {\n image: string;\n}\n\n\n// Interface for InboxMessage\nexport interface InboxMessage {\n scope: string,\n accountId: string,\n senderId: string,\n messageId: string,\n gateway: GATEWAY,\n textContent: TextContent,\n action: CTA,\n mediaContent: MediaContent,\n isRead: Boolean,\n createdAt: string,\n payload: JSONObject;\n}\nUsing Notification Center APIs\nUpdate React Native Hydra initialization\nOpen the init() method in React Native code and add the notificationCenterConfig to the method -\nTypeScript\ninit({\n       ...\n       inAppConfig: {\n         defaultImage: \"transparent_fallback\",\n       },\n       notificationCenterConfig: {\n         defaultImage: \"notification_center_fallback\",\n         notificationCenterOffset: 10,\n         useNotificationCenterUI: true, // iOS only\n       },\n     });\nTo use the notification center ui, you need to add the default image to the Android and iOS app folders -\nAdding default image to Android\nOpen android/app/res/drawable and add the default fallback image for the notification center.\nAdding default image to iOS\nXCode app and add the default fallback image for the notification center.\nPlease make sure to keep the name of the image same as mentioned in the notificationCenterConfig above.\nIf you want to show the built-in notification center ui in iOS, it is important to set the\nuseNotificationCenterUI\nto true, if it's not set or set to false, the app won’t show the notification center UI.\nGet Notifications list\nThis API is used to get the list of all notifications user has received -\nTo get the list of notification messages, use following API -\nTypeScript\ngetInboxMessages((messages: InboxMessage[]) => {\n       console.log(JSON.stringify(messages));\n       deleteInboxMessage(messages[0])\n     });\nGet Unread Notifications count\nTo get the total number of unread notification messages, use the following API -\nTypeScript\ngetUnreadNotificationCount((count) => {\n       console.log('Unread notification count:', count);\n     });\nTrack Notification Click event -\nWhen user clicks on a notification, you can call this API to let Hydra SDK know, user clicked on the notification.\nTypeScript\ntrackInboxMessageClick(messages[0]);\nDelete selected message\nTo delete a specific message, please call the delete Inbox API\nTypeScript\ndeleteInboxMessage(messages[0])\nDelete selected message\nTo delete all messages, please call the delete All Inbox API\nTypeScript\ndeleteAllInboxMessages()\nNOTE:\nYou need to call the getInboxMessages() API every time you either track click or delete the notification.\nShow Notification Center UI\nTo show the built-in notification center, please make sure the useNotificationCenterUI flag in the notificationCenterConfig is enabled.\nUse startNotificationCenterActivity API to show the built-in notification center UI -\nTypeScript\nconst onShowNotificationCenter = () => {\n   startNotificationCenterActivity();\n }\nCustomizing Notification Center Screen\nHydra SDK gives you the way to customize the built-in notifications center screen the way you want to. You can change the background color, title, message, time text color, and more.\nIt works differently in Android vs iOS. In Android though. Here is how you can customize the screen in Android and iOS platforms.\nAndroid\nIf you do not customize any items in the notification center UI, then it uses its default settings. But in the above view of notification center, application can customize the following attributes by overriding their corresponding styles\nTo start customizing the Notification Center UI in Android, you will need to create Styles and Colors file in the Android app - android/app/src/res/values folder, if this folder is not present already, then please add a new package called values in res folder and then create following files\nstyles.xml\nCreate a new file in values package called styles.xml, we will define our themes in this resource file\ncolors.xml\nCreate a new file in the values package called colors.xml, we will define the colors we will use in styles in this resource file.\nFonts.xml\nIf you are using custom fonts in your app, you must have already set them for React Native elements, you can also set them for using it in Native views, please follow this article to set the fonts and use them in the styling below -\nhttps://developer.android.com/guide/topics/resources/font-resource\nDimens.xml\nCreate Toolbar Style\nTo customize the title and navigation icon in the toolbar override\nInboxToolbarStyle\nXML\n<style name=\"HydraInboxToolbarStyle\" parent=\"Theme.AppCompat\">\n   <item name=\"android:textColorSecondary\">@color/hydra_inbox_toolbar_text_color</item>\n   <item name=\"android:textColorPrimary\">@color/hydra_inbox_toolbar_text_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textSize\">@dimen/hydra_inbox_toolbar_font_size</item>\n   <item name=\"android:textStyle\">bold</item>\n   <item name=\"android:background\">@color/hydra_inbox_toolbar_background_color</item>\n   <item name=\"android:navigationIcon\">@drawable/ic_menu_black_24dp</item>\n\n\n</style>\nTo customize the unread messages count in toolbar override InboxToolbarTextStyle\nXML\n<style name=\"HydraInboxToolbarTextStyle\">\n   <item name=\"android:textColor\">@color/hydra_inbox_toolbar_text_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textSize\">@dimen/hydra_inbox_toolbar_font_size</item>\n   <item name=\"android:textStyle\">bold</item>\n</style>\nTo customize the CLEAR ALL button in toolbar override InboxToolbarButtonStyle\nXML\n<style name=\"HydraInboxToolbarButtonStyle\">\n   <item name=\"android:textColor\">@color/hydra_inbox_toolbar_button_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textSize\">@dimen/hydra_inbox_toolbar_button_size</item>\n   <item name=\"android:textStyle\">normal</item>\n</style>\nInbox Messages\nAny message displayed in the notification center can be either in the\nunread state or read state\n. To create a distinction among the two, SDK provides separate styles for the individual entities as follows\nInbox message background Color\n- To change the color of the background of individual messages override the following color\nUnread State\nXML\n<color name=\"hydra_unread_message_background_color\">#FFFFFF</color>\nRead State\nXML\n<color name=\"hydra_read_message_background_color\">#FFFFFF</color>\nTitle\n- To change the style of the title override the following style\nUnread State\nXML\n<style name=\"HydraUnReadInboxTitleTextStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_title_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_title_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">bold</item>\n   <item name=\"android:maxLines\">2</item>\n</style>\nRead State\nXML\n<style name=\"HydraReadInboxTitleTextStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_title_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_title_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">normal</item>\n   <item name=\"android:maxLines\">2</item>\n</style>\nSummary\n- To change the style of the message override the following style.\nUnread State\nXML\n<style name=\"HydraUnReadInboxMessageTextStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_message_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_message_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">bold</item>\n   <item name=\"android:maxLines\">3</item>\n</style>\nRead State\nXML\n<style name=\"HydraReadInboxMessageTextStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_message_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_message_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">normal</item>\n   <item name=\"android:maxLines\">3</item>\n</style>\nTimeStamp\n- To change the style of the timestamp override the following style\nUnread State\nXML\n<style name=\"HydraUnReadInboxMessageTimeStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_time_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_time_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">bold</item>\n</style>\nRead State\nXML\n<style name=\"HydraReadInboxMessageTimeStyle\">\n   <item name=\"android:textSize\">@dimen/hydra_inbox_time_font_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_time_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">bold</item>\n</style>\nInboxEmptyBoxTextStyle\nTo customize the empty text box view when no notifications are available override\nInboxEmptyBoxTextStyle\nXML\n<style name=\"HydraInboxEmptyBoxTextStyle\">\n   <item name=\"android:background\">@color/hydra_inbox_transparent_color</item>\n   <item name=\"android:textSize\">@dimen/hydra_inbox_empty_box_text_size</item>\n   <item name=\"android:textColor\">@color/hydra_inbox_empty_box_message_color</item>\n   <item name=\"android:fontFamily\">@font/roboto</item>\n   <item name=\"android:textStyle\">normal</item>\n</style>\nThis is how the default notification UI looks like on Android -\nNow, if we set the background color for an unread message in the colors.xml  -\nXML\n<color name=\"hydra_unread_message_background_color\">#AFAFAF</color>\nAnd rerun the application, the app will have the grey background color to the message row -\niOS\nFor iOS platform, you need to set the notification configuration object in the Hydra’s notificationCenterConfiguration object -\nAdd Inbox UI configuration type\nOpen types.ts and add HydraReactNativeInboxUIConfiguration type -\ntypes.ts\n// Interface for HydraReactNativeInboxUIConfiguration to be passed to the notification center config\ninterface HydraReactNativeInboxUIConfiguration {\n cellBackgroundColor?: string;\n cellTitleLabelTextColor?: string;\n cellMessageLabelTextColor?: string;\n cellTimeLabelTextColor?: string;\n cellTitleLabelFont?: HydraFont;\n cellMessageLabelFont?: HydraFont;\n cellTimeLabelFont?: HydraFont;\n cellTitleLabelLineLimit?: number;\n cellMessageLabelLineLimit?: number;\n}\nNow add inboxUIConfiguration using above type to set the unread and read message configuration, update NotificationCenterConfig class as following -\nTypeScript\nexport interface NotificationCenterConfig {\n defaultImage: string;\n notificationCenterOffset: number;\n useNotificationCenterUI: boolean;\n inboxUIConfiguration?: {  // iOS only\n   unreadMessageConfig?: HydraReactNativeInboxUIConfiguration;\n   readMessageConfig?: HydraReactNativeInboxUIConfiguration;\n };\n}\nThe inboxUIConfiguration is used only for iOS and is optional, if you want to use the default built-in UI, then you can ignore setting this object while initializing the Hydra SDK.\nUpdate Hydra init method to set notification configuration for iOS UI -\nTypeScript\ninit({\n       accountId: Platform.OS === \"android\" ? \"buk-23715\" : \"fki-7723\",\n       baseURL:\n         \"https://vo4mrjpidb.execute-api.us-east-1.amazonaws.com/crm-nightly-new/\",\n       sslPublicKey: \"Qfmq8ouVRhwcHdl0piZPcWtYvJmGhoROhmdadoesmlA=\",\n       country: \"India\",\n       city: \"Pune\",\n       countryCode: \"91\",\n       timezone: \"Asia/Kolkata\",\n       captureViewPortDetails: true,\n       isDisableAppLaunchedEvent: false,\n       debugLevel: 2,\n       fcmConfig: {\n         isFCMRegistrationEnabled: true,\n       },\n       notificationConfig: {\n         smallIcon: \"small_icon\",\n         notificationColor: \"teal_200\",\n         isMultipleNotificationInDrawerEnabled: true,\n       },\n       inAppConfig: {\n         defaultImage: \"transparent_fallback\",\n       },\n       notificationCenterConfig: {\n         defaultImage: \"notification_center_fallback\",\n         notificationCenterOffset: 10,\n         useNotificationCenterUI: true,\n         inboxUIConfiguration: {\n           unreadMessageConfig: {\n             cellBackgroundColor: \"#fff\",\n             cellTitleLabelTextColor: \"#000\",\n             cellTimeLabelTextColor: \"#B0B0B0\",\n             cellMessageLabelTextColor: \"#A0A0A0\",\n             cellTitleLabelLineLimit: 3,\n             cellMessageLabelLineLimit: 2,\n             cellTimeLabelFont: {\n               size: 12,\n               name: \"Helvetica\",\n             },\n             cellTitleLabelFont: {\n               size: 16,\n               name: \"Helvetica-Bold\",\n             },\n             cellMessageLabelFont: {\n               size: 14,\n               name: \"Helvetica\",\n             },\n           },\n           readMessageConfig: {\n             cellBackgroundColor: \"#000\",\n             cellTitleLabelTextColor: \"#fff\",\n             cellTimeLabelTextColor: \"#B0B0B0\",\n             cellMessageLabelTextColor: \"#A0A0A0\",\n             cellTitleLabelLineLimit: 3,\n             cellMessageLabelLineLimit: 2,\n             cellTimeLabelFont: {\n               size: 12,\n               name: \"Helvetica\",\n             },\n             cellTitleLabelFont: {\n               size: 16,\n               name: \"Helvetica-Bold\",\n             },\n             cellMessageLabelFont: {\n               size: 14,\n               name: \"Helvetica\",\n             },\n           },\n         },\n       },\n     });\nIf you notice, we are setting readMessageConfig and unreadMessageConfig here.\nNOTE:\nAll the parameters in this setting are optional and you can set only parameters that you want to customize.\nTable of Contents\nPrerequisites\nIntegration\nDependencies\nAndroid\niOS\nNotification Center APIs\nAndroid\niOS\nReact Native\nUsing Notification Center APIs\nUpdate React Native Hydra initialization\nCustomizing Notification Center Screen\nAndroid\niOS"
  }
]